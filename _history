{"entries":[{"timestamp":1726220160825,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"l\"><"],[-1,"variables><variable id=\"Lm_!Rz#y_heQx{VJb[qR\">strip</variable></variables><block type=\"device_forever\" x=\"200\" y=\"-96\"><statement name=\"HANDLER\"><block type=\"neopixel_rotate\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"Lm_!Rz#y_heQx{VJb[qR\">strip</field></block></value><value name=\"offset\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">200</field></shadow></value></block></next></block></statement></block><block type=\"pxt-on-start\" x=\"34\" y=\"52\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"Lm_!Rz#y_heQx{VJb[qR\">strip</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"neopixel_create\"><field name=\"pin\">DigitalPin.P0</field><field name=\"mode\">NeoPixelMode.RGB</field><value name=\"numleds\"><shadow type=\"math_number\"><field name=\"NUM\">24</field></shadow></value></block></value><next><block type=\"neopixel_set_strip_rainbow\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"Lm_!Rz#y_heQx{VJb[qR\">strip</field></block></value><value name=\"startHue\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><value name=\"endHue\"><shadow type=\"math_number\"><field name=\"NUM\">360</field></shadow></value></block></next></block></statement"],[1,"block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\""],[0,"></b"]],"start1":52,"start2":52,"length1":1410,"length2":99}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let strip = neopixel.create(DigitalPin.P0, 24, NeoPixelMode.RGB)\nstrip.showRainbow(1, 360)\nbasic.forever(function () {\n    strip.rotate(1)\n    basic.pause(200)"],[1,"basic.forever(function () {\n\t"],[0,"\n})\n"]],"start1":0,"start2":0,"length1":163,"length2":33}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"neopixel\": \"github:microsoft/pxt-neopixel#v0.7.6\""],[0,"\n   "]],"start1":138,"start2":138,"length1":68,"length2":8}]}]},{"timestamp":1726220220561,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"x=\"2"],[-1,"67"],[1,"00"],[0,"\" y=\"-"],[-1,"168"],[1,"96"],[0,"\"><s"]],"start1":159,"start2":159,"length1":19,"length2":18},{"diffs":[[0,"VAR\""],[-1," id=\"Lm_!Rz#y_heQx{VJb[qR\">strip</field></block></value><value name=\"offset\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"neopixel_shift\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\""],[0," id="]],"start1":292,"start2":292,"length1":256,"length2":8},{"diffs":[[0,"t></block></"],[-1,"next></block></"],[0,"statement></"]],"start1":581,"start2":581,"length1":39,"length2":24}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"(1)\n"],[-1,"    strip.shift(1)\n"],[0,"    "]],"start1":135,"start2":135,"length1":27,"length2":8}]}]},{"timestamp":1726220797251,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"ble id=\""],[-1,"e%?B/KcK7G1GMa}|XACI"],[1,"Lm_!Rz#y_heQx{VJb[qR"],[0,"\">strip<"]],"start1":72,"start2":72,"length1":36,"length2":36},{"diffs":[[0,"x=\"2"],[-1,"33"],[1,"67"],[0,"\" y=\"-"],[-1,"220"],[1,"168"],[0,"\"><s"]],"start1":159,"start2":159,"length1":19,"length2":19},{"diffs":[[0,"AR\" id=\""],[-1,"e%?B/KcK7G1GMa}|XACI"],[1,"Lm_!Rz#y_heQx{VJb[qR"],[0,"\">strip<"]],"start1":294,"start2":294,"length1":36,"length2":36},{"diffs":[[0,"pixel_sh"],[-1,"ow"],[1,"ift"],[0,"\"><value"]],"start1":467,"start2":467,"length1":18,"length2":19},{"diffs":[[0,"AR\" id=\""],[-1,"e%?B/KcK7G1GMa}|XACI"],[1,"Lm_!Rz#y_heQx{VJb[qR"],[0,"\">strip<"]],"start1":542,"start2":542,"length1":36,"length2":36},{"diffs":[[0,"/block></value><"],[1,"value name=\"offset\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><"],[0,"next><block type"]],"start1":586,"start2":586,"length1":32,"length2":124},{"diffs":[[0,"x=\"3"],[-1,"7"],[1,"4"],[0,"\" y=\"5"],[-1,"3"],[1,"2"],[0,"\"><s"]],"start1":902,"start2":902,"length1":16,"length2":16},{"diffs":[[0,"ock "],[-1,"type=\"device_print_message\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\">O</field></shadow></value><next><block "],[0,"type"]],"start1":945,"start2":945,"length1":133,"length2":8},{"diffs":[[0,"AR\" id=\""],[-1,"e%?B/KcK7G1GMa}|XACI"],[1,"Lm_!Rz#y_heQx{VJb[qR"],[0,"\">strip<"]],"start1":984,"start2":984,"length1":36,"length2":36},{"diffs":[[0,"UM\">"],[-1,"96"],[1,"24"],[0,"</fi"]],"start1":1285,"start2":1285,"length1":10,"length2":10},{"diffs":[[0,"id=\""],[-1,"e%?B/KcK7G1GMa}|XACI"],[1,"Lm_!Rz#y_heQx{VJb[qR"],[0,"\">st"]],"start1":1445,"start2":1445,"length1":28,"length2":28},{"diffs":[[0,"t></block></"],[-1,"next></block></"],[0,"statement></"]],"start1":1701,"start2":1701,"length1":39,"length2":24}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.showString(\"O\")\n"],[0,"let "]],"start1":0,"start2":0,"length1":26,"length2":4},{"diffs":[[0,"P0, "],[-1,"96"],[1,"24"],[0,", Ne"]],"start1":39,"start2":39,"length1":10,"length2":10},{"diffs":[[0,"strip.sh"],[-1,"ow("],[1,"ift(1"],[0,")\n    ba"]],"start1":143,"start2":143,"length1":19,"length2":21}]}]},{"timestamp":1726220966600,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"ock "],[-1,"type=\"radio_on_number_drag\" x=\"355\" y=\"-603\"><value name=\"HANDLER_DRAG_PARAM_receivedNumber\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedNumber</field></block></value></block><block "],[0,"type"]],"start1":133,"start2":133,"length1":257,"length2":8},{"diffs":[[0," x=\""],[-1,"54"],[1,"23"],[0,"3\" y=\"-"],[-1,"384"],[1,"220"],[0,"\"><s"]],"start1":158,"start2":158,"length1":20,"length2":20},{"diffs":[[0," x=\""],[-1,"48"],[1,"37"],[0,"\" y=\""],[-1,"8"],[1,"53"],[0,"\"><s"]],"start1":808,"start2":808,"length1":16,"length2":17}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"enum LightState {\n    Brake,\n    LeftIndicate,\n    RightIndicate\n}\n\nlet light_state = LightState.Brake;\n\nradio.onReceivedNumber(function (receivedNumber) {\n\tlight_state = receivedNumber\n})\n"],[0,"basi"]],"start1":0,"start2":0,"length1":193,"length2":4},{"diffs":[[0,"GB)\n"],[-1,"let indicatorRange = \n"],[0,"stri"]],"start1":83,"start2":83,"length1":30,"length2":8},{"diffs":[[0,"1, 360)\n"],[1,""],[0,"basic.fo"]],"start1":105,"start2":105,"length1":16,"length2":16},{"diffs":[[0,") {\n"],[-1,"    if (light_state == LightState.Brake) {\n\n    } \n    \n    if (light_state == LightState.LeftIndicate) {\n\n    }\n\n    if (light_state == LightState.RightIndicate) {\n\n    }\n"],[0,"    "]],"start1":137,"start2":137,"length1":180,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":310,"start2":310,"length1":17,"length2":21}]}]},{"timestamp":1726221563069,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"O\")\nlet "],[-1,"leftS"],[1,"s"],[0,"trip = n"]],"start1":207,"start2":207,"length1":21,"length2":17},{"diffs":[[0,"GB)\nlet "],[-1,"leftI"],[1,"i"],[0,"ndicator"]],"start1":272,"start2":272,"length1":21,"length2":17},{"diffs":[[0,"e = "],[-1,"leftStrip.range(0,30)\n\nlet rightStrip = neopixel.create(DigitalPin.P1, 96, NeoPixelMode.RGB)\nlet rightIndicatorRange = rightStrip.range(0, 30)\n\ninput.onButtonPressed(Button.A, function() {\n    light_state += 1;\n}"],[1,"\nstrip.showRainbow(1, 360"],[0,")\nba"]],"start1":293,"start2":293,"length1":220,"length2":33},{"diffs":[[0,") {\n"],[-1,"        leftStrip.showColor(0xff0000)"],[0,"\n   "]],"start1":391,"start2":391,"length1":45,"length2":8},{"diffs":[[0,") {\n"],[-1,"        leftIndicatorRange.showColor(0xffa500)"],[0,"\n   "]],"start1":454,"start2":454,"length1":54,"length2":8},{"diffs":[[0,") {\n"],[-1,"        rightIndicatorRange.showColor(0xffa500)"],[0,"\n    }\n"],[-1,"\n"],[0,"    "],[-1,"leftStrip.show()\n    rightS"],[1,"strip.rotate(1)\n    s"],[0,"trip"]],"start1":513,"start2":513,"length1":94,"length2":40}]}]},{"timestamp":1726221776976,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"= 1;\n})\n"],[-1,"\n\n"],[0,"basic.fo"]],"start1":511,"start2":511,"length1":18,"length2":16}]}]},{"timestamp":1726223153161,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"1;\n})\n\n\n"],[-1,"\n"],[0,"basic.fo"]],"start1":513,"start2":513,"length1":17,"length2":16}]}]},{"timestamp":1726223155587,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"rake"],[-1," = 0x01"],[0,",\n  "]],"start1":23,"start2":23,"length1":15,"length2":8},{"diffs":[[0,"cate"],[-1," = 0x02"],[0,",\n  "]],"start1":41,"start2":41,"length1":15,"length2":8},{"diffs":[[0,"cate"],[-1," = 0x04,\n    Hazard = LeftIndicate | RightIndicate | Brake"],[0,"\n}\n\n"]],"start1":60,"start2":60,"length1":66,"length2":8},{"diffs":[[0,"ate."],[-1,"Hazard"],[1,"Brake"],[0,";\n\nr"]],"start1":93,"start2":93,"length1":14,"length2":13},{"diffs":[[0,"ber) {\n\t"],[1,"light_state = receivedNumber"],[0,"\n})\n"],[-1,"\n"],[0,"basic.sh"]],"start1":149,"start2":149,"length1":21,"length2":48},{"diffs":[[0,"ng(\"O\")\n"],[-1,"\n"],[0,"let left"]],"start1":203,"start2":203,"length1":17,"length2":16},{"diffs":[[0,",30)"],[-1,"\nlet left_on_off = false\nlet left_counter = 0;"],[0,"\n\nle"]],"start1":322,"start2":322,"length1":54,"length2":8},{"diffs":[[0," 30)"],[-1,"\nlet right_counter = 0;\nlet right_on_off = false;"],[0,"\n\nin"]],"start1":443,"start2":443,"length1":57,"length2":8},{"diffs":[[0,"})\n\n"],[-1,"const indicator_quantum = 4"],[0,"\n\nba"]],"start1":516,"start2":516,"length1":35,"length2":8},{"diffs":[[0,"if (light_state "],[-1,"&"],[1,"=="],[0," LightState.Brak"]],"start1":554,"start2":554,"length1":33,"length2":34},{"diffs":[[0,"00)\n"],[-1,"        rightStrip.showColor(0xff0000)\n"],[0,"    "]],"start1":627,"start2":627,"length1":47,"length2":8},{"diffs":[[0,"if (light_state "],[-1,"&"],[1,"=="],[0," LightState.Left"]],"start1":647,"start2":647,"length1":33,"length2":34},{"diffs":[[0,") {\n"],[-1,"        if (left_on_off)\n    "],[0,"    "]],"start1":689,"start2":689,"length1":37,"length2":8},{"diffs":[[0,"00)\n"],[-1,"        else\n            leftIndicatorRange.showColor(0);\n\n        if (left_counter == 0)\n            left_on_off = !left_on_off\n\n        left_counter = (left_counter + 1) % indicator_quantum\n"],[0,"    "]],"start1":736,"start2":736,"length1":200,"length2":8},{"diffs":[[0,"ate "],[-1,"&"],[1,"=="],[0," Lig"]],"start1":763,"start2":763,"length1":9,"length2":10},{"diffs":[[0,") {\n"],[-1,"        if (right_on_off)\n    "],[0,"    "]],"start1":794,"start2":794,"length1":38,"length2":8},{"diffs":[[0,"00)\n"],[-1,"        else \n            rightIndicatorRange.showColor(0);\n        \n        if (right_counter == 0)\n            right_on_off = !right_on_off\n\n        right_counter = (right_counter + 1) % indicator_quantum\n"],[0,"    "]],"start1":842,"start2":842,"length1":215,"length2":8},{"diffs":[[0,"c.pause("],[-1,"5"],[1,"20"],[0,"0)\n})\n"]],"start1":904,"start2":904,"length1":15,"length2":16}]}]},{"timestamp":1726223738782,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ber) {\n\t"],[-1,"light_state "],[0,"\n})\n\nbas"]],"start1":222,"start2":222,"length1":28,"length2":16}]}]},{"timestamp":1726225565975,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ate "],[-1,"|= "],[0,"\n})\n"]],"start1":238,"start2":238,"length1":11,"length2":8}]}]},{"timestamp":1726225567091,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"htState."],[-1,"Brake"],[1,"Hazard"],[0,";\n\nradio"]],"start1":161,"start2":161,"length1":21,"length2":22},{"diffs":[[0," |= "],[-1,"(LightState.Brake | receivedNumber);"],[0,"\n})\n"]],"start1":241,"start2":241,"length1":44,"length2":8},{"diffs":[[0,"30)\n"],[-1,"let leftBrakeRange = leftStrip.range(30,96)\n"],[0,"let "]],"start1":385,"start2":385,"length1":52,"length2":8},{"diffs":[[0,"30)\n"],[-1,"let rightBrakeRange = rightStrip.range(30, 96)\n"],[0,"let "]],"start1":552,"start2":552,"length1":55,"length2":8},{"diffs":[[0,"e;\n\n"],[-1,"const indicator_quantum = 4\n\nlet idx = 0;\nlet arr = [LightState.LeftIndicate, LightState.RightIndicate, LightState.Hazard]\n"],[0,"inpu"]],"start1":602,"start2":602,"length1":131,"length2":8},{"diffs":[[0,") {\n"],[-1,"    idx += 1;\n"],[0,"    "]],"start1":647,"start2":647,"length1":22,"length2":8},{"diffs":[[0,"ate "],[1,"+"],[0,"= "],[-1,"LightState.Brake | arr[idx]\n})\n                                      "],[1,"1;\n})\n\nconst indicator_quantum = 4\n"],[0,"\nbas"]],"start1":663,"start2":663,"length1":79,"length2":46},{"diffs":[[0,"    left"],[-1,"BrakeRange"],[1,"Strip"],[0,".showCol"]],"start1":780,"start2":780,"length1":26,"length2":21},{"diffs":[[0,"ight"],[-1,"BrakeRange"],[1,"Strip"],[0,".sho"]],"start1":823,"start2":823,"length1":18,"length2":13}]}]},{"timestamp":1726226079019,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"| Brake\n"],[-1,"    \n"],[0,"}\n\nlet l"]],"start1":129,"start2":129,"length1":21,"length2":16}]}]},{"timestamp":1726229366071,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ake\n    "],[-1,"P"],[0,"\n}\n\nlet "]],"start1":133,"start2":133,"length1":17,"length2":16}]}]},{"timestamp":1726229367978,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"04,\n"],[-1,"    Rainbow = 0x08,\n    BumbleBee = 0x10,\n"],[0,"    "]],"start1":83,"start2":83,"length1":50,"length2":8},{"diffs":[[0,"rake"],[-1,",\n}\n\nconst INDICATOR_QUANTUM = 4\nconst STRIP_LENGTH = 96"],[1,"\n    P\n}"],[0,"\n\nle"]],"start1":132,"start2":132,"length1":64,"length2":16},{"diffs":[[0,"ake;"],[-1,"\nlet prev_state = light_state;"],[0,"\n\nra"]],"start1":177,"start2":177,"length1":38,"length2":8},{"diffs":[[0,"Pin.P0, "],[-1,"STRIP_LENGTH"],[1,"96"],[0,", NeoPix"]],"start1":353,"start2":353,"length1":28,"length2":18},{"diffs":[[0,"ip.range(30,"],[-1," STRIP_LENGTH"],[1,"96"],[0,")\nlet left_o"]],"start1":458,"start2":458,"length1":37,"length2":26},{"diffs":[[0,"Pin.P1, "],[-1,"STRIP_LENGTH"],[1,"96"],[0,", NeoPix"]],"start1":561,"start2":561,"length1":28,"length2":18},{"diffs":[[0,"nge(30, "],[-1,"STRIP_LENGTH"],[1,"96"],[0,")\nlet ri"]],"start1":676,"start2":676,"length1":28,"length2":18},{"diffs":[[0,"false;\n\n"],[1,"const indicator_quantum = 4\n\n"],[0,"let idx "]],"start1":730,"start2":730,"length1":16,"length2":45},{"diffs":[[0," 0;\nlet "],[-1,"mode"],[1,"arr"],[0," = [Ligh"]],"start1":776,"start2":776,"length1":20,"length2":19},{"diffs":[[0,"Button.A"],[-1,"B"],[0,", functi"]],"start1":883,"start2":883,"length1":17,"length2":16},{"diffs":[[0,"idx]\n})\n"],[-1,"\n"],[0,"        "]],"start1":961,"start2":961,"length1":17,"length2":16},{"diffs":[[0,") {\n"],[-1,"\n    if (light_state & LightState.BumbleBee) {\n        if ((prev_state & LightState.BumbleBee) == 0) {\n            for (let i = 0; i < STRIP_LENGTH; i++) {\n                let col = 0\n                if (i%2 == 0) {\n                    col = 0x00ffff;\n                }\n                leftStrip.setPixelColor(i, col);\n                rightStrip.setPixelColor(i, col);\n            }\n        }\n        leftStrip.rotate()\n        rightStrip.rotate()\n    } else if (light_state & LightState.Rainbow) {\n        if ((prev_state & LightState.BumbleBee) == 0) {\n            leftStrip.showRainbow(1,360)\n            rightStrip.showRainbow(1, 360);\n        }\n        leftStrip.rotate()\n        rightStrip.rotate()\n    } else {\n        // standard operating mode\n    "],[0,"    "]],"start1":1032,"start2":1032,"length1":765,"length2":8},{"diffs":[[0,") {\n        "],[-1,"    "],[0,"leftBrakeRan"]],"start1":1074,"start2":1074,"length1":28,"length2":24},{"diffs":[[0,"r(0xff0000)\n"],[-1,"    "],[0,"        righ"]],"start1":1109,"start2":1109,"length1":28,"length2":24},{"diffs":[[0,"ff0000)\n    "],[-1,"    }\n"],[1,"} "],[0,"\n    "],[1,"\n"],[0,"    if (ligh"]],"start1":1157,"start2":1157,"length1":35,"length2":32},{"diffs":[[0,"cate) {\n        "],[-1,"    "],[0,"if (left_on_off)"]],"start1":1218,"start2":1218,"length1":36,"length2":32},{"diffs":[[0,"f (left_on_off)\n"],[-1,"    "],[0,"            left"]],"start1":1235,"start2":1235,"length1":36,"length2":32},{"diffs":[[0,"00)\n        "],[-1,"    "],[0,"else\n"],[-1,"    "],[0,"            "]],"start1":1298,"start2":1298,"length1":37,"length2":29},{"diffs":[[0,");\n\n        "],[-1,"    "],[0,"if (left_cou"]],"start1":1357,"start2":1357,"length1":28,"length2":24},{"diffs":[[0,"t_counter == 0)\n"],[-1,"    "],[0,"            left"]],"start1":1376,"start2":1376,"length1":36,"length2":32},{"diffs":[[0,"ff\n\n        "],[-1,"    "],[0,"left_counter"]],"start1":1428,"start2":1428,"length1":28,"length2":24},{"diffs":[[0,") % "],[-1,"INDICATOR_QUANTUM\n        }\n\n    "],[1,"indicator_quantum\n    }\n\n"],[0,"    "]],"start1":1472,"start2":1472,"length1":41,"length2":33},{"diffs":[[0,"cate) {\n        "],[-1,"    "],[0,"if (right_on_off"]],"start1":1543,"start2":1543,"length1":36,"length2":32},{"diffs":[[0," (right_on_off)\n"],[-1,"    "],[0,"            righ"]],"start1":1561,"start2":1561,"length1":36,"length2":32},{"diffs":[[0,"00)\n        "],[-1,"    else\n   "],[1,"else \n"],[0,"            "]],"start1":1625,"start2":1625,"length1":36,"length2":30},{"diffs":[[0,"se \n            "],[-1," "],[0,"rightIndicatorRa"]],"start1":1639,"start2":1639,"length1":33,"length2":32},{"diffs":[[0,"lor(0);\n"],[-1,"\n"],[1," "],[0,"       "],[1,"\n"],[0,"     "],[1,"   "],[0,"if (righ"]],"start1":1681,"start2":1681,"length1":29,"length2":33},{"diffs":[[0,"            "],[-1,"    "],[0,"right_on_off"]],"start1":1730,"start2":1730,"length1":28,"length2":24},{"diffs":[[0,"ght_on_off\n\n"],[-1,"    "],[0,"        righ"]],"start1":1760,"start2":1760,"length1":28,"length2":24},{"diffs":[[0,") % "],[-1,"INDICATOR_QUANTUM\n        }\n    }\n    prev_state = light_state;"],[1,"indicator_quantum\n    }"],[0,"\n\n  "]],"start1":1814,"start2":1814,"length1":71,"length2":31}]}]},{"timestamp":1726229977365,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    idx "],[1,"+="],[0," 1;\n    "]],"start1":1040,"start2":1040,"length1":16,"length2":18}]}]},{"timestamp":1726229980935,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"r);\n})\n\n"],[1,"basic.showString(\"O\")"],[0,"\n\nlet le"]],"start1":403,"start2":403,"length1":16,"length2":37},{"diffs":[[0,"ate."],[-1,"Brake, LightState.Hazard, LightState.Rainbow, LightState.BumbleBee]\ninput.onButtonPressed(Button.AB, function() {\n    idx = (idx + 1) % mode.length;\n    light_state = mode[idx]\n    basic.showNumber(idx);\n})\n\ninput.onButtonPressed(Button.A, function () {\n    if (light_state &"],[1,"LeftIndicate,"],[0," Lig"]],"start1":931,"start2":931,"length1":283,"length2":21},{"diffs":[[0,"ate."],[-1,"LeftIndicate)\n        light_state &= ~LightState.LeftIndicate;\n    else \n        light_state |= LightState.LeftIndicate;\n})\n"],[1,"RightIndicate, LightState.Hazard]"],[0,"\ninp"]],"start1":956,"start2":956,"length1":132,"length2":41},{"diffs":[[0,"(Button."],[1,"A"],[0,"B, funct"]],"start1":1015,"start2":1015,"length1":16,"length2":17},{"diffs":[[0,"AB, function"],[-1," "],[0,"() {\n    if "]],"start1":1023,"start2":1023,"length1":25,"length2":24},{"diffs":[[0,"   i"],[-1,"f (light_state & LightState.RightIndicate)\n    "],[1,"dx  1;\n"],[0,"    "]],"start1":1041,"start2":1041,"length1":55,"length2":15},{"diffs":[[0,"ate "],[-1,"&"],[0,"= "],[-1,"~"],[0,"Ligh"]],"start1":1064,"start2":1064,"length1":12,"length2":10},{"diffs":[[0,"ate."],[-1,"RightIndicate;\n    else\n        light_state |= LightState.RightIndicate;\n})\n\nbasic.showNumber(idx);"],[1,"Brake | arr[idx]\n})\n"],[0,"\n   "]],"start1":1077,"start2":1077,"length1":107,"length2":28},{"diffs":[[0,"= 0x"],[1,"00"],[0,"ffff"],[-1,"00"],[0,";\n  "]],"start1":1409,"start2":1409,"length1":14,"length2":14},{"diffs":[[0,"trip.rotate("],[-1,"5"],[0,")\n        ri"]],"start1":1832,"start2":1832,"length1":25,"length2":24},{"diffs":[[0,".rotate("],[-1,"5"],[0,")\n    } "]],"start1":1864,"start2":1864,"length1":17,"length2":16},{"diffs":[[0,"   }"],[-1," else {\n            leftIndicatorRange.showColor(0);\n        }"],[0,"\n\n  "]],"start1":2428,"start2":2428,"length1":70,"length2":8},{"diffs":[[0,"TUM\n"],[-1,"        } else {\n            rightIndicatorRange.showColor(0);\n"],[0,"    "]],"start1":2788,"start2":2788,"length1":71,"length2":8}]}]},{"timestamp":1726230513935,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"htState."],[-1,"Rainbow"],[1,"BumbleBee"],[0,") == 0) "]],"start1":2150,"start2":2150,"length1":23,"length2":25}]}]},{"timestamp":1726230592042,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"        "],[1,"left_counter = (left_counter + 1) % INDICATOR_QUANTUM"],[0,"\n       "]],"start1":2814,"start2":2814,"length1":16,"length2":69}]}]},{"timestamp":1726231726917,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"= !left_on_off\n\n"],[1,"            \n"],[0,"        } else {"]],"start1":2794,"start2":2794,"length1":32,"length2":45}]}]},{"timestamp":1726231751477,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"  }\n"],[-1,"\n        if (left_counter == 0) {\n    "],[0,"    "]],"start1":2011,"start2":2011,"length1":46,"length2":8},{"diffs":[[0,"otate()\n        "],[-1," "],[-1,"   "],[0,"rightStrip.rotat"]],"start1":2034,"start2":2034,"length1":36,"length2":32},{"diffs":[[0,"e()\n"],[-1,"        }\n\n        left_counter = (left_counter + 1) % INDICATOR_QUANTUM\n        \n"],[0,"    "]],"start1":2066,"start2":2066,"length1":90,"length2":8},{"diffs":[[0,"360);\n        }\n"],[-1,"\n"],[0,"        leftStri"]],"start1":2254,"start2":2254,"length1":33,"length2":32},{"diffs":[[0,"eftStrip.rotate("],[1,"5"],[0,")\n        rightS"]],"start1":2279,"start2":2279,"length1":32,"length2":33},{"diffs":[[0,"ghtStrip.rotate("],[1,"5"],[0,")\n    } else {\n "]],"start1":2308,"start2":2308,"length1":32,"length2":33},{"diffs":[[0,"ff\n\n"],[-1,"            left_counter = (left_counter + 1) % INDICATOR_QUANTUM\n"],[0,"    "]],"start1":2806,"start2":2806,"length1":74,"length2":8}]}]},{"timestamp":1726231933742,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n}\n\n"],[-1,"enum RadioLightState {\n    \n    Left = 0,\n    Right = 1,\n    Standard = 2,\n    Hazard = 3,\n    BumbleBee = 4,\n    Rainbow = 5\n}\n\n"],[0,"cons"]],"start1":179,"start2":179,"length1":137,"length2":8},{"diffs":[[0," {\n\t"],[-1,"switch (receivedNumber{\n        case RadioLightState.Standard:\n\n            break\n        case RadioLightState.Left:\n            break\n    }"],[1,"light_state |= (LightState.Brake | receivedNumber);"],[0,"\n})\n\n\n"],[1,"\n"],[0,"let "]],"start1":351,"start2":351,"length1":154,"length2":66}]}]},{"timestamp":1726232532996,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"mber"],[-1,") {\n        case RadioLightState.Left:\n            break\n        case RadioLightState.Right:\n            break"],[1,"{"],[0,"\n   "]],"start1":502,"start2":502,"length1":118,"length2":9},{"diffs":[[0,"e.Standard:\n"],[1,"\n"],[0,"            "]],"start1":535,"start2":535,"length1":24,"length2":25},{"diffs":[[0,"ate."],[-1,"Hazard:\n            break\n        case RadioLightState.BumbleBee:\n            break\n        case RadioLightState.Rainbow"],[1,"Left"],[0,":\n  "]],"start1":591,"start2":591,"length1":128,"length2":12},{"diffs":[[0,"  break\n"],[-1,"\n"],[0,"    }\n})"]],"start1":611,"start2":611,"length1":17,"length2":16}]}]},{"timestamp":1726232584193,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"e.Left:\n"],[-1,"        \n"],[0,"        "]],"start1":537,"start2":537,"length1":25,"length2":16}]}]},{"timestamp":1726236068533,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ft:\n        "],[-1,"    "],[0,"\n           "]],"start1":541,"start2":541,"length1":28,"length2":24}]}]},{"timestamp":1726236072078,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"const INDICATOR_QUANTUM = 4\nconst STRIP_LENGTH = 96\nconst RADIO_GROUP = 99\n\n"],[0,"enum"]],"start1":0,"start2":0,"length1":80,"length2":4},{"diffs":[[0,"    "],[-1,"LeftOn = 0,"],[0,"\n   "]],"start1":206,"start2":206,"length1":19,"length2":8},{"diffs":[[0,"Left"],[-1,"Off"],[0," = "],[-1,"1"],[1,"0"],[0,",\n  "]],"start1":215,"start2":215,"length1":15,"length2":12},{"diffs":[[0,"ight"],[-1,"On"],[0," = "],[-1,"2,\n    RightOff = 3"],[1,"1"],[0,",\n  "]],"start1":230,"start2":230,"length1":32,"length2":12},{"diffs":[[0,"ndard = "],[-1,"4"],[1,"2"],[0,",\n    Ha"]],"start1":247,"start2":247,"length1":17,"length2":17},{"diffs":[[0,"azard = "],[-1,"5"],[1,"3"],[0,",\n    Bu"]],"start1":263,"start2":263,"length1":17,"length2":17},{"diffs":[[0,"leBee = "],[-1,"6"],[1,"4"],[0,",\n    Ra"]],"start1":282,"start2":282,"length1":17,"length2":17},{"diffs":[[0,"w = "],[-1,"7"],[1,"5"],[0,"\n}\n\n"],[-1,"radio.setGroup(RADIO_GROUP)"],[1,"const INDICATOR_QUANTUM = 4\nconst STRIP_LENGTH = 96"],[0,"\n\nle"]],"start1":303,"start2":303,"length1":40,"length2":64},{"diffs":[[0,"    "],[-1,"light_state = LightState.LeftIndicate | (light_state & (LightState.RightIndicate | LightState.Brake))\n            break\n        case RadioLightState.Right:\n            light_state = LightState.RightIndicate | (light_state & (LightState.LeftIndicate | LightState.Brake))"],[1,"\n            break\n        case RadioLightState.Right:"],[0,"\n   "]],"start1":553,"start2":553,"length1":277,"length2":62},{"diffs":[[0,"rd:\n"],[-1,"            light_state = LightState.Brake\n"],[0,"    "]],"start1":665,"start2":665,"length1":51,"length2":8},{"diffs":[[0,"rd:\n"],[-1,"            light_state = LightState.Hazard\n"],[0,"    "]],"start1":720,"start2":720,"length1":52,"length2":8},{"diffs":[[0,"ee:\n"],[-1,"            light_state = LightState.BumbleBee\n"],[0,"    "]],"start1":778,"start2":778,"length1":55,"length2":8},{"diffs":[[0,"ow:\n"],[-1,"            light_state = LightState.Rainbow\n"],[0,"    "]],"start1":834,"start2":834,"length1":53,"length2":8},{"diffs":[[0,"bleBee]\n"],[-1,"\n"],[0,"input.on"]],"start1":1429,"start2":1429,"length1":17,"length2":16},{"diffs":[[0,") {\n"],[-1,"        // set the initial light state on the change from previous state\n"],[0,"    "]],"start1":2120,"start2":2120,"length1":81,"length2":8},{"diffs":[[0,"ip.rotate()\n"],[1,"    } else {\n    "],[0,"    // stand"]],"start1":2893,"start2":2893,"length1":24,"length2":41},{"diffs":[[0,"ode\n"],[-1,"    } else {\n        \n"],[0,"    "]],"start1":2949,"start2":2949,"length1":30,"length2":8}]}]},{"timestamp":1726236557577,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"e {\n"],[-1,"    Clear = 0,\n"],[0,"    "]],"start1":278,"start2":278,"length1":23,"length2":8},{"diffs":[[0,"eftOn = "],[-1,"1"],[1,"0"],[0,",\n    Le"]],"start1":287,"start2":287,"length1":17,"length2":17},{"diffs":[[0,"ftOff = "],[-1,"2"],[1,"1"],[0,",\n    Ri"]],"start1":304,"start2":304,"length1":17,"length2":17},{"diffs":[[0,"ghtOn = "],[-1,"3"],[1,"2"],[0,",\n    Ri"]],"start1":321,"start2":321,"length1":17,"length2":17},{"diffs":[[0,"htOff = "],[-1,"4"],[1,"3"],[0,",\n    St"]],"start1":339,"start2":339,"length1":17,"length2":17},{"diffs":[[0,"ndard = "],[-1,"5"],[1,"4"],[0,",\n    Ha"]],"start1":357,"start2":357,"length1":17,"length2":17},{"diffs":[[0,"azard = "],[-1,"6"],[1,"5"],[0,",\n    Bu"]],"start1":373,"start2":373,"length1":17,"length2":17},{"diffs":[[0,"e = "],[-1,"7"],[1,"6"],[0,",\n  "]],"start1":396,"start2":396,"length1":9,"length2":9},{"diffs":[[0,"inbow = "],[-1,"8"],[1,"7"],[0,"\n}\n\nradi"]],"start1":409,"start2":409,"length1":17,"length2":17},{"diffs":[[0,") {\n"],[-1,"        case RadioLightState.Clear:\n            light_state = LightState.Brake\n            break\n"],[0,"    "]],"start1":592,"start2":592,"length1":105,"length2":8},{"diffs":[[0,"ate.Left"],[-1,"On"],[0,":\n      "]],"start1":621,"start2":621,"length1":18,"length2":16},{"diffs":[[0,"ate."],[-1,"LeftOff:\n            light_state = light_state & (LightState.RightIndicate | LightState.Brake)\n            break\n        case RadioLightState.RightOn:\n            light_state = LightState.RightIndicate | (light_state & (LightState.LeftIndicate | LightState.Brake))\n            break\n        case RadioLightState.RightOff:\n            light_state = light_state & (LightState.LeftIndicate | LightState.Brake"],[1,"Right:\n            light_state = LightState.RightIndicate | (light_state & (LightState.LeftIndicate | LightState.Brake)"],[0,")\n  "]],"start1":788,"start2":788,"length1":413,"length2":127}]}]},{"timestamp":1726236833390,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"_state &"],[1," (LightState.LeftIndicate"],[0," | Light"]],"start1":1116,"start2":1116,"length1":16,"length2":41}]}]},{"timestamp":1726237468384,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"| (light_state &"],[1," |"],[0," LightState.Brak"]],"start1":1108,"start2":1108,"length1":32,"length2":34}]}]},{"timestamp":1726237469630,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"| (light_state &"],[1," (LightState.RightIndicate |"],[0," LightState.Brak"]],"start1":795,"start2":795,"length1":32,"length2":60},{"diffs":[[0,"ightState.Brake)"],[1,")"],[0,"\n            bre"]],"start1":841,"start2":841,"length1":32,"length2":33},{"diffs":[[0,"ightState.Brake)"],[1,")"],[0,"\n            bre"]],"start1":1126,"start2":1126,"length1":32,"length2":33}]}]},{"timestamp":1726237481618,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"00)\n"],[-1,"            light\n"],[0,"    "]],"start1":3992,"start2":3992,"length1":26,"length2":8}]}]},{"timestamp":1726475362849,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"   light"],[-1,"Br"],[0,"\n       "]],"start1":4005,"start2":4005,"length1":18,"length2":16}]}]},{"timestamp":1726475364961,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"   l"],[-1,"eftBrakeRange.setBrightness(255);\n        } else {\n            leftBrakeRange.setBrightness(128);\n            rightBrakeRange.setBrightness(128);"],[1,"ightBr"],[0,"\n   "]],"start1":4005,"start2":4005,"length1":153,"length2":14}]}]},{"timestamp":1726475524489,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"bow = 0x"],[-1,"1"],[1,"0"],[0,"8,\n    B"]],"start1":171,"start2":171,"length1":17,"length2":17}]}]},{"timestamp":1726476358714,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ow = 0x1"],[1,"8"],[0,",\n    Bu"]],"start1":172,"start2":172,"length1":16,"length2":17}]}]},{"timestamp":1726476359291,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"  Brake = 0x"],[1,"0"],[0,"1,\n    LeftI"]],"start1":96,"start2":96,"length1":24,"length2":25},{"diffs":[[0,"ate = 0x"],[1,"0"],[0,"2,\n    R"]],"start1":125,"start2":125,"length1":16,"length2":17},{"diffs":[[0,"= 0x"],[1,"0"],[0,"4,\n"],[-1,"    Night = 0x8\n}\n\nenum LightMode {\n    Standard = 0x0,\n"],[0,"    "]],"start1":155,"start2":155,"length1":67,"length2":12},{"diffs":[[0,"Bee = 0x"],[-1,"4"],[1,"10"],[0,",\n    Ha"]],"start1":192,"start2":192,"length1":17,"length2":18},{"diffs":[[0,"d = "],[-1,"0x8"],[1,"LeftIndicate | RightIndicate | Brake"],[0,",\n}\n"]],"start1":213,"start2":213,"length1":11,"length2":44},{"diffs":[[0," = 8"],[-1,",\n    Night = 9,\n    Day = 10"],[0,"\n}\n\n"]],"start1":428,"start2":428,"length1":37,"length2":8},{"diffs":[[0,"state;\n\n"],[-1,"\n\n"],[0,"radio.on"]],"start1":524,"start2":524,"length1":18,"length2":16},{"diffs":[[0,"e = "],[-1,"(l"],[1,"L"],[0,"ight"],[-1,"_s"],[1,"S"],[0,"tate"],[-1," & ~0x0f) | (LightMode"],[0,".Rainbow"],[-1," << 4)"],[0,"\n   "]],"start1":1637,"start2":1637,"length1":56,"length2":26},{"diffs":[[0,") {\n"],[1,"\n"],[0,"    "],[-1,"let light_mode = (light_state & 0xf0) >> 4\n    let prev_light_mode = (prev_state & 0xf0) >> 4\n\n\n    \n\n    if (light_mode == LightMod"],[1,"if (light_state & LightStat"],[0,"e.Bu"]],"start1":2896,"start2":2896,"length1":144,"length2":40},{"diffs":[[0," if "],[1,"("],[0,"(prev_"],[-1,"light_mode !="],[1,"state &"],[0," Light"],[-1,"Mod"],[1,"Stat"],[0,"e.Bu"]],"start1":3027,"start2":3027,"length1":36,"length2":32},{"diffs":[[0,"State.BumbleBee)"],[1," == 0)"],[0," {\n            f"]],"start1":3051,"start2":3051,"length1":32,"length2":38},{"diffs":[[0,"  \n    }"],[-1,"\n    \n   "],[1," else"],[0," if (lig"]],"start1":3542,"start2":3542,"length1":25,"length2":21},{"diffs":[[0," (light_"],[-1,"mode =="],[1,"state &"],[0," Light"],[-1,"Mod"],[1,"Stat"],[0,"e.Rainbo"]],"start1":3558,"start2":3558,"length1":32,"length2":33},{"diffs":[[0," if "],[1,"("],[0,"(prev_"],[-1,"light_mode !="],[1,"state &"],[0," Light"],[-1,"Mod"],[1,"Stat"],[0,"e.Ra"]],"start1":3603,"start2":3603,"length1":36,"length2":32},{"diffs":[[0,"htState.Rainbow)"],[1," == 0)"],[0," {\n            l"]],"start1":3625,"start2":3625,"length1":32,"length2":38},{"diffs":[[0,"    "],[-1,"\n    } \n    \n    if (light_mode == LightMode.Hazard) {\n        if (prev_light_mode != LightMode.Hazard) {\n            leftStrip.clear()\n            rightStrip.clear();\n            left_counter = 0\n        }\n\n        if (left_on_off)\n            leftIndicatorRange.showColor(0xffa500)\n        else\n            leftIndicatorRange.showColor(0);\n\n        if (left_counter == 0)\n            left_on_off = !left_on_off\n\n        left_counter = (left_counter + 1) % INDICATOR_QUANTUM\n    }\n\n\n    // standard operating mode\n    if (light_mode == LightMode.Standard)"],[1,"// standard operating mode\n    } else"],[0," {\n "]],"start1":3801,"start2":3801,"length1":564,"length2":45}]}]},{"timestamp":1726476949463,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,";\n\n\n"],[-1,"const setMode = (mode: LightMode) => {\n    light_state = (light_state & 0x0f) | (mode << 4)\n}\n\n"],[0,"\nrad"]],"start1":577,"start2":577,"length1":103,"length2":8},{"diffs":[[0,"    "],[-1,"setMode(LightMode.Standard)"],[1,"light_state = LightState.Brake"],[0,"\n   "]],"start1":1370,"start2":1370,"length1":35,"length2":38},{"diffs":[[0,"    "],[-1,"setMode("],[1,"light_state = "],[0,"Light"],[-1,"Mod"],[1,"Stat"],[0,"e.Hazard"],[-1,")"],[0,"\n   "]],"start1":1468,"start2":1468,"length1":33,"length2":39},{"diffs":[[0,"        "],[-1,"setMode("],[1,"light_state = "],[0,"Light"],[-1,"Mod"],[1,"Stat"],[0,"e.Bumble"]],"start1":1566,"start2":1566,"length1":32,"length2":39},{"diffs":[[0,"umbleBee"],[-1,")"],[0,"\n       "]],"start1":1600,"start2":1600,"length1":17,"length2":16},{"diffs":[[0,"        "],[-1,"setMode"],[1,"light_state = (light_state & ~0x0f) | "],[0,"(LightMo"]],"start1":1669,"start2":1669,"length1":23,"length2":54},{"diffs":[[0,".Rainbow"],[1," << 4"],[0,")\n      "]],"start1":1725,"start2":1725,"length1":16,"length2":21},{"diffs":[[0,"ight"],[-1,"Mode.Standard"],[1,"State.Brake"],[0,", Light"],[-1,"Mod"],[1,"Stat"],[0,"e.Ha"]],"start1":2261,"start2":2261,"length1":31,"length2":30},{"diffs":[[0,"azard, Light"],[-1,"Mod"],[1,"Stat"],[0,"e.Rainbow, L"]],"start1":2290,"start2":2290,"length1":27,"length2":28},{"diffs":[[0,"inbow, Light"],[-1,"Mod"],[1,"Stat"],[0,"e.BumbleBee]"]],"start1":2310,"start2":2310,"length1":27,"length2":28},{"diffs":[[0,"    "],[-1,"setMode("],[1,"light_state = "],[0,"mode"]],"start1":2421,"start2":2421,"length1":16,"length2":22},{"diffs":[[0,"ode[idx]"],[-1,")"],[0,"\n    bas"]],"start1":2440,"start2":2440,"length1":17,"length2":16},{"diffs":[[0,") >> 4\n\n"],[1,"\n    \n\n"],[0,"    if ("]],"start1":3071,"start2":3071,"length1":16,"length2":23},{"diffs":[[0,"  }\n"],[-1,"            left_counter = 0\n"],[0,"    "]],"start1":3534,"start2":3534,"length1":37,"length2":8},{"diffs":[[0,"      }\n"],[1,""],[0,"    }\n"],[-1,"    \n"],[0,"    prev"]],"start1":5712,"start2":5712,"length1":27,"length2":22}]}]},{"timestamp":1726477158886,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"  break\n"],[-1,"        "],[0,"\n    }\n}"]],"start1":1794,"start2":1794,"length1":24,"length2":16}]}]},{"timestamp":1726479952668,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"        "],[-1,"case RadioLightState."],[0,"\n    }\n}"]],"start1":1802,"start2":1802,"length1":37,"length2":16}]}]},{"timestamp":1726479959483,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n}\n\n"],[-1,"class LightState {\n    constructor(initial_state: number) {\n        \n    }\n}\n\n"],[0,"radi"]],"start1":480,"start2":480,"length1":86,"length2":8},{"diffs":[[0,"ate."],[-1,"Night:\n"],[0,"\n   "]],"start1":1827,"start2":1827,"length1":15,"length2":8}]}]},{"timestamp":1726480007826,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,") {\n        "],[-1,"    "],[0,"\n    }\n}\n\nra"]],"start1":540,"start2":540,"length1":28,"length2":24}]}]},{"timestamp":1726483274995,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,") {\n        "],[1,"    "],[0,"\n    }\n}\n\nra"]],"start1":540,"start2":540,"length1":24,"length2":28}]}]},{"timestamp":1726483275660,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ass "],[-1,"Bike"],[0,"Ligh"]],"start1":486,"start2":486,"length1":12,"length2":8},{"diffs":[[0,"    "],[-1,"_light_state:number;\n    _preserve: number;\n    constructor() {\n        this._light_state = 0;\n        this.mode = LightMode.Standard;\n        this._preserve = 0xf0 | LightState.Night | LightState.Brake;\n    }\n\n    get mode() : LightMode {\n        return (this._light_state >> 4);\n    }\n\n    set mode(mode: LightMode) {\n        this._light_state = (this._light_state & 0xf) | (mode << 4)\n    }\n\n    get state(): LightMode {\n        return this._light_state & 0xf;\n    }\n\n    set state(mode: LightMode) {\n        this._light_state = (this._light_state & this._preserve) | mode"],[1,"constructor(initial_state: number) {\n        "],[0,"\n   "]],"start1":503,"start2":503,"length1":583,"length2":53}]}]},{"timestamp":1726483942892,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"   }"],[-1,"\n\n    indicatorLeft(on: boolean) {\n        this._light_state\n    }"],[0,"\n}\n\n"]],"start1":1088,"start2":1088,"length1":74,"length2":8}]}]},{"timestamp":1726483945205,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," }\n\n"],[-1,"    reset() {\n        this._light_state = 0;\n    }\n\n"],[0,"    "]],"start1":902,"start2":902,"length1":60,"length2":8},{"diffs":[[0,"tate(): "],[-1,"number"],[1,"LightMode"],[0," {\n     "]],"start1":915,"start2":915,"length1":22,"length2":25},{"diffs":[[0,"e(mode: "],[-1,"number"],[1,"LightMode"],[0,") {\n    "]],"start1":994,"start2":994,"length1":22,"length2":25},{"diffs":[[0,"    "],[-1,"set_flag(flag: number){\n        this._light_state = (this._light_state & this._preserve) | flag\n    }\n\n    unset_flag(flag: number) {\n        this._light_state = this._light_state & ~flag\n    }\n\n    indicatorLeft(on: boolean) {\n        on ? this.set_flag(LightState.LeftIndicate) : this.unset_flag(LightState.LeftIndicate)\n    }\n\n    indicatorRight(on: boolean) {\n        on ? this.set_flag(LightState.RightIndicate) : this.unset_flag(LightState.RightIndicate)"],[1,"indicatorLeft(on: boolean) {\n        this._light_state"],[0,"\n   "]],"start1":1094,"start2":1094,"length1":468,"length2":62},{"diffs":[[0,"tate"],[-1,": Bike"],[1," = "],[0,"Ligh"]],"start1":1202,"start2":1202,"length1":14,"length2":11},{"diffs":[[0,"tate"],[-1," = new BikeLightState()"],[1,".Brake"],[0,";\nle"]],"start1":1215,"start2":1215,"length1":31,"length2":14},{"diffs":[[0,"tate"],[-1,".state;"],[1,";\n\n\nconst setMode = (mode: LightMode) => {\n    light_state = (light_state & 0x0f) | (mode << 4)\n}"],[0,"\n\n\nr"]],"start1":1251,"start2":1251,"length1":15,"length2":105},{"diffs":[[0,"tate"],[-1,".reset()"],[1," = LightState.Brake"],[0,"\n   "]],"start1":1488,"start2":1488,"length1":16,"length2":27},{"diffs":[[0,"ate.LeftOn:\n"],[1,"            light_state = LightState.LeftIndicate | (light_state & LightState.Brake)\n            break\n"],[0,"        case"]],"start1":1555,"start2":1555,"length1":24,"length2":127},{"diffs":[[0,"tate"],[-1,".indicatorLeft(receivedNumber == Radio"],[1," = light_state & (LightState.RightIndicate | "],[0,"Ligh"]],"start1":1727,"start2":1727,"length1":46,"length2":53},{"diffs":[[0,"htState."],[-1,"LeftOn"],[1,"Brake"],[0,")\n      "]],"start1":1779,"start2":1779,"length1":22,"length2":21},{"diffs":[[0,"te.RightOn:\n"],[1,"            light_state = LightState.RightIndicate | (light_state & LightState.Brake)\n            break\n"],[0,"        case"]],"start1":1838,"start2":1838,"length1":24,"length2":128},{"diffs":[[0,"tate"],[-1,".indicatorRight(receivedNumber == Radio"],[1," = light_state & (LightState.LeftIndicate | "],[0,"Ligh"]],"start1":2012,"start2":2012,"length1":47,"length2":52},{"diffs":[[0,"htState."],[-1,"RightOn"],[1,"Brake"],[0,")\n      "]],"start1":2063,"start2":2063,"length1":23,"length2":21},{"diffs":[[0,"        "],[-1,"light_state.mode = "],[1,"setMode("],[0,"LightMod"]],"start1":2139,"start2":2139,"length1":35,"length2":24},{"diffs":[[0,"Standard"],[1,")"],[0,"\n       "]],"start1":2165,"start2":2165,"length1":16,"length2":17},{"diffs":[[0,"        "],[-1,"light_state.mode = "],[1,"setMode("],[0,"LightMod"]],"start1":2234,"start2":2234,"length1":35,"length2":24},{"diffs":[[0,"e.Hazard"],[1,")"],[0,"\n       "]],"start1":2258,"start2":2258,"length1":16,"length2":17},{"diffs":[[0,"        "],[-1,"light_state.mode = "],[1,"setMode("],[0,"LightMod"]],"start1":2330,"start2":2330,"length1":35,"length2":24},{"diffs":[[0,"umbleBee"],[1,")"],[0,"\n       "]],"start1":2357,"start2":2357,"length1":16,"length2":17},{"diffs":[[0,"    "],[-1,"light_state.mode = "],[1,"setMode("],[0,"Ligh"]],"start1":2431,"start2":2431,"length1":27,"length2":16},{"diffs":[[0,".Rainbow"],[1,")"],[0,"\n       "]],"start1":2452,"start2":2452,"length1":16,"length2":17},{"diffs":[[0,"ht:\n"],[-1,"            light_state.set_flag(LightState.Night)\n            break\n        case RadioLightState.Day:\n            light_state.unset_flag(LightState.Night)\n            break"],[0,"\n   "]],"start1":2512,"start2":2512,"length1":181,"length2":8}]}]},{"timestamp":1726484544851,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ev_state"],[-1,": number"],[0," = light"]],"start1":1705,"start2":1705,"length1":24,"length2":16},{"diffs":[[0,"th;\n    "],[-1,"light_state.mode = "],[1,"setMode("],[0,"mode[idx"]],"start1":3542,"start2":3542,"length1":35,"length2":24},{"diffs":[[0,"ode[idx]"],[1,")"],[0,"\n    bas"]],"start1":3559,"start2":3559,"length1":16,"length2":17},{"diffs":[[0,"nction () {\n    "],[1,"if ("],[0,"light_state.indi"]],"start1":3634,"start2":3634,"length1":32,"length2":36},{"diffs":[[0,"tate"],[-1,".indicatorLeft((light_state."],[1," & LightState.LeftIndicate)\n        light_state &= ~LightState.LeftIndicate;\n    else \n        light_"],[0,"state "],[-1,"&"],[1,"|="],[0," Lig"]],"start1":3661,"start2":3661,"length1":43,"length2":117},{"diffs":[[0,"cate"],[-1,") > 0)"],[1,";"],[0,"\n})\n"],[-1," "],[0,"\ninp"]],"start1":3794,"start2":3794,"length1":19,"length2":13},{"diffs":[[0,"on () {\n    "],[1,"if ("],[0,"light_state."]],"start1":3842,"start2":3842,"length1":24,"length2":28},{"diffs":[[0,"tate"],[-1,".indicatorLeft((light_state."],[1," & LightState.RightIndicate)\n        light_state &= ~LightState.RightIndicate;\n    else\n        light_"],[0,"state "],[-1,"&"],[1,"|="],[0," Lig"]],"start1":3865,"start2":3865,"length1":43,"length2":118},{"diffs":[[0,"cate"],[-1,") > 0)"],[1,";"],[0,"\n})\n"]],"start1":4000,"start2":4000,"length1":14,"length2":9},{"diffs":[[0,"ight_mode = "],[1,"("],[0,"light_state."]],"start1":4109,"start2":4109,"length1":24,"length2":25},{"diffs":[[0,"tate"],[-1,".mode;"],[1," & 0xf0) >> 4"],[0,"\n   "]],"start1":4129,"start2":4129,"length1":14,"length2":21},{"diffs":[[0,"_on_off)"],[-1," {"],[0,"\n       "]],"start1":5354,"start2":5354,"length1":18,"length2":16},{"diffs":[[0,"00)\n"],[-1,"            rightIndicatorRange.showColor(0xffa500)\n        }\n"],[0,"    "]],"start1":5410,"start2":5410,"length1":70,"length2":8},{"diffs":[[0,"else"],[-1," "],[0,"\n   "],[-1,"     {\n"],[0,"    "]],"start1":5422,"start2":5422,"length1":20,"length2":12},{"diffs":[[0,"lse\n            "],[-1,"   "],[0,"leftIndicatorRan"]],"start1":5423,"start2":5423,"length1":35,"length2":32},{"diffs":[[0,"0);\n"],[-1,"            rightIndicatorRange.showColor(0)\n        }\n            "],[0,"\n   "]],"start1":5468,"start2":5468,"length1":75,"length2":8},{"diffs":[[0,"d) {"],[-1,"\n\n        if (prev_light_mode != LightMode.Standard) {\n            leftStrip.clear()\n            rightStrip.clear()\n        }"],[0,"\n   "]],"start1":5684,"start2":5684,"length1":133,"length2":8},{"diffs":[[0," if (light_state"],[-1,".state"],[0," & LightState.Br"]],"start1":5705,"start2":5705,"length1":38,"length2":32},{"diffs":[[0,"5);\n"],[-1,"        } else if (light_state.state & LightState.Night) {\n            leftBrakeRange.showColor(0xff0000)\n            rightBrakeRange.showColor(0xff0000)\n            leftBrakeRange.setBrightness(64);\n            rightBrakeRange.setBrightness(64);\n"],[0,"    "]],"start1":5882,"start2":5882,"length1":255,"length2":8},{"diffs":[[0," if (light_state"],[-1,".state"],[0," & LightState.Le"]],"start1":6016,"start2":6016,"length1":38,"length2":32},{"diffs":[[0,"ht_state"],[-1,".state"],[0," & Light"]],"start1":6446,"start2":6446,"length1":22,"length2":16},{"diffs":[[0,"ht_state"],[-1,".state"],[0,";\n\n    l"]],"start1":6893,"start2":6893,"length1":22,"length2":16}]}]},{"timestamp":1726485025856,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ip.rotate()\n"],[1,"    \n"],[0,"    } \n    \n"]],"start1":4978,"start2":4978,"length1":24,"length2":29}]}]},{"timestamp":1726576948769,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ion () {"],[-1,"\n\n    "],[0,"\n    let"]],"start1":3963,"start2":3963,"length1":22,"length2":16}]}]},{"timestamp":1726576984106,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"x);\n"],[-1,"\nclass AccelerometerVector {\n    x: number\n    y: number\n    z: number\n    constructor() {\n        this.x = this._calc_vector(input.acceleration(Dimension.X))\n        this.y = this._calc_vector(input.acceleration(Dimension.Y))\n        this.z = this._calc_vector(input.acceleration(Dimension.Z))\n    }\n\n    _calc_vector(val: number) : number {\n        if (val > 250)\n            return 1\n        if (val < -250)\n            return -1\n        return 0\n    }\n}\n\nconst detectBrake = () => {\n    const vec = new AccelerometerVector();\n\n    if (vec.x == 0 && vec.y == 0) {\n        light_state.set_flag(LightState.Brake)\n    }\n}\n\nbasic.forever(function () {"],[1,"                                      \nbasic.forever(function () {\n\n    "],[0,"\n   "]],"start1":3901,"start2":3901,"length1":658,"length2":80},{"diffs":[[0," 4\n\n"],[-1,"    detectBrake();\n\n"],[0,"    "]],"start1":4065,"start2":4065,"length1":28,"length2":8}]}]},{"timestamp":1726577580009,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"= 99"],[-1,"\nconst BRAKE"],[0,"\n\nen"]],"start1":70,"start2":70,"length1":20,"length2":8}]}]},{"timestamp":1726734443197,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"RAKE"],[-1,"_THRESHOLD"],[0,"\n\nen"]],"start1":82,"start2":82,"length1":18,"length2":8}]}]},{"timestamp":1726734445915,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"HOLD"],[-1," = 1250"],[0,"\n\nen"]],"start1":92,"start2":92,"length1":15,"length2":8},{"diffs":[[0,");\n\n"],[-1,"\nconst \n"],[1,"class AccelerometerVector {\n    x: number\n    y: number\n    z: number\n    constructor() {\n        this.x = this._calc_vector(input.acceleration(Dimension.X))\n        this.y = this._calc_vector(input.acceleration(Dimension.Y))\n        this.z = this._calc_vector(input.acceleration(Dimension.Z))\n    }\n\n    _calc_vector(val: number) : number {\n        if (val > 250)\n            return 1\n        if (val < -250)\n            return -1\n        return 0\n    }\n}"],[0,"\n\nco"]],"start1":3924,"start2":3924,"length1":16,"length2":464}]}]},{"timestamp":1726734516601,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,";\n\n\n"],[-1,"enum BikeState {\n    Accelerating,\n    Braking\n}\nconst SAMPLE_SIZE = 10\nconst AVERAGE_SIZE = 5\nconst INCREASE_SAMPLE_THRESHOLD = 40\nconst DECREASE_SAMPLE_THRESHOLD = 20\nconst BRAKE_THRESHOLD = 1100\nconst ACCEL_THRESHOLD = 1000\nclass AccelerometerAverage {\n    _samples: number[]\n    _sample_index = 0;\n    _last_sample = 0\n    _state = BikeState.Braking\n    constructor() {\n        this._last_sample = 0\n        this._samples = [];\n        for (let i = 0; i < SAMPLE_SIZE; i++) {\n            this._samples.push(0)\n        }\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    sample() {\n        const sample = input.acceleration(Dimension.Strength)\n        this._samples[this._sample_index] = sample;\n\n        console.log(`sample: ${sample}`)\n        this._sample_index = (this._sample_index + 1) % SAMPLE_SIZE;\n\n        if (this._sample_index == 0) {\n            this._computeAverageSample()\n        }\n    }\n\n    _computeAverageSample() {\n        let avg = 0;\n        for (let j = 0; j < SAMPLE_SIZE; j++) {\n            avg += this._samples[j];\n        }\n\n        avg = avg / SAMPLE_SIZE;\n\n        console.log(`avg: ${avg}`)\n\n        if (avg > BRAKE_THRESHOLD) {\n            this._state = BikeState.Braking\n        } else if (avg < ACCEL_THRESHOLD) {\n            this._state = BikeState.Accelerating\n        }\n    }\n}\nconst averager = new AccelerometerAverage()"],[1,"const "],[0,"\n\n\nc"]],"start1":3932,"start2":3932,"length1":1382,"length2":14}]}]},{"timestamp":1726737582879,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,".push(0)"],[-1,"   "],[0,"\n       "]],"start1":4441,"start2":4441,"length1":19,"length2":16},{"diffs":[[0,"       }"],[-1,"       "],[0,"\n    }\n\n"]],"start1":4842,"start2":4842,"length1":23,"length2":16}]}]},{"timestamp":1726737585298,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"const PAUSE_QUANTUM = 10\n"],[0,"cons"]],"start1":0,"start2":0,"length1":29,"length2":4},{"diffs":[[0,"M = "],[-1,"20"],[1,"4"],[0,"\ncon"]],"start1":22,"start2":22,"length1":10,"length2":9},{"diffs":[[0,"nst "],[-1,"SAMPLE_SIZE = 10\nconst BRAKE_THRESHOLD = 1100\nconst ACCEL_THRESHOLD = 100"],[1,"BRAKE_THRESHOLD = 125"],[0,"0\n\ne"]],"start1":77,"start2":77,"length1":81,"length2":29},{"diffs":[[0,"\n}\n\n"],[-1,"enum BikeState {\n    Accelerating,\n    Braking\n}\n\nclass AccelerometerAverage {\n    _samples: number[]\n    _sample_index = 0;\n    _last_sample = 0\n    _state = BikeState.Braking\n    constructor() {\n        this._last_sample = 0\n        this._samples = [];\n        for (let i = 0; i < SAMPLE_SIZE; i++) {\n            this._samples.push(0)\n        }\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    sample() {\n        const sample = input.acceleration(Dimension.Strength)\n        this._samples[this._sample_index] = sample;\n\n        console.log(`sample: ${sample}`)\n        this._sample_index = (this._sample_index + 1) % SAMPLE_SIZE;\n\n        if (this._sample_index == 0) {\n            this._computeAverageSample()\n        }\n    }\n\n    _computeAverageSample() {\n        let avg = 0;\n        for (let j = 0; j < SAMPLE_SIZE; j++) {\n            avg += this._samples[j];\n        }\n\n        avg = avg / SAMPLE_SIZE;\n\n        console.log(`avg: ${avg}`)\n\n        if (avg > BRAKE_THRESHOLD) {\n            this._state = BikeState.Braking\n        } else if (avg < ACCEL_THRESHOLD) {\n            this._state = BikeState.Accelerating\n        }\n    }\n}\n\n"],[0,"enum"]],"start1":302,"start2":302,"length1":1163,"length2":8},{"diffs":[[0,"\n}\n\n"],[-1,"class Effect {\n    left_strip: neopixel.Strip\n    right_strip: neopixel.Strip\n    tick_rate: number\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        this.left_strip = left_strip\n        this.right_strip = right_strip\n        this.tick_rate = INDICATOR_QUANTUM;\n    }\n\n    initialise() {\n\n    }\n\n    tick() {\n\n    }\n}\n\nclass Hazard extends Effect {\n    initialise() {\n        for (let i = 0; i < STRIP_LENGTH; i++) {\n            let col = 0\n            if (i % 2 == 0) {\n                col = 0xffff00;\n            }\n            this.left_strip.setPixelColor(i, col);\n            this.right_strip.setPixelColor(i, col);\n        }\n    }\n\n    tick() {\n        leftStrip.rotate()\n        rightStrip.rotate()\n    }\n}\n\n"],[0,"radi"]],"start1":1639,"start2":1639,"length1":755,"length2":8},{"diffs":[[0,")\n\n\n"],[-1,"\nconst averager = new AccelerometerAverage()\n\n"],[0,"let "]],"start1":2929,"start2":2929,"length1":54,"length2":8},{"diffs":[[0,";\n\n\n"],[-1,"const detectBrake = () => {\n    "],[1,"enum BikeState {\n    Accelerating,\n    Braking\n}\nconst SAMPLE_SIZE = 10\nconst AVERAGE_SIZE = 5\nconst INCREASE_SAMPLE_THRESHOLD = 40\nconst DECREASE_SAMPLE_THRESHOLD = 20\nconst BRAKE_THRESHOLD = 1100\nconst ACCEL_THRESHOLD = 1000\nclass AccelerometerAverage {\n    _samples: number[]\n    _sample_index = 0;\n    _last_sample = 0\n    _state = BikeState.Braking\n    constructor() {\n        this._last_sample = 0\n        this._samples = [];\n        for (let i = 0; i < SAMPLE_SIZE; i++) {\n            this._samples.push(0)   \n        }\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    sample() {\n        const sample = input.acceleration(Dimension.Strength)\n        this._samples[this._sample_index] = sample;\n\n        console.log(`sample: ${sample}`)\n        this._sample_index = (this._sample_index + 1) % SAMPLE_SIZE;\n\n        if (this._sample_index == 0) {\n            this._computeAverageSample()\n        }       \n    }\n\n    _computeAverageSample() {\n        let avg = 0;\n        for (let j = 0; j < SAMPLE_SIZE; j++) {\n            avg += this._samples[j];\n        }\n\n        avg = avg / SAMPLE_SIZE;\n\n        console.log(`avg: ${avg}`)\n\n        if (avg > BRAKE_THRESHOLD) {\n            this._state = BikeState.Braking\n        } else if (avg < ACCEL_THRESHOLD) {\n            this._state = BikeState.Accelerating\n        }\n    }\n}\nconst averager = new AccelerometerAverage()\n\n\nconst detectBrake = () => {\n    const vec = new AccelerometerVector();\n\n    if (vec.x == 0 && vec.y == 0) {\n        light_state.set_flag(LightState.Brake)\n    }"],[0,"\n}\n\n"]],"start1":3932,"start2":3932,"length1":40,"length2":1555},{"diffs":[[0,") >> 4\n\n"],[1,"    detectBrake();\n\n"],[0,"    if ("]],"start1":5598,"start2":5598,"length1":16,"length2":36},{"diffs":[[0,"TOR_QUANTUM\n"],[1,"        \n"],[0,"    }\n    \n "]],"start1":6275,"start2":6275,"length1":24,"length2":33},{"diffs":[[0,"NTUM\n    }\n\n"],[1,"\n"],[0,"    // stand"]],"start1":7165,"start2":7165,"length1":24,"length2":25},{"diffs":[[0," {\n\n"],[-1,"        detectBrake();\n\n"],[0,"    "]],"start1":7250,"start2":7250,"length1":32,"length2":8},{"diffs":[[0,"ear()\n        }\n"],[1,"        "],[0,"\n        if (lig"]],"start1":7362,"start2":7362,"length1":32,"length2":40},{"diffs":[[0,"use("],[-1,"PAUSE_QUANTUM"],[1,"50"],[0,")\n})"]],"start1":8919,"start2":8919,"length1":21,"length2":10}]}]},{"timestamp":1726738180282,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n\nclass "],[-1,"BumbleBee"],[1,"Hazard"],[0," extends"]],"start1":3226,"start2":3226,"length1":25,"length2":22},{"diffs":[[0,"\n}\n\n"],[-1,"class Rainbow extends Effect {\n    initialise() {\n        this.left_strip.showRainbow()\n        this.right_strip.showRainbow()\n    }\n\n    tick() {\n        leftStrip.rotate()\n        rightStrip.rotate()\n    }\n}\n\nclass Hazard extends Effect {\n    on_off: boolean\n    left_indicator: neopixel.Strip\n    right_indicator: neopixel.Strip\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        super(left_strip, right_strip)\n        this.on_off = false\n\n        this.left_indicator = left_strip.range(0, 30)\n        this.right_indicator = right_strip.range(0, 30)\n    }\n\n    initialise() {\n        leftStrip.clear()\n        rightStrip.clear();\n    }\n\n    tick() {\n        this.on_off = !this.on_off;\n\n        if (this.on_off) {\n            this.left_indicator.showColor(0xffa500)\n            this.right_indicator.showColor(0xffa500)\n        } else {\n            this.left_indicator.showColor(0);\n            this.right_indicator.showColor(0)\n        }\n    }\n}\n\nclass BikeLights extends Effect {\n    light_state: BikeLightState\n    prev_state: number\n\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        super(left_strip, right_strip)\n        this.light_state = new BikeLightState();\n        this.prev_state = this.light_state.state;\n        this.tick_rate = 0; // always call\n    }\n\n    initialise() {\n        leftStrip.clear()\n        rightStrip.clear();\n    }\n\n    tick() {\n        this.on_off = !this.on_off;\n\n        if (this.on_off) {\n            this.left_indicator.showColor(0xffa500)\n            this.right_indicator.showColor(0xffa500)\n        } else {\n            this.left_indicator.showColor(0);\n            this.right_indicator.showColor(0)\n        }\n    }\n}\n\n"],[0,"radi"]],"start1":3619,"start2":3619,"length1":1733,"length2":8},{"diffs":[[0,"= 0;"],[-1,"\n\nlet effects = [new BikeLights(), new Hazard(), new Rainbow(), new BumbleBee()]"],[0,"\nlet"]],"start1":5432,"start2":5432,"length1":88,"length2":8},{"diffs":[[0,"e.mode;\n"],[-1,""],[0,"    let "]],"start1":6057,"start2":6057,"length1":16,"length2":16},{"diffs":[[0,") >> 4\n\n"],[1,"    if (light_mode == LightMode.BumbleBee) {\n        // set the initial light state on the change from previous state\n        if (prev_light_mode != LightMode.BumbleBee) {\n            for (let i = 0; i < STRIP_LENGTH; i++) {\n                let col = 0\n                if (i%2 == 0) {\n                    col = 0xffff00;\n                }\n                leftStrip.setPixelColor(i, col);\n                rightStrip.setPixelColor(i, col);\n            }\n            left_counter = 0\n        }\n\n        if (left_counter == 0) {\n            leftStrip.rotate()\n            rightStrip.rotate()\n        }\n\n        left_counter = (left_counter + 1) % INDICATOR_QUANTUM\n    }\n    \n    if (light_mode == LightMode.Rainbow) {\n        if (prev_light_mode != LightMode.Rainbow) {\n            leftStrip.showRainbow(1,360)\n            rightStrip.showRainbow(1, 360);\n        }\n\n        leftStrip.rotate()\n        rightStrip.rotate()\n    } \n    \n    if (light_mode == LightMode.Hazard) {\n        if (prev_light_mode != LightMode.Hazard) {\n            leftStrip.clear()\n            rightStrip.clear();\n            left_counter = 0\n        }\n\n        if (left_on_off) {\n            leftIndicatorRange.showColor(0xffa500)\n            rightIndicatorRange.showColor(0xffa500)\n        }\n        else \n        {\n            leftIndicatorRange.showColor(0);\n            rightIndicatorRange.showColor(0)\n        }\n            \n        if (left_counter == 0)\n            left_on_off = !left_on_off\n\n        left_counter = (left_counter + 1) % INDICATOR_QUANTUM\n    }\n\n"],[0,"    // s"]],"start1":6109,"start2":6109,"length1":16,"length2":1558}]}]},{"timestamp":1726738778494,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"default_strip_settings() {\n        this.left_strip.clear()\n        this.right_strip.clear()\n        this.left_strip.setBrightness(128)\n        this.right_strip.setBrightness(128)\n    }\n\n    initialise() {\n        this.default_strip_settings()"],[1,"initialise() {\n"],[0,"\n   "]],"start1":3178,"start2":3178,"length1":250,"length2":23},{"diffs":[[0,") {\n"],[-1,"        this.default_strip_settings()\n\n"],[0,"    "]],"start1":3276,"start2":3276,"length1":47,"length2":8},{"diffs":[[0,") {\n"],[-1,"        this.default_strip_settings()\n"],[0,"    "]],"start1":3672,"start2":3672,"length1":46,"length2":8},{"diffs":[[0,") {\n        "],[-1,"this."],[0,"left"],[-1,"_s"],[1,"S"],[0,"trip.rotate("]],"start1":3769,"start2":3769,"length1":35,"length2":29},{"diffs":[[0,"e()\n        "],[-1,"this."],[0,"right"],[-1,"_s"],[1,"S"],[0,"trip.rotate("]],"start1":3796,"start2":3796,"length1":36,"length2":30},{"diffs":[[0,"boolean\n"],[1,"    left_indicator: neopixel.Strip\n    right_indicator: neopixel.Strip\n"],[0,"    cons"]],"start1":3879,"start2":3879,"length1":16,"length2":87},{"diffs":[[0," = false"],[1,"\n\n        this.left_indicator = left_strip.range(0, 30)\n        this.right_indicator = right_strip.range(0, 30)\n    }\n\n    initialise() {\n        leftStrip.clear()\n        rightStrip.clear();"],[0,"\n    }\n\n"]],"start1":4091,"start2":4091,"length1":16,"length2":207},{"diffs":[[0,"      this.left_"],[-1,"strip"],[1,"indicator"],[0,".showColor(0xffa"]],"start1":4381,"start2":4381,"length1":37,"length2":41},{"diffs":[[0,"     this.right_"],[-1,"strip"],[1,"indicator"],[0,".showColor(0xffa"]],"start1":4434,"start2":4434,"length1":37,"length2":41},{"diffs":[[0,"  this.left_"],[-1,"strip"],[1,"indicator"],[0,".showColor(0"]],"start1":4507,"start2":4507,"length1":29,"length2":33},{"diffs":[[0," this.right_"],[-1,"strip"],[1,"indicator"],[0,".showColor(0"]],"start1":4554,"start2":4554,"length1":29,"length2":33},{"diffs":[[0,"mber"],[-1,"\n    left_brake_range: neopixel.Strip\n    left_indicator_range: neopixel.Strip\n    right_brake_range: neopixel.Strip\n    right_indicator_range: neopixel.Strip"],[0,"\n\n  "]],"start1":4692,"start2":4692,"length1":166,"length2":8},{"diffs":[[0,"e = "],[-1,"1"],[1,"0"],[0,"; // "],[-1,"c"],[0,"al"],[-1,"l each loop\n"],[1,"ways call"],[0,"\n    "],[1,"}\n\n"],[0,"    "],[-1,"this.left_indicator_range = this.left_strip.range(0, 30);\n        this.left_brake_range = this.left_strip.range(30, STRIP_LENGTH - 30);\n        this.left_indicator_range = this.left_strip.range(0, 30);\n        this.left_brake_range = this.left_strip.range(30, STRIP_LENGTH - 30);\n    }\n\n    tick() {\n        if (light_state.state & LightState.Brake) {\n            leftBrakeRange.showColor(0xff0000)\n            rightBrakeRange.showColor(0xff0000)\n            leftBrakeRange.setBrightness(255);\n        } else if (light_state.state & LightState.Night) {\n            leftBrakeRange.showColor(0xff0000)\n            rightBrakeRange.showColor(0xff0000)\n            leftBrakeRange.setBrightness(64);\n            rightBrakeRange.setBrightness(64);\n        } else {\n            leftBrakeRange.setBrightness(128);\n            rightBrakeRange.setBrightness(128);\n        }\n\n        if (light_state.state & LightState.LeftIndicate) {\n            if (left_on_off)\n                leftI"],[1,"initialise() {\n        leftStrip.clear()\n        rightStrip.clear();\n    }\n\n    tick() {\n        this.on_off = !this.on_off;\n\n        if (this.on_off) {\n            this.left_i"],[0,"ndicator"],[-1,"Range"],[0,".sho"]],"start1":4932,"start2":4932,"length1":1024,"length2":221},{"diffs":[[0,"    "],[-1,"else\n                leftIndicatorRange.showColor(0);\n\n            if (left_counter == 0)\n                left_on_off = !left_on_off\n\n            left_counter = (left_counter + 1) % INDICATOR_QUANTUM\n        } else {\n            leftIndicatorRange.showColor(0);\n        }\n\n        if (light_state.state & LightState.RightIndicate) {\n            if (right_on_off)\n                rightIndicatorRange"],[1,"this.right_indicator"],[0,".sho"]],"start1":5178,"start2":5178,"length1":406,"length2":28},{"diffs":[[0,"    "],[-1,"   "],[1,"}"],[0," else"],[-1,"\n"],[0," "],[1,"{\n"],[0,"    "]],"start1":5227,"start2":5227,"length1":18,"length2":17},{"diffs":[[0,"        "],[-1,"   rightI"],[1,"this.left_i"],[0,"ndicator"],[-1,"Range"],[0,".showCol"]],"start1":5244,"start2":5244,"length1":38,"length2":35},{"diffs":[[0,"lor(0);\n"],[-1,"\n"],[0,"        "]],"start1":5278,"start2":5278,"length1":17,"length2":16},{"diffs":[[0,"    "],[-1,"if (right_counter == 0)\n                right_on_off = !right_on_off\n\n            right_counter = (right_counter + 1) % INDICATOR_QUANTUM\n        } else {\n            rightI"],[1,"this.right_i"],[0,"ndicator"],[-1,"Range"],[0,".sho"]],"start1":5294,"start2":5294,"length1":194,"length2":28},{"diffs":[[0,"tor.showColor(0)"],[-1,";"],[0,"\n        }\n    }"]],"start1":5315,"start2":5315,"length1":33,"length2":32},{"diffs":[[0,"()\n\nlet left"],[-1,"_s"],[1,"S"],[0,"trip = neopi"]],"start1":6683,"start2":6683,"length1":26,"length2":25},{"diffs":[[0,"GB)\nlet "],[-1,"right_s"],[1,"leftIndicatorRange = leftStrip.range(0,30)\nlet leftBrakeRange = leftStrip.range(30, STRIP_LENGTH)\nlet left_on_off = false\nlet left_counter = 0;\n\nlet rightS"],[0,"trip = n"]],"start1":6762,"start2":6762,"length1":23,"length2":171},{"diffs":[[0,"GB)\n"],[-1,"\n"],[0,"let "],[-1,"effects = [new BikeLights(left_strip, right_strip), new Hazard(left_strip, right_strip), new Rainbow(left_strip, right_strip), new BumbleBee(left_strip, r"],[1,"rightIndicatorRange = rightStrip.range(0, 30)\nlet rightBrakeRange = rightStrip.range(30, STRIP_LENGTH)\nlet right_counter = 0;\nlet right_on_off = false;\n\nlet idx = 0;\n\nlet effects = [new BikeLights(), new Hazard(), new Rainbow(), new BumbleBee()]\nlet mode = [LightMode.Standard, LightMode.Hazard, L"],[0,"ight"],[-1,"_strip)]\nlet effects_idx = 0"],[1,"Mode.Rainbow, LightMode.BumbleBee]"],[0,"\n\nin"]],"start1":6991,"start2":6991,"length1":199,"length2":347},{"diffs":[[0,"    "],[-1,"effects_idx = (effects_"],[1,"idx = ("],[0,"idx "]],"start1":7382,"start2":7382,"length1":31,"length2":15},{"diffs":[[0," + 1) % "],[-1,"effects"],[1,"mode"],[0,".length;"]],"start1":7396,"start2":7396,"length1":23,"length2":20},{"diffs":[[0,"length;\n"],[1,"    light_state.mode = mode[idx]\n"],[0,"    basi"]],"start1":7409,"start2":7409,"length1":16,"length2":49},{"diffs":[[0,".showNumber("],[-1,"effects_"],[0,"idx);\n})\n\nin"]],"start1":7459,"start2":7459,"length1":32,"length2":24},{"diffs":[[0,"ber("],[-1,"effects_"],[0,"idx)"]],"start1":7758,"start2":7758,"length1":16,"length2":8},{"diffs":[[0," }\n\n        "],[1,"if (light_state.state & LightState.Brake) {\n            leftBrakeRange.showColor(0xff0000)\n            rightBrakeRange.showColor(0xff0000)\n            leftBrakeRange.setBrightness(255);\n        } else if (light_state.state & LightState.Night) {\n            leftBrakeRange.showColor(0xff0000)\n            rightBrakeRange.showColor(0xff0000)\n            leftBrakeRange.setBrightness(64);\n            rightBrakeRange.setBrightness(64);\n        } else {\n            leftBrakeRange.setBrightness(128);\n            rightBrakeRange.setBrightness(128);\n        }\n\n        if (light_state.state & LightState.LeftIndicate) {\n            if (left_on_off)\n                leftIndicatorRange.showColor(0xffa500)\n            else\n                leftIndicatorRange.showColor(0);\n\n            if (left_counter == 0)\n                left_on_off = !left_on_off\n\n            left_counter = (left_counter + 1) % INDICATOR_QUANTUM\n        } else {\n            leftIndicatorRange.showColor(0);\n        }\n\n        if (light_state.state & LightState.RightIndicate) {\n            if (right_on_off)\n                rightIndicatorRange.showColor(0xffa500)\n            else\n                rightIndicatorRange.showColor(0);\n\n            if (right_counter == 0)\n                right_on_off = !right_on_off\n\n            right_counter = (right_counter + 1) % INDICATOR_QUANTUM\n        } else {\n            rightIndicatorRange.showColor(0);\n        }"],[0,"\n    }\n    \n"]],"start1":8146,"start2":8146,"length1":24,"length2":1444}]}]},{"timestamp":1726739376518,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"Braking"],[1,"Standard"],[0," = 0x"],[-1,"1"],[0,"0,\n    "],[-1,"IndicateLeft"],[1,"Rainbow"],[0," = 0x"],[-1,"20"],[1,"1"],[0,",\n    "],[-1,"IndicateRight"],[1,"BumbleBee"],[0," = 0x4"],[-1,"0"],[0,",\n    "],[-1,"NightLights"],[1,"Hazard"],[0," = 0x8"],[-1,"0"],[1,","],[0,"\n}\n\n"]],"start1":303,"start2":303,"length1":97,"length2":81},{"diffs":[[0,"his."],[-1,"_preserve = 0xf0"],[1,"mode = LightMode.Standard;\n        this._preserve = 0xf0 | LightState.Night | LightState.Brake"],[0,";\n  "]],"start1":1877,"start2":1877,"length1":24,"length2":102},{"diffs":[[0,"\n        return "],[1,"("],[0,"this._light_stat"]],"start1":2012,"start2":2012,"length1":32,"length2":33},{"diffs":[[0,"_light_state"],[1," >> 4)"],[0,";\n    }\n\n   "]],"start1":2034,"start2":2034,"length1":24,"length2":30},{"diffs":[[0,"te & 0xf) | "],[1,"("],[0,"mode"],[1," << 4)"],[0,"\n    }\n\n    "]],"start1":2137,"start2":2137,"length1":28,"length2":35},{"diffs":[[0," }\n\n"],[-1,"    get_flag(flag: number) : boolean {\n        return !!(this.state & flag)\n    }\n\n"],[0,"    "]],"start1":2398,"start2":2398,"length1":91,"length2":8},{"diffs":[[0,"    "],[-1,"toggle_left_indicator() {\n        this.get_flag(LightState.LeftIndicate)"],[1,"indicatorLeft(on: boolean) {\n        on"],[0," ? t"]],"start1":2601,"start2":2601,"length1":80,"length2":47},{"diffs":[[0,"    "],[-1,"toggle_right_"],[0,"indi"]],"start1":2736,"start2":2736,"length1":21,"length2":8},{"diffs":[[0,"ndicator"],[1,"Right"],[0,"(on: boo"]],"start1":2741,"start2":2741,"length1":16,"length2":21},{"diffs":[[0,"    "],[-1,"this.get_flag(LightState.RightIndicate)"],[1,"on"],[0," ? t"]],"start1":2774,"start2":2774,"length1":47,"length2":10},{"diffs":[[0,") {\n        "],[-1,"this."],[0,"left"],[-1,"_s"],[1,"S"],[0,"trip.rotate("]],"start1":3824,"start2":3824,"length1":35,"length2":29},{"diffs":[[0,"e()\n        "],[-1,"this."],[0,"right"],[-1,"_s"],[1,"S"],[0,"trip.rotate("]],"start1":3851,"start2":3851,"length1":36,"length2":30},{"diffs":[[0,"   this."],[-1,"righ"],[1,"lef"],[0,"t_indica"]],"start1":5303,"start2":5303,"length1":20,"length2":19},{"diffs":[[0,");\n        this."],[-1,"righ"],[1,"lef"],[0,"t_brake_range = "]],"start1":5361,"start2":5361,"length1":36,"length2":35},{"diffs":[[0,"        "],[-1,"this."],[0,"left"],[-1,"_b"],[1,"B"],[0,"rake"],[-1,"_r"],[1,"R"],[0,"ange.sho"]],"start1":5518,"start2":5518,"length1":33,"length2":26},{"diffs":[[0,"        "],[-1,"this."],[0,"right"],[-1,"_b"],[1,"B"],[0,"rake"],[-1,"_r"],[1,"R"],[0,"ange.sho"]],"start1":5565,"start2":5565,"length1":34,"length2":27},{"diffs":[[0,"    "],[-1,"this.left_brake_range.setBrightness(255);\n            this.right_b"],[1,"leftB"],[0,"rake"],[-1,"_r"],[1,"R"],[0,"ange"]],"start1":5617,"start2":5617,"length1":80,"length2":18},{"diffs":[[0,"        "],[-1,"this."],[0,"left"],[-1,"_b"],[1,"B"],[0,"rake"],[-1,"_r"],[1,"R"],[0,"ange.sho"]],"start1":5719,"start2":5719,"length1":33,"length2":26},{"diffs":[[0,"        "],[-1,"this."],[0,"right"],[-1,"_b"],[1,"B"],[0,"rake"],[-1,"_r"],[1,"R"],[0,"ange.sho"]],"start1":5766,"start2":5766,"length1":34,"length2":27},{"diffs":[[0,"    "],[-1,"this."],[0,"left"],[-1,"_b"],[1,"B"],[0,"rake"],[-1,"_range.setBrightness(64);\n            this."],[1,"Range.setBrightness(64);\n            rightBrakeRange.setBrightness(64);\n        } else {\n            leftBrakeRange.setBrightness(128);\n            "],[0,"right"],[-1,"_b"],[1,"B"],[0,"rake"],[-1,"_r"],[1,"R"],[0,"ange"]],"start1":5818,"start2":5818,"length1":79,"length2":176},{"diffs":[[0,"e.setBrightness("],[-1,"64"],[1,"128"],[0,");\n        }\n\n  "]],"start1":5993,"start2":5993,"length1":34,"length2":35},{"diffs":[[0,"ate."],[-1,"get_flag(LightMode."],[1,"state & LightState.Left"],[0,"Indicate"],[-1,"Left)"],[0,") {\n"]],"start1":6046,"start2":6046,"length1":40,"length2":39},{"diffs":[[0,"    "],[-1,"light_state.toggle_"],[1,"if (left_on_off)\n                "],[0,"left"],[-1,"_i"],[1,"I"],[0,"ndicator"],[-1,"()\n\n            if (light_state.get_flag(LightState.LeftIndicate))"],[1,"Range.showColor(0xffa500)\n            else\n                leftIndicatorRange.showColor(0);"],[0,"\n\n  "]],"start1":6093,"start2":6093,"length1":107,"length2":145}]}]},{"timestamp":1726739971640,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"dioLight"],[-1,"Controls"],[1,"State"],[0," {\n    C"]],"start1":1562,"start2":1562,"length1":24,"length2":21},{"diffs":[[0,"    "],[-1,"IndicateLeft,\n    IndicateRight"],[1,"LeftOn = 1,\n    LeftOff = 2,\n    RightOn = 3"],[0,",\n    "],[-1,"N"],[1,"R"],[0,"ight"],[-1,"Mode,\n    NextMode"],[1,"Off = 4,\n    Standard = 5,\n    Hazard = 6,\n    BumbleBee = 7,\n    Rainbow = 8,\n    Night = 9,\n    Day = 10"],[0,"\n}\n\n"]],"start1":1593,"start2":1593,"length1":68,"length2":169},{"diffs":[[0,"\n    }\n\n"],[1,"    get mode() : LightMode {\n        return this._light_state;\n    }\n\n    set mode(mode: LightMode) {\n        this._light_state = (this._light_state & 0xf) | mode\n    }\n"],[0,"\n    res"]],"start1":1914,"start2":1914,"length1":16,"length2":185},{"diffs":[[0,"his._light_state"],[1," & 0xf"],[0,";\n    }\n\n    tog"]],"start1":2186,"start2":2186,"length1":32,"length2":38},{"diffs":[[0,"    "],[-1,"toggle_mode(mode: LightMode) {\n        this.get_flag(mode) ? this.unset_flag(mode) : this.set_flag("],[1,"set state(mode: number) {\n        this._light_state = (this._light_state & this._preserve) | "],[0,"mode"],[-1,")"],[0,"\n   "]],"start1":2217,"start2":2217,"length1":112,"length2":105},{"diffs":[[0,"ndicate) ? this."],[-1,"un"],[0,"set_flag(LightSt"]],"start1":2676,"start2":2676,"length1":34,"length2":32},{"diffs":[[0,"ndicate) : this."],[1,"un"],[0,"set_flag(LightSt"]],"start1":2717,"start2":2717,"length1":32,"length2":34},{"diffs":[[0,"right_indicator("],[1,"on: boolean"],[0,") {\n        this"]],"start1":2787,"start2":2787,"length1":32,"length2":43},{"diffs":[[0,"ate) ? this."],[-1,"un"],[0,"set_flag(Lig"]],"start1":2861,"start2":2861,"length1":26,"length2":24},{"diffs":[[0,"ate) : this."],[1,"un"],[0,"set_flag(Lig"]],"start1":2903,"start2":2903,"length1":24,"length2":26},{"diffs":[[0,".LeftIndicate))\n"],[1,"\n"],[0,"                "]],"start1":6273,"start2":6273,"length1":32,"length2":33},{"diffs":[[0,"    "],[-1,"    this.left_indicator_range.showColor(0xffa500)\n            else\n                this.left_indicator_range.showColor(0)"],[1,"if (left_counter == 0)\n                left_on_off = !left_on_off\n\n            left_counter = (left_counter + 1) % INDICATOR_QUANTUM"],[0,"\n   "]],"start1":6298,"start2":6298,"length1":129,"length2":140},{"diffs":[[0,"        "],[-1,"this."],[0,"left"],[-1,"_i"],[1,"I"],[0,"ndicator"],[-1,"_r"],[1,"R"],[0,"ange.sho"]],"start1":6456,"start2":6456,"length1":37,"length2":30},{"diffs":[[0,"ate."],[-1,"get_flag(LightMode.IndicateRight)) {\n            l"],[1,"state & L"],[0,"ight"],[-1,"_s"],[1,"S"],[0,"tate."],[-1,"toggle_r"],[1,"R"],[0,"ight"],[-1,"_i"],[1,"I"],[0,"ndicat"],[-1,"or()\n"],[1,"e) {"],[0,"\n   "]],"start1":6528,"start2":6528,"length1":94,"length2":43},{"diffs":[[0,"if ("],[-1,"l"],[1,"r"],[0,"ight_"],[-1,"state.get_flag(LightState.RightIndicate)"],[1,"on_off"],[0,")\n  "]],"start1":6580,"start2":6580,"length1":54,"length2":20},{"diffs":[[0,"        "],[-1,"this."],[0,"right"],[-1,"_i"],[1,"I"],[0,"ndicator"],[-1,"_r"],[1,"R"],[0,"ange.sho"]],"start1":6606,"start2":6606,"length1":38,"length2":31},{"diffs":[[0,"        "],[-1,"this."],[0,"right"],[-1,"_i"],[1,"I"],[0,"ndicator"],[-1,"_r"],[1,"R"],[0,"ange.sho"]],"start1":6679,"start2":6679,"length1":38,"length2":31},{"diffs":[[0,"nge.showColor(0)"],[1,";\n"],[0,"\n        } else "]],"start1":6703,"start2":6703,"length1":32,"length2":34},{"diffs":[[0,"    "],[-1,"} else {\n            this.right_i"],[1,"    if (right_counter == 0)\n                right_on_off = !right_on_off\n\n            right_counter = (right_counter + 1) % INDICATOR_QUANTUM\n        } else {\n            rightI"],[0,"ndicator"],[-1,"_r"],[1,"R"],[0,"ange"]],"start1":6726,"start2":6726,"length1":51,"length2":194},{"diffs":[[0,"dioLight"],[-1,"Controls"],[1,"State"],[0,".Clear:\n"]],"start1":7178,"start2":7178,"length1":24,"length2":21},{"diffs":[[0,"ight"],[-1,"Controls.Indic"],[1,"State.LeftOn:\n        case RadioLightSt"],[0,"ate"],[1,"."],[0,"Left"],[1,"Off"],[0,":\n  "]],"start1":7268,"start2":7268,"length1":29,"length2":58},{"diffs":[[0,"ate."],[-1,"toggle_mode(LightMode.Indic"],[1,"indicatorLeft(receivedNumber == RadioLightSt"],[0,"ate"],[1,"."],[0,"Left"],[1,"On"],[0,")\n  "]],"start1":7344,"start2":7344,"length1":42,"length2":62},{"diffs":[[0,"ight"],[-1,"Controls.Indic"],[1,"State.RightOn:\n        case RadioLightSt"],[0,"ate"],[1,"."],[0,"Right"],[1,"Off"],[0,":\n  "]],"start1":7441,"start2":7441,"length1":30,"length2":60},{"diffs":[[0,"ate."],[-1,"mode = LightMode.Indic"],[1,"indicatorRight(receivedNumber == RadioLightSt"],[0,"ate"],[1,"."],[0,"Right"],[1,"On"],[0,")\n  "]],"start1":7519,"start2":7519,"length1":38,"length2":64},{"diffs":[[0,"ight"],[-1,"Controls.NightMode:\n            light_state.mode = LightMode.NightLights\n            break\n        case RadioLightControls.NextMode:\n            effects_idx = (effects_idx + 1) % effects.length"],[1,"State.Standard:\n            light_state.mode = LightMode.Standard\n            break\n        case RadioLightState.Hazard:\n            light_state.mode = LightMode.Hazard\n            break\n        case RadioLightState.BumbleBee:\n            light_state.mode = LightMode.BumbleBee\n            break\n        case RadioLightState.Rainbow:\n            light_state.mode = LightMode.Rainbow\n            break\n        case RadioLightState.Night:\n            light_state.set_flag(LightState.Night)\n            break\n        case RadioLightState.Day:\n            light_state.unset_flag(LightState.Night)"],[0,"\n   "]],"start1":7618,"start2":7618,"length1":201,"length2":600}]}]},{"timestamp":1726740569491,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"htState\n"],[1,"    prev_state: number\n"],[0,"    left"]],"start1":4524,"start2":4524,"length1":16,"length2":39},{"diffs":[[0,"trip"],[-1,", light_state: BikeLightState"],[0,") {\n"]],"start1":4781,"start2":4781,"length1":37,"length2":8},{"diffs":[[0,"state = "],[-1,"light_"],[1,"new BikeLightState();\n        this.prev_state = this.light_state."],[0,"state;\n "]],"start1":4847,"start2":4847,"length1":22,"length2":81},{"diffs":[[0,") {\n        if ("],[-1,"this."],[0,"light_state.get_"]],"start1":5280,"start2":5280,"length1":37,"length2":32},{"diffs":[[0,"light_state."],[-1,"get_flag("],[1,"state & "],[0,"LightState.B"]],"start1":5296,"start2":5296,"length1":33,"length2":32},{"diffs":[[0,"e.Brake)"],[-1,")"],[0," {\n     "]],"start1":5325,"start2":5325,"length1":17,"length2":16},{"diffs":[[0," } else if ("],[-1,"this."],[0,"light_state."]],"start1":5561,"start2":5561,"length1":29,"length2":24},{"diffs":[[0,"light_state."],[-1,"get_flag("],[1,"state & "],[0,"LightState.N"]],"start1":5573,"start2":5573,"length1":33,"length2":32},{"diffs":[[0,"State.Night)"],[-1,")"],[0," {\n         "]],"start1":5598,"start2":5598,"length1":25,"length2":24},{"diffs":[[0," }\n\n        if ("],[-1,"this."],[0,"light_state.get_"]],"start1":5836,"start2":5836,"length1":37,"length2":32},{"diffs":[[0,") {\n            "],[-1,"this."],[0,"light_state.togg"]],"start1":5896,"start2":5896,"length1":37,"length2":32},{"diffs":[[0,"            if ("],[-1,"this."],[0,"light_state.get_"]],"start1":5949,"start2":5949,"length1":37,"length2":32},{"diffs":[[0," }\n\n        if ("],[-1,"this."],[0,"light_state.get_"]],"start1":6222,"start2":6222,"length1":37,"length2":32},{"diffs":[[0,") {\n            "],[-1,"this."],[0,"light_state.togg"]],"start1":6283,"start2":6283,"length1":37,"length2":32},{"diffs":[[0,"    if ("],[-1,"this."],[0,"light_st"]],"start1":6345,"start2":6345,"length1":21,"length2":16},{"diffs":[[0,"GROUP)\n\n"],[1,"let light_state: BikeLightState = new BikeLightState();\nlet prev_state: number = light_state.state;\n\n\n"],[0,"radio.on"]],"start1":6647,"start2":6647,"length1":16,"length2":118},{"diffs":[[0,"light_state."],[-1,"toggle_"],[0,"mode"],[-1,"("],[1," = "],[0,"LightMode.In"]],"start1":7107,"start2":7107,"length1":36,"length2":31},{"diffs":[[0,"light_state."],[-1,"toggle_"],[0,"mode"],[-1,"("],[1," = "],[0,"LightMode.Ni"]],"start1":7224,"start2":7224,"length1":36,"length2":31},{"diffs":[[0,"htLights"],[-1,")"],[0,"\n       "]],"start1":7256,"start2":7256,"length1":17,"length2":16},{"diffs":[[0,"  }\n})\n\n"],[1,"\n\n"],[0,"const av"]],"start1":7406,"start2":7406,"length1":16,"length2":18},{"diffs":[[0,"ge()"],[-1,"\nconst light_state = new BikeLightState()"],[0,"\n\nle"]],"start1":7455,"start2":7455,"length1":49,"length2":8},{"diffs":[[0,"trip"],[-1,", light_state"],[0,"), n"]],"start1":7672,"start2":7672,"length1":21,"length2":8},{"diffs":[[0,"t_state."],[-1,"toggle_left_i"],[1,"indicatorLeft((light_state.state & LightState.LeftI"],[0,"ndicat"],[-1,"or("],[1,"e) > 0"],[0,")\n})\n \ni"]],"start1":8008,"start2":8008,"length1":38,"length2":79},{"diffs":[[0,"ate."],[-1,"toggle_right_indicator()\n})\n\nbasic.showNumber(effects_idx);\n\nlet prev_mode = effects_idx;\nlet effect_counter = 0;\nbasic.forever(function () {\n    const effect: Effect = effects[effects_idx]\n"],[1,"indicatorLeft((light_state.state & LightState.RightIndicate) > 0)\n})\n\nbasic.showNumber(effects_idx);\n\n\nconst detectBrake = () => {\n    \n}\n\nbasic.forever(function () {\n    let light_mode = light_state.mode;"],[0,"\n    "],[-1,"if ("],[1,"let "],[0,"prev_"],[1,"light_"],[0,"mode "],[-1,"!"],[0,"= "],[-1,"effects_idx) {\n        effect_counter = 0;\n        effect.initialis"],[1,"(prev_state & 0xf0) >> 4\n\n    // standard operating mode\n    if (light_mode == LightMode.Standard) {\n\n        detectBrak"],[0,"e()"],[1,";\n"],[0,"\n    "],[-1,"}\n\n"],[0,"    "],[-1,"effect_counter = (effect_counter + 1) % effect.tick_rate;\n\n    if (effect_counter == 0) {\n        effect.tick()"],[1,"if (prev_light_mode != LightMode.Standard) {\n            leftStrip.clear()\n            rightStrip.clear()\n        }\n\n        "],[0,"\n    }\n"],[1,"    "],[0,"\n   "]],"start1":8144,"start2":8144,"length1":420,"length2":510},{"diffs":[[0,"rev_"],[-1,"mode = effects_idx"],[1,"state = light_state.state"],[0,";\n\n "]],"start1":8656,"start2":8656,"length1":26,"length2":33},{"diffs":[[0,"state;\n\n    left"],[-1,"_s"],[1,"S"],[0,"trip.show()\n    "]],"start1":8680,"start2":8680,"length1":34,"length2":33},{"diffs":[[0,".show()\n    "],[-1,"left_s"],[1,"rightS"],[0,"trip.show()\n"]],"start1":8701,"start2":8701,"length1":30,"length2":30}]}]},{"timestamp":1726741109252,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"_state = 0;\n"],[1,"        this._preserve = 0xf0;\n"],[0,"    }\n\n\n    "]],"start1":1774,"start2":1774,"length1":24,"length2":55},{"diffs":[[0,"._light_state = "],[1,"("],[0,"this._light_stat"]],"start1":2183,"start2":2183,"length1":32,"length2":33},{"diffs":[[0,"ht_state"],[1," & this._preserve)"],[0," | flag\n"]],"start1":2209,"start2":2209,"length1":16,"length2":34},{"diffs":[[0,"   }"],[-1,"\n    \n    initialise() {\n        this.default_strip_settings()\n        this.light_state.reset()\n    }"],[0,"\n\n  "]],"start1":5212,"start2":5212,"length1":109,"length2":8},{"diffs":[[0,"gle_"],[-1,"mode(LightMode.I"],[1,"left_i"],[0,"ndicat"],[-1,"eLeft"],[1,"or("],[0,")\n})"]],"start1":7971,"start2":7971,"length1":35,"length2":23},{"diffs":[[0,"gle_"],[-1,"mode(LightMode.IndicateRight"],[1,"right_indicator("],[0,")\n})"]],"start1":8062,"start2":8062,"length1":36,"length2":24},{"diffs":[[0,"rev_"],[1,"mode = "],[0,"effect"],[1,"s"],[0,"_idx"],[-1," = -1"],[0,";\nle"]],"start1":8125,"start2":8125,"length1":23,"length2":26},{"diffs":[[0,"f (prev_"],[-1,"effect_idx"],[1,"mode"],[0," != effe"]],"start1":8255,"start2":8255,"length1":26,"length2":20},{"diffs":[[0,"rev_"],[-1,"effect_idx"],[1,"mode"],[0," = e"]],"start1":8477,"start2":8477,"length1":18,"length2":12}]}]},{"timestamp":1726741683418,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"te = 0x4"],[1,",\n    Night = 0x8"],[0,"\n}\n\nenum"]],"start1":257,"start2":257,"length1":16,"length2":33},{"diffs":[[0,"}\n\nenum "],[-1,"ControlCommand"],[1,"RadioLightControls"],[0," {\n    C"]],"start1":1552,"start2":1552,"length1":30,"length2":34},{"diffs":[[0,"trip"],[-1,"\n    averager: AccelerometerAverage;\n    inner_tick_rate: number"],[0,"\n\n  "]],"start1":4635,"start2":4635,"length1":72,"length2":8},{"diffs":[[0,"oop\n"],[-1,"        this.inner_tick_rate = 0;"],[0,"\n   "]],"start1":4866,"start2":4866,"length1":41,"length2":8},{"diffs":[[0,"or_range = this."],[-1,"righ"],[1,"lef"],[0,"t_strip.range(0,"]],"start1":5041,"start2":5041,"length1":36,"length2":35},{"diffs":[[0,"ange = this."],[-1,"righ"],[1,"lef"],[0,"t_strip.rang"]],"start1":5108,"start2":5108,"length1":28,"length2":27},{"diffs":[[0,"30);"],[-1,"\n\n        this.averager = new AccelerometerAverage()"],[0,"\n   "]],"start1":5156,"start2":5156,"length1":60,"length2":8},{"diffs":[[0,") {\n"],[-1,"\n        averager.sample()\n\n        if (averager.state == BikeState.Braking)\n            this.light_state.set_flag(LightState.Brake)\n        else\n            this.light_state.unset_flag(LightState.Brake)\n\n"],[0,"    "]],"start1":5278,"start2":5278,"length1":213,"length2":8},{"diffs":[[0,"ag(Light"],[-1,"Mod"],[1,"Stat"],[0,"e.Night"],[-1,"Lights"],[0,")) {\n   "]],"start1":5601,"start2":5601,"length1":32,"length2":27},{"diffs":[[0," }\n\n"],[-1,"        this.inner_tick_rate = (this.inner_tick_rate + 1) % INDICATOR_QUANTUM;\n\n        if (this.inner_tick_rate == 0) {\n    "],[0,"    "]],"start1":5848,"start2":5848,"length1":133,"length2":8},{"diffs":[[0,") {\n            "],[-1,"   "],[-1," "],[0,"this.light_state"]],"start1":5913,"start2":5913,"length1":36,"length2":32},{"diffs":[[0,"ft_indicator()\n\n"],[-1,"    "],[0,"            if ("]],"start1":5955,"start2":5955,"length1":36,"length2":32},{"diffs":[[0,"                "],[-1,"  "],[-1,"  "],[0,"this.left_indica"]],"start1":6039,"start2":6039,"length1":36,"length2":32},{"diffs":[[0,"Color(0xffa500)\n"],[-1,"    "],[0,"            else"]],"start1":6085,"start2":6085,"length1":36,"length2":32},{"diffs":[[0,"                "],[-1,"    "],[0,"this.left_indica"]],"start1":6118,"start2":6118,"length1":36,"length2":32},{"diffs":[[0,"olor(0)\n        "],[-1,"    "],[0,"} else {\n       "]],"start1":6165,"start2":6165,"length1":36,"length2":32},{"diffs":[[0,"       } else {\n"],[-1,"    "],[0,"            this"]],"start1":6174,"start2":6174,"length1":36,"length2":32},{"diffs":[[0,"0);\n        "],[-1,"    }\n\n    "],[1,"}\n\n"],[0,"        if ("]],"start1":6238,"start2":6238,"length1":35,"length2":27},{"diffs":[[0,") {\n            "],[-1,"    "],[0,"this.light_state"]],"start1":6315,"start2":6315,"length1":36,"length2":32},{"diffs":[[0,"()\n\n            "],[-1," "],[-1,"   "],[0,"if (this.light_s"]],"start1":6370,"start2":6370,"length1":36,"length2":32},{"diffs":[[0,"RightIndicate))\n"],[-1,"    "],[0,"                "]],"start1":6427,"start2":6427,"length1":36,"length2":32},{"diffs":[[0,"00)\n            "],[-1,"    "],[0,"else\n           "]],"start1":6502,"start2":6502,"length1":36,"length2":32},{"diffs":[[0,"                "],[-1," "],[-1,"   "],[0,"this.right_indic"]],"start1":6523,"start2":6523,"length1":36,"length2":32},{"diffs":[[0,"howColor(0)\n"],[-1,"    "],[0,"        } el"]],"start1":6567,"start2":6567,"length1":28,"length2":24},{"diffs":[[0,"e {\n            "],[-1,"    "],[0,"this.right_indic"]],"start1":6592,"start2":6592,"length1":36,"length2":32},{"diffs":[[0,"lor(0);\n"],[-1,"            }\n"],[0,"        "]],"start1":6641,"start2":6641,"length1":30,"length2":16},{"diffs":[[0,"  }\n"],[-1,"        \n"],[0,"    "]],"start1":6655,"start2":6655,"length1":17,"length2":8},{"diffs":[[0,"P)\n\n"],[-1,"\nconst processControlCommand = (command: number) => {\n    switch (command) {\n        case ControlCommand.Clear:\n            light_state.reset()\n            break\n        case ControlCommand.IndicateLeft:\n            light_state.unset_flag(LightMode"],[1,"radio.onReceivedNumber(function (receivedNumber) {\n\tswitch (receivedNumber) {\n        case RadioLightControls.Clear:\n            light_state.reset()\n            break\n        case RadioLightControls"],[0,".Ind"]],"start1":6693,"start2":6693,"length1":256,"length2":206},{"diffs":[[0,"ontrols.Indicate"],[-1,"Right)"],[1,"Left:"],[0,"\n            lig"]],"start1":6888,"start2":6888,"length1":38,"length2":37},{"diffs":[[0,"ase "],[-1,"ControlCommand.IndicateRight:\n            light_state.unset_flag(LightMode.IndicateLeft)"],[1,"RadioLightControls.IndicateRight:"],[0,"\n   "]],"start1":6997,"start2":6997,"length1":96,"length2":41},{"diffs":[[0,"   case "],[-1,"ControlCommand"],[1,"RadioLightControls"],[0,".NightMo"]],"start1":7119,"start2":7119,"length1":30,"length2":34},{"diffs":[[0,"   case "],[-1,"ControlCommand"],[1,"RadioLightControls"],[0,".NextMod"]],"start1":7239,"start2":7239,"length1":30,"length2":34},{"diffs":[[0,"  }\n"],[-1,"}\n\nradio.onReceivedNumber((receivedNumber) => {\n    processControlCommand(receivedNumber)\n"],[0,"})\n\n"]],"start1":7357,"start2":7357,"length1":98,"length2":8},{"diffs":[[0,"    "],[-1,"processControlCommand(ControlCommand.)"],[1,"effects_idx = (effects_idx + 1) % effects.length;\n    basic.showNumber(effects_idx);"],[0,"\n})\n"]],"start1":7864,"start2":7864,"length1":46,"length2":92},{"diffs":[[0,"    "],[-1,"processControlCommand(ControlCommand"],[1,"light_state.toggle_mode(LightMode"],[0,".Ind"]],"start1":8003,"start2":8003,"length1":44,"length2":41},{"diffs":[[0,"    "],[-1,"processControlCommand(ControlCommand"],[1,"light_state.toggle_mode(LightMode"],[0,".Ind"]],"start1":8106,"start2":8106,"length1":44,"length2":41}]}]},{"timestamp":1726742282832,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n}\n\n"],[-1,"enum RadioLightState {\n    LeftOn,\n    LeftOff,\n    RightOn,\n    RightOff,\n    BumbleBeeOn,\n    RainbowOn,\n    HazardsOn,\n    HazardsOff\n}\n\n"],[0,"clas"]],"start1":1639,"start2":1639,"length1":148,"length2":8},{"diffs":[[0,"\n}\n\n"],[-1,"const broadcastLightState = (state: RadioLightState) => {\n    radio.sendNumber(state)\n}\n\n"],[0,"clas"]],"start1":2609,"start2":2609,"length1":97,"length2":8},{"diffs":[[0,"   }"],[-1,"\n\n        broadcastLightState(RadioLightState.BumbleBeeOn)"],[0,"\n   "]],"start1":3540,"start2":3540,"length1":66,"length2":8},{"diffs":[[0,"ow()"],[-1,"\n\n        broadcastLightState(RadioLightState.RainbowOn)"],[0,"\n   "]],"start1":3801,"start2":3801,"length1":64,"length2":8},{"diffs":[[0,") {\n"],[-1,"            broadcastLightState(RadioLightState.HazardsOn)\n"],[0,"    "]],"start1":4174,"start2":4174,"length1":67,"length2":8},{"diffs":[[0,"e {\n"],[-1,"            broadcastLightState(RadioLightState.HazardsOff)\n"],[0,"    "]],"start1":4288,"start2":4288,"length1":68,"length2":8},{"diffs":[[0,"}\n\n    tick() {\n"],[1,"\n"],[0,"        averager"]],"start1":5396,"start2":5396,"length1":32,"length2":33},{"diffs":[[0,"te))"],[-1," {\n                    broadcastLightState(RadioLightState.LeftOn)"],[0,"\n   "]],"start1":6507,"start2":6507,"length1":74,"length2":8},{"diffs":[[0,"            "],[-1," }"],[0," else"],[-1," {"],[0,"\n           "]],"start1":6581,"start2":6581,"length1":33,"length2":29},{"diffs":[[0,"(0)\n"],[-1,"                    broadcastLightState(RadioLightState.LeftOn)\n                }\n                    \n"],[0,"    "]],"start1":6654,"start2":6654,"length1":111,"length2":8},{"diffs":[[0,"te))"],[-1," {\n                    broadcastLightState(RadioLightState.RightOn)"],[0,"\n   "]],"start1":6947,"start2":6947,"length1":75,"length2":8},{"diffs":[[0,"            "],[-1," }"],[0," else"],[-1," {"],[0,"\n           "]],"start1":7022,"start2":7022,"length1":33,"length2":29},{"diffs":[[0,"(0)\n"],[-1,"                    broadcastLightState(RadioLightState.RightOff)\n                }\n"],[0,"    "]],"start1":7096,"start2":7096,"length1":92,"length2":8},{"diffs":[[0,"gth\n"],[-1,"            basic.showNumber(effects_idx)\n"],[0,"    "]],"start1":7983,"start2":7983,"length1":50,"length2":8},{"diffs":[[0,"unction() {\n"],[1,""],[0,"    processC"]],"start1":8592,"start2":8592,"length1":24,"length2":24},{"diffs":[[0,"Command."],[-1,"NextMode"],[0,")\n})\n\nin"]],"start1":8637,"start2":8637,"length1":24,"length2":16}]}]},{"timestamp":1726742873084,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"t()\n"],[-1,"        this.inner_tick_rate = 0\n"],[0,"    "]],"start1":5850,"start2":5850,"length1":41,"length2":8},{"diffs":[[0,"e()\n"],[-1,"        prev_effect_idx = effects_idx;\n"],[0,"    "]],"start1":9955,"start2":9955,"length1":47,"length2":8},{"diffs":[[0,"ck()\n    }\n\n"],[1,"    prev_effect_idx = effects_idx;\n\n"],[0,"    left_str"]],"start1":10077,"start2":10077,"length1":24,"length2":60},{"diffs":[[0,".show()\n    "],[-1,"righ"],[1,"lef"],[0,"t_strip.show"]],"start1":10139,"start2":10139,"length1":28,"length2":27}]}]},{"timestamp":1726743318061,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"num "],[-1,"LightEffectMode {\n    BikeLights"],[1,"RadioLightState {\n    LeftOn,\n    LeftOff,\n    RightOn,\n    RightOff"],[0,",\n  "]],"start1":1644,"start2":1644,"length1":40,"length2":76},{"diffs":[[0,"umbleBee"],[1,"On"],[0,",\n    Ra"]],"start1":1723,"start2":1723,"length1":16,"length2":18},{"diffs":[[0," Rainbow"],[1,"On"],[0,",\n    Ha"]],"start1":1738,"start2":1738,"length1":16,"length2":18},{"diffs":[[0," Hazards"],[-1,","],[1,"On,\n    HazardsOff"],[0,"\n}\n\nclas"]],"start1":1753,"start2":1753,"length1":17,"length2":34}]}]},{"timestamp":1726745218203,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"astLight"],[-1,"Effect"],[1,"State"],[0," = (stat"]],"start1":2708,"start2":2708,"length1":22,"length2":21}]}]},{"timestamp":1726745229951,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"(state: "],[-1,"LightEffectMod"],[1,"RadioLightStat"],[0,"e) => {\n"]],"start1":2725,"start2":2725,"length1":30,"length2":30},{"diffs":[[0,"\n}\n\n"],[-1,"const broadcastEffectCommand = (command: number) => {\n    if (command <= 0xf)\n        return;\n    radio.sendNumber(command)\n}\n\n"],[0,"clas"]],"start1":2782,"start2":2782,"length1":135,"length2":8},{"diffs":[[0,"astLight"],[-1,"Effect(LightEffectMod"],[1,"State(RadioLightStat"],[0,"e.Bumble"]],"start1":3733,"start2":3733,"length1":37,"length2":36},{"diffs":[[0,"umbleBee"],[1,"On"],[0,")\n    }\n"]],"start1":3764,"start2":3764,"length1":16,"length2":18},{"diffs":[[0,"astLight"],[-1,"Effect(LightEffectMod"],[1,"State(RadioLightStat"],[0,"e.Rainbo"]],"start1":4052,"start2":4052,"length1":37,"length2":36},{"diffs":[[0,".Rainbow"],[1,"On"],[0,")\n    }\n"]],"start1":4081,"start2":4081,"length1":16,"length2":18},{"diffs":[[0,"\n}\n\n"],[-1,"enum HazardsEffectState {\n    On = 0x10,\n    Off,\n}\n"],[0,"clas"]],"start1":4185,"start2":4185,"length1":60,"length2":8},{"diffs":[[0," }\n\n"],[-1,"    initialise() {\n        this.default_strip_settings();\n\n        broadcastLightEffect(LightEffectMode.Hazards)\n    }\n\n"],[0,"    "]],"start1":4384,"start2":4384,"length1":128,"length2":8},{"diffs":[[0,"cast"],[-1,"EffectCommand(HazardsEffectState."],[1,"LightState(RadioLightState.Hazards"],[0,"On)\n"]],"start1":4482,"start2":4482,"length1":41,"length2":42},{"diffs":[[0,"cast"],[-1,"EffectCommand(HazardsEffectState."],[1,"LightState(RadioLightState.Hazards"],[0,"Off)"]],"start1":4655,"start2":4655,"length1":41,"length2":42},{"diffs":[[0,"\n}\n\n"],[-1,"enum BikeLightEffectState {\n    LeftOn = 0x10,\n    LeftOff,\n    RightOn,\n    RightOff\n}\n"],[0,"clas"]],"start1":4797,"start2":4797,"length1":96,"length2":8},{"diffs":[[0,"cast"],[-1,"EffectCommand(BikeLightEffec"],[1,"LightState(RadioLigh"],[0,"tSta"]],"start1":6977,"start2":6977,"length1":36,"length2":28},{"diffs":[[0,"cast"],[-1,"EffectCommand(BikeLightEffec"],[1,"LightState(RadioLigh"],[0,"tSta"]],"start1":7191,"start2":7191,"length1":36,"length2":28},{"diffs":[[0,"te.LeftO"],[-1,"ff"],[1,"n"],[0,")\n      "]],"start1":7219,"start2":7219,"length1":18,"length2":17},{"diffs":[[0,"cast"],[-1,"EffectCommand(BikeLightEffec"],[1,"LightState(RadioLigh"],[0,"tSta"]],"start1":7590,"start2":7590,"length1":36,"length2":28},{"diffs":[[0,"cast"],[-1,"EffectCommand(BikeLightEffec"],[1,"LightState(RadioLigh"],[0,"tSta"]],"start1":7807,"start2":7807,"length1":36,"length2":28}]}]},{"timestamp":1726745485482,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"t()\n"],[-1,"            effects_idx = 0;\n"],[0,"    "]],"start1":8571,"start2":8571,"length1":37,"length2":8}]}]},{"timestamp":1726746082545,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," = 0"],[-1,"\n\n        broadcastLightEffect(LightEffectMode.BikeLights)"],[0,"\n   "]],"start1":6209,"start2":6209,"length1":66,"length2":8},{"diffs":[[0," 0;\n"],[-1,"            basic.showNumber(0);\n"],[0,"    "]],"start1":8600,"start2":8600,"length1":41,"length2":8}]}]},{"timestamp":1726746364596,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"de,\n"],[-1,"    DayMode,\n"],[0,"    "]],"start1":1623,"start2":1623,"length1":21,"length2":8}]}]},{"timestamp":1726759080092,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"  break\n        "],[1,"case ControlCommand.NightMode:\n            light_state.toggle_mode(LightMode.NightLights)\n            break"],[0,"\n        case Co"]],"start1":9079,"start2":9079,"length1":32,"length2":139}]}]},{"timestamp":1726759099982,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"case ControlCommand.NightMode:\n            light_state.set_flag(LightMode.NightLights)\n            break\n        case ControlCommand.DayMode:\n            light_state.unset_flag(LightMode.NightLights)\n            break"],[0,"\n   "]],"start1":9091,"start2":9091,"length1":225,"length2":8}]}]},{"timestamp":1726759119664,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"00\n\n"],[-1,"const INDICATE\n\n"],[0,"enum"]],"start1":179,"start2":179,"length1":24,"length2":8}]}]},{"timestamp":1726859327050,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," INDICAT"],[-1,"OR"],[1,"E"],[0,"\n\nenum L"]],"start1":188,"start2":188,"length1":18,"length2":17}]}]},{"timestamp":1726859328534,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"UM = 20\n"],[1,"const STRIP_LENGTH = 96"],[0,"\nconst R"]],"start1":46,"start2":46,"length1":16,"length2":39},{"diffs":[[0,"nst "],[-1,"STRIP_LENGTH = 96\nconst INDICATOR_LIGHT_START = 0\nconst INDICATOR_LIGHT_END = 30\nconst BRAKE_LIGHT_START = INDICATOR_LIGHT_END\nconst BRAKE_LIGHT_END = 75\nconst INTERIOR_LIGHT_START = BRAKE_LIGHT_END\nconst INTERIOR_LIGHT_END = STRIP_LENGTH"],[1,"INDICATOR"],[0,"\n\nen"]],"start1":185,"start2":185,"length1":246,"length2":17},{"diffs":[[0,"rip\n"],[-1,"    left_interior_range: neopixel.Strip\n"],[0,"    "]],"start1":5354,"start2":5354,"length1":48,"length2":8},{"diffs":[[0,"rip\n"],[-1,"    right_interior_range: neopixel.Strip\n"],[0,"    "]],"start1":5434,"start2":5434,"length1":49,"length2":8},{"diffs":[[0,"nge("],[-1,"INDICATOR_LIGHT_START, INDICATOR_LIGHT_END"],[1,"0, 30"],[0,");\n "]],"start1":5820,"start2":5820,"length1":50,"length2":13},{"diffs":[[0,"nge("],[-1,"INDICATOR_LIGHT_END, BRAKE_LIGHT_END - INDICATOR_LIGHT_END);\n        this.left_interior_range = this.left_strip.range(BRAKE_LIGHT_END, INTERIOR_LIGHT_END - BRAKE_LIGHT_END)"],[1,"30, STRIP_LENGTH - 30);"],[0,"\n   "]],"start1":5882,"start2":5882,"length1":180,"length2":31},{"diffs":[[0,"nge("],[-1,"INDICATOR_LIGHT_START, INDICATOR_LIGHT_END"],[1,"0, 30"],[0,");\n "]],"start1":5966,"start2":5966,"length1":50,"length2":13},{"diffs":[[0,"nge("],[-1,"INDICATOR_LIGHT_END, BRAKE_LIGHT_END - INDICATOR_LIGHT_END);\n        this.right_interior_range = this.right_strip.range(BRAKE_LIGHT_END, INTERIOR_LIGHT_END - BRAKE_LIGHT_END)"],[1,"30, STRIP_LENGTH - 30);"],[0,"\n\n  "]],"start1":6030,"start2":6030,"length1":182,"length2":31},{"diffs":[[0,"ag(Light"],[-1,"Mode.NightLights"],[1,"State.Brake"],[0,")) {\n   "]],"start1":6561,"start2":6561,"length1":32,"length2":27},{"diffs":[[0,"ghtness("],[-1,"64"],[1,"255"],[0,");\n     "]],"start1":6734,"start2":6734,"length1":18,"length2":19},{"diffs":[[0,"ess("],[-1,"64"],[1,"255"],[0,");\n"],[-1,"\n"],[0,"        "],[-1,"    console.log(\"Night mode\")\n\n            this.left_interior_range.showColor(0xffffff)\n            "],[1,"} else if ("],[0,"this."],[-1,"r"],[1,"l"],[0,"ight_"],[-1,"interior_range.showColor(0xffffff)\n            this.left_interior_range.setBrightness(64)\n            this.right_interior_range.setBrightness(64)\n        }\n\n        if (this.light_state.get_flag(LightState.Brake"],[1,"state.get_flag(LightMode.NightLights"],[0,")) {"]],"start1":6793,"start2":6793,"length1":344,"length2":80},{"diffs":[[0,"e.setBrightness("],[-1,"255"],[1,"64"],[0,");\n            t"]],"start1":7015,"start2":7015,"length1":35,"length2":34},{"diffs":[[0,"e.setBrightness("],[-1,"255"],[1,"64"],[0,");\n        } \n  "]],"start1":7069,"start2":7069,"length1":35,"length2":34},{"diffs":[[0,"       }"],[-1," \n        "],[1,"\n"],[0,"\n       "]],"start1":7091,"start2":7091,"length1":26,"length2":17},{"diffs":[[0,"})\n\n"],[-1,"input.onPinPressed(TouchPin.P2, () => {\n    console.log(\"P2\")\n    console.log(light_state.get_flag(LightMode.NightLights))\n    if (light_state.get_flag(LightMode.NightLights))\n        processControlCommand(ControlCommand.DayMode)\n    else\n        processControlCommand(ControlCommand.NightMode)\n})\n\n"],[0,"basi"]],"start1":10351,"start2":10351,"length1":307,"length2":8}]}]},{"timestamp":1726859920146,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," = sample;\n\n"],[1,"        console.log(`sample: ${sample}`)\n"],[0,"        this"]],"start1":1131,"start2":1131,"length1":24,"length2":65},{"diffs":[[0," % SAMPLE_SIZE;\n"],[-1,""],[0,"\n        if (thi"]],"start1":1237,"start2":1237,"length1":32,"length2":32},{"diffs":[[0,"/ SAMPLE_SIZE;\n\n"],[1,"        console.log(`avg: ${avg}`)\n\n"],[0,"        if (avg "]],"start1":1516,"start2":1516,"length1":32,"length2":68},{"diffs":[[0,"   DayMode,\n"],[1,""],[0,"    NextMode"]],"start1":1851,"start2":1851,"length1":24,"length2":24},{"diffs":[[0,"Mode"],[-1,",\n    ForceBrakeLights"],[0,"\n}\n\n"]],"start1":1871,"start2":1871,"length1":30,"length2":8},{"diffs":[[0,"\n}\n\n"],[-1,"class BikeLightsFaked extends Effect {\n    light_state: BikeLightState\n    left_brake_range: neopixel.Strip\n    left_indicator_range: neopixel.Strip\n    left_interior_range: neopixel.Strip\n    right_brake_range: neopixel.Strip\n    right_indicator_range: neopixel.Strip\n    right_interior_range: neopixel.Strip\n    averager: AccelerometerAverage;\n    inner_tick_rate: number\n\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip, light_state: BikeLightState) {\n        super(left_strip, right_strip)\n        this.light_state = light_state;\n        this.tick_rate = 1; // call each loop\n        this.inner_tick_rate = 0;\n        this.left_indicator_range = this.left_strip.range(INDICATOR_LIGHT_START, INDICATOR_LIGHT_END);\n        this.left_brake_range = this.left_strip.range(INDICATOR_LIGHT_END, BRAKE_LIGHT_END - INDICATOR_LIGHT_END);\n        this.left_interior_range = this.left_strip.range(BRAKE_LIGHT_END, INTERIOR_LIGHT_END - BRAKE_LIGHT_END)\n        this.right_indicator_range = this.right_strip.range(INDICATOR_LIGHT_START, INDICATOR_LIGHT_END);\n        this.right_brake_range = this.right_strip.range(INDICATOR_LIGHT_END, BRAKE_LIGHT_END - INDICATOR_LIGHT_END);\n        this.right_interior_range = this.right_strip.range(BRAKE_LIGHT_END, INTERIOR_LIGHT_END - BRAKE_LIGHT_END)\n\n        this.averager = new AccelerometerAverage()\n    }\n\n    initialise() {\n        this.default_strip_settings()\n        this.light_state.reset()\n        this.inner_tick_rate = 0\n\n        broadcastLightEffect(LightEffectMode.BikeLights)\n    }\n\n    tick() {\n\n        if (this.light_state.get_flag(LightMode.NightLights)) {\n            this.left_brake_range.showColor(0xff0000)\n            this.right_brake_range.showColor(0xff0000)\n            this.left_brake_range.setBrightness(64);\n            this.right_brake_range.setBrightness(64);\n\n            console.log(\"Night mode\")\n\n            this.left_interior_range.showColor(0xffffff)\n            this.right_interior_range.showColor(0xffffff)\n            this.left_interior_range.setBrightness(64)\n            this.right_interior_range.setBrightness(64)\n        }\n\n        if (this.light_state.get_flag(LightState.Brake)) {\n            this.left_brake_range.showColor(0xff0000)\n            this.right_brake_range.showColor(0xff0000)\n            this.left_brake_range.setBrightness(255);\n            this.right_brake_range.setBrightness(255);\n        }\n\n        this.inner_tick_rate = (this.inner_tick_rate + 1) % INDICATOR_QUANTUM;\n\n        if (this.inner_tick_rate == 0) {\n            if (this.light_state.get_flag(LightMode.IndicateLeft)) {\n                this.light_state.toggle_left_indicator()\n\n                if (this.light_state.get_flag(LightState.LeftIndicate)) {\n                    broadcastEffectCommand(BikeLightEffectState.LeftOn)\n                    this.left_indicator_range.showColor(0xffa500)\n                } else {\n                    this.left_indicator_range.showColor(0)\n                    broadcastEffectCommand(BikeLightEffectState.LeftOff)\n                }\n\n            } else {\n                this.left_indicator_range.showColor(0);\n            }\n\n            if (this.light_state.get_flag(LightMode.IndicateRight)) {\n                this.light_state.toggle_right_indicator()\n\n                if (this.light_state.get_flag(LightState.RightIndicate)) {\n                    broadcastEffectCommand(BikeLightEffectState.RightOn)\n                    this.right_indicator_range.showColor(0xffa500)\n                } else {\n                    this.right_indicator_range.showColor(0)\n                    broadcastEffectCommand(BikeLightEffectState.RightOff)\n                }\n            } else {\n                this.right_indicator_range.showColor(0);\n            }\n        }\n\n    }\n}\n\n"],[0,"radi"]],"start1":9426,"start2":9426,"length1":3779,"length2":8},{"diffs":[[0,"eak\n"],[-1,"        case ControlCommand.ForceBrakeLights:\n            light_state.toggle_mode(LightMode.Braking);\n            break\n"],[0,"    "]],"start1":10425,"start2":10425,"length1":128,"length2":8},{"diffs":[[0,"rip)"],[-1,", new BikeLightsFaked(left_strip, right_strip, light_state)"],[0,"]\nle"]],"start1":10955,"start2":10955,"length1":67,"length2":8},{"diffs":[[0,", function () {\n"],[-1,""],[0,"    processContr"]],"start1":11219,"start2":11219,"length1":32,"length2":32},{"diffs":[[0,"ht)\n})\n\n"],[1,"input.onPinPressed(TouchPin.P2, () => {\n    console.log(\"P2\")\n    console.log(light_state.get_flag(LightMode.NightLights))\n    if (light_state.get_flag(LightMode.NightLights))\n        processControlCommand(ControlCommand.DayMode)\n    else\n        processControlCommand(ControlCommand.NightMode)\n})\n\n"],[0,"basic.sh"]],"start1":11287,"start2":11287,"length1":16,"length2":315}]}]},{"timestamp":1726860250684,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," 10\n"],[-1,"const STANDARD_QUANTUM = 20\n"],[0,"cons"]],"start1":21,"start2":21,"length1":36,"length2":8},{"diffs":[[0,"ANTUM = "],[-1,"1"],[1,"2"],[0,"0\n\nconst"]],"start1":43,"start2":43,"length1":17,"length2":17},{"diffs":[[0,"_rate = "],[-1,"STANDARD"],[1,"INDICATOR"],[0,"_QUANTUM"]],"start1":3362,"start2":3362,"length1":24,"length2":25},{"diffs":[[0,") % "],[-1,"STANDARD"],[1,"INDICATOR"],[0,"_QUA"]],"start1":11841,"start2":11841,"length1":16,"length2":17}]}]},{"timestamp":1726860631665,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"RD_QUANTUM ="],[1," 20\nconst INDICATOR_QUANTUM ="],[0," 10\n\nconst R"]],"start1":37,"start2":37,"length1":24,"length2":53},{"diffs":[[0,"rate + 1) % "],[-1,"STANDARD"],[1,"INDICATOR"],[0,"_QUANTUM;\n\n "]],"start1":8061,"start2":8061,"length1":32,"length2":33},{"diffs":[[0,"ate."],[-1,"get_flag(LightState.Brake) ? light_state.set_flag"],[1,"toggle_mode"],[0,"(Light"],[-1,"Stat"],[1,"Mod"],[0,"e.Brak"],[-1,"e) : light_state.unset_flag(LightState.Brake)"],[1,"ing);"],[0,"\n   "]],"start1":14237,"start2":14237,"length1":118,"length2":39}]}]},{"timestamp":1726861188587,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"tness(64);\n\n"],[1,"            console.log(\"Night mode\")\n\n"],[0,"            "]],"start1":7399,"start2":7399,"length1":24,"length2":63},{"diffs":[[0,"Color(0xffffff)\n"],[-1,""],[0,"            this"]],"start1":7491,"start2":7491,"length1":32,"length2":32},{"diffs":[[0,"   }"],[-1,"\n\n        if (!this.light_state.get_flag(LightMode.NightLights) && !this.light_state.get_flag(LightState.Brake)) {\n            this.left_brake_range.showColor(0)\n            this.right_brake_range.showColor(0)\n        }"],[1," "],[0,"\n   "]],"start1":7969,"start2":7969,"length1":227,"length2":9},{"diffs":[[0,"ghtness("],[-1,"32"],[1,"64"],[0,");\n     "]],"start1":11150,"start2":11150,"length1":18,"length2":18},{"diffs":[[0,"ess("],[-1,"32"],[1,"64"],[0,");\n\n"],[1,"            console.log(\"Night mode\")\n\n"],[0,"    "]],"start1":11208,"start2":11208,"length1":14,"length2":53},{"diffs":[[0," }\n\n"],[-1,"        if (!this.light_state.get_flag(LightMode.NightLights) && !this.light_state.get_flag(LightState.Brake)) {\n            this.left_brake_range.showColor(0)\n            this.right_brake_range.showColor(0)\n        }\n\n"],[0,"    "]],"start1":11778,"start2":11778,"length1":227,"length2":8},{"diffs":[[0,"ts:\n"],[-1,"            console.log(light_state.get_flag(LightState.Brake))\n"],[0,"    "]],"start1":14183,"start2":14183,"length1":72,"length2":8},{"diffs":[[0,") ? light_state."],[-1,"un"],[0,"set_flag(LightSt"]],"start1":14236,"start2":14236,"length1":34,"length2":32},{"diffs":[[0,") : light_state."],[1,"un"],[0,"set_flag(LightSt"]],"start1":14277,"start2":14277,"length1":32,"length2":34},{"diffs":[[0,") {\n"],[-1,"    if (effects_idx == 4)\n    {\n        processControlCommand(ControlCommand.ForceBrakeLights)\n    } else {\n    "],[0,"    "]],"start1":15201,"start2":15201,"length1":120,"length2":8},{"diffs":[[0,"eRight)\n"],[-1,"    }\n    \n"],[0,"})\n\nbasi"]],"start1":15253,"start2":15253,"length1":27,"length2":16}]}]},{"timestamp":1726861935653,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ess("],[-1,"1"],[0,"6"],[1,"4"],[0,");\n "]],"start1":7347,"start2":7347,"length1":10,"length2":10}]}]},{"timestamp":1726861937848,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"TH\n\n"],[-1,"const NIGHT_LIGHT_BRIGHTNESS = 8\nconst INTERIOR_LIGHT_BRIGHTNESS = 64;\nconst BRAKE_LIGHT_BRIGHTNESS = 96\n\n"],[0,"enum"]],"start1":401,"start2":401,"length1":114,"length2":8},{"diffs":[[0,"ghtness("],[-1,"NIGHT_LIGHT_BRIGHTNESS"],[1,"16"],[0,");\n     "]],"start1":7343,"start2":7343,"length1":38,"length2":18},{"diffs":[[0,"ghtness("],[-1,"NIGHT_LIGHT_BRIGHTNESS"],[1,"64"],[0,");\n\n    "]],"start1":7397,"start2":7397,"length1":38,"length2":18},{"diffs":[[0,"ess("],[-1,"INTERIOR_LIGHT_BRIGHTNESS"],[1,"64"],[0,")\n  "]],"start1":7573,"start2":7573,"length1":33,"length2":10},{"diffs":[[0,"ess("],[-1,"INTERIOR_LIGHT_BRIGHTNESS"],[1,"64"],[0,")\n  "]],"start1":7629,"start2":7629,"length1":33,"length2":10},{"diffs":[[0,"ghtness("],[-1,"BRAKE_LIGHT_BRIGHTNESS"],[1,"255"],[0,");\n     "]],"start1":7856,"start2":7856,"length1":38,"length2":19},{"diffs":[[0,"ghtness("],[-1,"BRAKE_LIGHT_BRIGHTNESS"],[1,"255"],[0,");\n     "]],"start1":7911,"start2":7911,"length1":38,"length2":19},{"diffs":[[0,"ghtness("],[-1,"NIGHT_LIGHT_BRIGHTNESS"],[1,"32"],[0,");\n     "]],"start1":11329,"start2":11329,"length1":38,"length2":18},{"diffs":[[0,"ess("],[-1,"NIGHT_LIGHT_BRIGHTNESS"],[1,"32"],[0,");\n\n"]],"start1":11387,"start2":11387,"length1":30,"length2":10},{"diffs":[[0,"ess("],[-1,"INTERIOR_LIGHT_BRIGHTNESS"],[1,"64"],[0,")\n  "]],"start1":11559,"start2":11559,"length1":33,"length2":10},{"diffs":[[0,"ess("],[-1,"INTERIOR_LIGHT_BRIGHTNESS"],[1,"64"],[0,")\n  "]],"start1":11615,"start2":11615,"length1":33,"length2":10},{"diffs":[[0,"ghtness("],[-1,"BRAKE_LIGHT_BRIGHTNESS"],[1,"255"],[0,");\n     "]],"start1":11842,"start2":11842,"length1":38,"length2":19},{"diffs":[[0,"ess("],[-1,"BRAKE_LIGHT_BRIGHTNESS"],[1,"255"],[0,");\n "]],"start1":11901,"start2":11901,"length1":30,"length2":11}]}]},{"timestamp":1726862210375,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n}\n\n"],[-1,"const setAllRgb = (strip: neopixel.Strip, rgb: number)=>{\n    for (let i = 0; i < strip.length(); i++) \n        strip.setPixelColor(i, rgb)\n}\n\n"],[0,"clas"]],"start1":3195,"start2":3195,"length1":151,"length2":8},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.left_st"]],"start1":5105,"start2":5105,"length1":34,"length2":24},{"diffs":[[0,"s.left_strip"],[-1,", "],[1,".showColor("],[0,"0xffa500)\n  "]],"start1":5120,"start2":5120,"length1":26,"length2":35},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.right_s"]],"start1":5153,"start2":5153,"length1":34,"length2":24},{"diffs":[[0,"ht_strip"],[-1,", "],[1,".showColor("],[0,"0xffa500"]],"start1":5173,"start2":5173,"length1":18,"length2":27},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.left_st"]],"start1":5278,"start2":5278,"length1":34,"length2":24},{"diffs":[[0,"s.left_strip"],[-1,", "],[1,".showColor("],[0,"0)"],[1,";"],[0,"\n           "]],"start1":5293,"start2":5293,"length1":28,"length2":38},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.right_s"]],"start1":5320,"start2":5320,"length1":34,"length2":24},{"diffs":[[0,"ht_strip"],[-1,", "],[1,".showColor("],[0,"0)\n     "]],"start1":5340,"start2":5340,"length1":18,"length2":27},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.left_br"]],"start1":7300,"start2":7300,"length1":34,"length2":24},{"diffs":[[0,"left_brake_range"],[-1,", "],[1,".showColor("],[0,"0xff0000)\n      "]],"start1":7317,"start2":7317,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.right_b"]],"start1":7354,"start2":7354,"length1":34,"length2":24},{"diffs":[[0,"ight_brake_range"],[-1,", "],[1,".showColor("],[0,"0xff0000)\n      "]],"start1":7372,"start2":7372,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.left_in"]],"start1":7557,"start2":7557,"length1":34,"length2":24},{"diffs":[[0,"t_interior_range"],[-1,", "],[1,".showColor("],[0,"0xffffff)\n      "]],"start1":7577,"start2":7577,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.right_i"]],"start1":7614,"start2":7614,"length1":34,"length2":24},{"diffs":[[0,"terior_range"],[-1,", "],[1,".showColor("],[0,"0xffffff)\n  "]],"start1":7639,"start2":7639,"length1":26,"length2":35},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.left_br"]],"start1":7899,"start2":7899,"length1":34,"length2":24},{"diffs":[[0,"left_brake_range"],[-1,", "],[1,".showColor("],[0,"0xff0000)\n      "]],"start1":7916,"start2":7916,"length1":34,"length2":43},{"diffs":[[0,"    "],[-1,"setAllRgb("],[0,"this"]],"start1":7961,"start2":7961,"length1":18,"length2":8},{"diffs":[[0,"ke_range"],[-1,", "],[1,".showColor("],[0,"0xff0000"]],"start1":7979,"start2":7979,"length1":18,"length2":27}]}]},{"timestamp":1726862801835,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"S = "],[-1,"255"],[1,"96"],[0,"\n\nen"]],"start1":503,"start2":503,"length1":11,"length2":10},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.left_br"]],"start1":8431,"start2":8431,"length1":34,"length2":24},{"diffs":[[0,"left_brake_range"],[-1,", "],[1,".showColor("],[0,"0)\n            s"]],"start1":8448,"start2":8448,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.right_b"]],"start1":8478,"start2":8478,"length1":34,"length2":24},{"diffs":[[0,"ight_brake_range"],[-1,", "],[1,".showColor("],[0,"0)\n        }\n   "]],"start1":8496,"start2":8496,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.left_in"]],"start1":8946,"start2":8946,"length1":34,"length2":24},{"diffs":[[0,"_indicator_range"],[-1,", "],[1,".showColor("],[0,"0xffa500)\n      "]],"start1":8967,"start2":8967,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.left_in"]],"start1":9037,"start2":9037,"length1":34,"length2":24},{"diffs":[[0,"_indicator_range"],[-1,", "],[1,".showColor("],[0,"0)\n             "]],"start1":9058,"start2":9058,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.left_in"]],"start1":9225,"start2":9225,"length1":34,"length2":24},{"diffs":[[0,"_indicator_range"],[-1,", "],[1,".showColor("],[0,"0)"],[1,";"],[0,"\n            }\n\n"]],"start1":9246,"start2":9246,"length1":36,"length2":46},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.right_i"]],"start1":9577,"start2":9577,"length1":34,"length2":24},{"diffs":[[0,"_indicator_range"],[-1,", "],[1,".showColor("],[0,"0xffa500)\n      "]],"start1":9599,"start2":9599,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.right_i"]],"start1":9669,"start2":9669,"length1":34,"length2":24},{"diffs":[[0,"_indicator_range"],[-1,", "],[1,".showColor("],[0,"0)\n             "]],"start1":9691,"start2":9691,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.right_i"]],"start1":9838,"start2":9838,"length1":34,"length2":24},{"diffs":[[0,"_indicator_range"],[-1,", "],[1,".showColor("],[0,"0)"],[1,";"],[0,"\n            }\n "]],"start1":9860,"start2":9860,"length1":36,"length2":46},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.left_br"]],"start1":11562,"start2":11562,"length1":34,"length2":24},{"diffs":[[0,"left_brake_range"],[-1,", "],[1,".showColor("],[0,"0xff0000)\n      "]],"start1":11579,"start2":11579,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.right_b"]],"start1":11616,"start2":11616,"length1":34,"length2":24},{"diffs":[[0,"ight_brake_range"],[-1,", "],[1,".showColor("],[0,"0xff0000)\n      "]],"start1":11634,"start2":11634,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.left_in"]],"start1":11819,"start2":11819,"length1":34,"length2":24},{"diffs":[[0,"t_interior_range"],[-1,", "],[1,".showColor("],[0,"0xffffff)\n      "]],"start1":11839,"start2":11839,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.right_i"]],"start1":11876,"start2":11876,"length1":34,"length2":24},{"diffs":[[0,"t_interior_range"],[-1,", "],[1,".showColor("],[0,"0xffffff)\n      "]],"start1":11897,"start2":11897,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.left_br"]],"start1":12161,"start2":12161,"length1":34,"length2":24},{"diffs":[[0,"left_brake_range"],[-1,", "],[1,".showColor("],[0,"0xff0000)\n      "]],"start1":12178,"start2":12178,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.right_b"]],"start1":12215,"start2":12215,"length1":34,"length2":24},{"diffs":[[0,"ight_brake_range"],[-1,", "],[1,".showColor("],[0,"0xff0000)\n      "]],"start1":12233,"start2":12233,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.left_br"]],"start1":12541,"start2":12541,"length1":34,"length2":24},{"diffs":[[0,"left_brake_range"],[-1,", "],[1,".showColor("],[0,"0)\n            s"]],"start1":12558,"start2":12558,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.right_b"]],"start1":12588,"start2":12588,"length1":34,"length2":24},{"diffs":[[0,"_brake_range"],[-1,", "],[1,".showColor("],[0,"0)\n        }"]],"start1":12610,"start2":12610,"length1":26,"length2":35},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.left_in"]],"start1":13048,"start2":13048,"length1":34,"length2":24},{"diffs":[[0,"_indicator_range"],[-1,", "],[1,".showColor("],[0,"0xffa500)\n      "]],"start1":13069,"start2":13069,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.left_in"]],"start1":13139,"start2":13139,"length1":34,"length2":24},{"diffs":[[0,"_indicator_range"],[-1,", "],[1,".showColor("],[0,"0)\n             "]],"start1":13160,"start2":13160,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.left_in"]],"start1":13307,"start2":13307,"length1":34,"length2":24},{"diffs":[[0,"_indicator_range"],[-1,", "],[1,".showColor("],[0,"0)"],[1,";"],[0,"\n            }\n\n"]],"start1":13328,"start2":13328,"length1":36,"length2":46},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.right_i"]],"start1":13659,"start2":13659,"length1":34,"length2":24},{"diffs":[[0,"icator_range"],[-1,", "],[1,".showColor("],[0,"0xffa500)\n  "]],"start1":13685,"start2":13685,"length1":26,"length2":35},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.right_i"]],"start1":13751,"start2":13751,"length1":34,"length2":24},{"diffs":[[0,"_indicator_range"],[-1,", "],[1,".showColor("],[0,"0)\n             "]],"start1":13773,"start2":13773,"length1":34,"length2":43},{"diffs":[[0,"            "],[-1,"setAllRgb("],[0,"this.right_i"]],"start1":13920,"start2":13920,"length1":34,"length2":24},{"diffs":[[0,"or_range"],[-1,", "],[1,".showColor("],[0,"0)"],[1,";"],[0,"\n       "]],"start1":13950,"start2":13950,"length1":20,"length2":30}]}]},{"timestamp":1726863642978,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ick() {\n"],[-1,"        "],[0,"\n       "]],"start1":11496,"start2":11496,"length1":24,"length2":16}]}]},{"timestamp":1726865615901,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"        "],[-1,"th"],[0,"\n       "]],"start1":11504,"start2":11504,"length1":18,"length2":16}]}]},{"timestamp":1726865616176,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"  th"],[-1,"is.light_state.set_flag(LightMode.NightLights)"],[0,"\n   "]],"start1":11510,"start2":11510,"length1":54,"length2":8}]}]},{"timestamp":1726865630114,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"     return "],[1,"!!("],[0,"this.state &"]],"start1":2420,"start2":2420,"length1":24,"length2":27}]}]},{"timestamp":1726866486630,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"flag"],[-1," > 0"],[1,")"],[0,"\n   "]],"start1":2445,"start2":2445,"length1":12,"length2":9}]}]},{"timestamp":1726866489600,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," return "],[-1,"("],[0,"this.sta"]],"start1":2424,"start2":2424,"length1":17,"length2":16},{"diffs":[[0,"e & flag"],[-1,")"],[0," > 0\n   "]],"start1":2441,"start2":2441,"length1":17,"length2":16}]}]},{"timestamp":1726866509707,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n    }\n\n    "],[1,"left_strip.show()\n    right_strip.show()"],[0,"\n    basic.p"]],"start1":16812,"start2":16812,"length1":24,"length2":64}]}]},{"timestamp":1726868785023,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"k()\n"],[-1,"        left_strip.show()\n        right_strip.show()\n"],[0,"    "]],"start1":16809,"start2":16809,"length1":61,"length2":8}]}]},{"timestamp":1726868786606,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ANTUM = "],[-1,"5"],[1,"1"],[0,"0\nconst "]],"start1":14,"start2":14,"length1":17,"length2":17},{"diffs":[[0,"ANTUM = "],[-1,"4"],[1,"10"],[0,"\n\nconst "]],"start1":42,"start2":42,"length1":17,"length2":18},{"diffs":[[0,"dx;\n"],[-1,"        left_strip.show()\n        right_strip.show()\n"],[0,"    "]],"start1":16686,"start2":16686,"length1":61,"length2":8},{"diffs":[[0,"show()\n    }"],[1,"\n\n    "],[0,"\n    basic.p"]],"start1":16859,"start2":16859,"length1":24,"length2":30}]}]},{"timestamp":1726869183404,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n}\n\n"],[-1,"class Smile extends Effect {\n    smile_idx: number\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        super(left_strip, right_strip)\n        this.tick_rate = 1;\n    }\n\n    initialise() {\n        this.default_strip_settings()\n        this.smile_idx = 0\n    }\n\n    tick () {\n        const idx = this.smile_idx\n        if (idx < 40) {\n            this.left_strip.setPixelColor(idx, 0xffffff);\n            this.right_strip.setPixelColor(idx, 0xffffff);\n            this.smile_idx++;\n        } else {\n            for (let i = INTERIOR_LIGHT_START; i > INTERIOR_LIGHT_START - 15; i--) {\n                this.left_strip.setPixelColor(i, 0xffffff);\n                this.right_strip.setPixelColor(i, 0xffffff);\n            }\n        }\n    }\n}\n\n"],[0,"clas"]],"start1":3918,"start2":3918,"length1":775,"length2":8}]}]},{"timestamp":1726869763846,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ber\n"],[-1,"    smile_complete: boolean\n"],[0,"    "]],"start1":3969,"start2":3969,"length1":36,"length2":8},{"diffs":[[0,"f);\n            "],[1,"this.smile_idx++;"],[0,"\n        } else "]],"start1":4399,"start2":4399,"length1":32,"length2":49},{"diffs":[[0,"se {"],[-1,"\n            let col = 0xffffff;\n            if (idx > 140)\n                col = 0\n            if (idx > 240)\n                col = 0xffffff\n"],[0,"\n   "]],"start1":4445,"start2":4445,"length1":150,"length2":8},{"diffs":[[0,"etPixelColor(i, "],[-1,"col"],[1,"0xffffff"],[0,");\n             "]],"start1":4568,"start2":4568,"length1":35,"length2":40},{"diffs":[[0,"etPixelColor(i, "],[-1,"col"],[1,"0xffffff"],[0,");\n            }"]],"start1":4629,"start2":4629,"length1":35,"length2":40},{"diffs":[[0,"   }"],[-1,"\n\n        this.smile_idx++;"],[0,"\n   "]],"start1":4675,"start2":4675,"length1":35,"length2":8}]}]},{"timestamp":1726869947930,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,");\n\n"],[-1,"const starty\n\n"],[0,"let "]],"start1":17358,"start2":17358,"length1":22,"length2":8}]}]},{"timestamp":1727032129716,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"_idx);\n\n"],[1,"const starty"],[0,"\n\nlet pr"]],"start1":17354,"start2":17354,"length1":16,"length2":28}]}]},{"timestamp":1727032132668,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"   }"],[-1,"\n\n    done() : boolean {\n        return false\n    }"],[0,"\n}\n\n"]],"start1":3914,"start2":3914,"length1":59,"length2":8},{"diffs":[[0," 1;\n"],[-1,"        this.smile_idx = 0\n        this.smile_complete = false\n    }\n\n    done() {\n        return this.smile_complete\n"],[0,"    "]],"start1":4139,"start2":4139,"length1":126,"length2":8},{"diffs":[[0,"(idx > 240)\n"],[1,""],[0,"            "]],"start1":4559,"start2":4559,"length1":24,"length2":24},{"diffs":[[0,"ff\n\n"],[-1,"            if (idx > 340)\n                this.smile_complete = true;\n\n"],[0,"    "]],"start1":4599,"start2":4599,"length1":80,"length2":8},{"diffs":[[0,");\n\n"],[-1,"const startupEffect = new Smile(left_strip, right_strip)\n\nwhile (!startupEffect.done()) {\n    startupEffect.tick()\n    left_strip.show()\n    right_strip.show()\n    pause(10);\n}"],[0,"\n\nle"]],"start1":17358,"start2":17358,"length1":184,"length2":8}]}]},{"timestamp":1727032582296,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ean\n"],[-1,"    wink_complete: boolean\n"],[0,"    "]],"start1":4048,"start2":4048,"length1":35,"length2":8},{"diffs":[[0,"lse\n"],[-1,"        this.wink_complete = false\n"],[0,"    "]],"start1":4253,"start2":4253,"length1":43,"length2":8},{"diffs":[[0,"lete"],[-1," && this.wink_complete"],[0,"\n   "]],"start1":4307,"start2":4307,"length1":30,"length2":8},{"diffs":[[0,"140)"],[-1," {\n                this.smile_complete = true;"],[0,"\n   "]],"start1":4684,"start2":4684,"length1":54,"length2":8},{"diffs":[[0,"= 0\n"],[-1,"            }\n                \n"],[0,"    "]],"start1":4709,"start2":4709,"length1":39,"length2":8},{"diffs":[[0,"   this."],[-1,"wink"],[1,"smile"],[0,"_complet"]],"start1":4812,"start2":4812,"length1":20,"length2":21},{"diffs":[[0,"e;\n\n"],[-1,"            if (!this.smile_complete) {\n    "],[0,"    "]],"start1":4840,"start2":4840,"length1":52,"length2":8},{"diffs":[[0,"                "],[-1," "],[-1,"   "],[0,"this.left_strip."]],"start1":4929,"start2":4929,"length1":36,"length2":32},{"diffs":[[0,"lColor(i, col);\n"],[-1,"    "],[0,"                "]],"start1":4968,"start2":4968,"length1":36,"length2":32},{"diffs":[[0,"l);\n"],[-1,"                }\n            } else {\n                // wink right\n                for (let i = INTERIOR_LIGHT_START; i > INTERIOR_LIGHT_START - 15; i--) {\n                    this.right_strip.setPixelColor(i, col);\n                }\n"],[0,"    "]],"start1":5036,"start2":5036,"length1":244,"length2":8}]}]},{"timestamp":1727033048364,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n}\n\n"],[-1,"class KnightRider extends Effect {\n    anim_idx: number\n    complete: boolean\n    left: boolean\n    anim_count: number\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        super(left_strip, right_strip)\n        this.tick_rate = 1;\n        this.anim_idx = 0\n        this.left = true\n        this.complete = false\n        this.anim_count = 0\n    }\n\n    done() {\n        return this.complete\n    }\n\n    initialise() {\n        this.default_strip_settings()\n        this.anim_idx = 0\n    }\n\n    tick() {\n        const idx = this.anim_idx\n\n        const strip = this.left ? this.left_strip : this.right_strip\n        const start_idx = this.left ? BRAKE_LIGHT_END - 10 : 0;\n\n        strip.clear()\n\n        if (this.anim_idx > BRAKE_LIGHT_END - 10) {\n\n        } else {\n            \n        }\n            \n\n        this.anim_idx++;\n\n        if (idx ==  (2 * (BRAKE_LIGHT_END - 10))) {\n            this.anim_idx = 0\n            this.anim_count++\n            this.left = !this.left;\n        }\n    }\n}\n\n"],[0,"clas"]],"start1":3969,"start2":3969,"length1":1029,"length2":8}]}]},{"timestamp":1727033647092,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    left"],[-1,"_to_right"],[0,": boolea"]],"start1":4051,"start2":4051,"length1":25,"length2":16},{"diffs":[[0,"ber\n"],[-1,"    inc_dec:number\n"],[0,"    "]],"start1":4088,"start2":4088,"length1":27,"length2":8},{"diffs":[[0,"his.left"],[-1,"_to_right"],[0," = true\n"]],"start1":4269,"start2":4269,"length1":25,"length2":16},{"diffs":[[0,"dx\n\n"],[-1,"        this.left_strip.clear()\n        this.right_strip.clear()\n\n"],[0,"    "]],"start1":4533,"start2":4533,"length1":74,"length2":8},{"diffs":[[0,"p = "],[-1,"("],[0,"this."],[-1,"anim_idx > BRAKE_LIGHT_END - 10)"],[1,"left"],[0," ? t"]],"start1":4555,"start2":4555,"length1":46,"length2":17},{"diffs":[[0,"rip\n"],[-1,"\n"],[0,"        "],[-1,"if (this.anim_idx >"],[1,"const start_idx = this.left ?"],[0," BRA"]],"start1":4602,"start2":4602,"length1":36,"length2":45},{"diffs":[[0,"END - 10"],[-1,") {\n    "],[1," : 0;\n\n"],[0,"        "]],"start1":4656,"start2":4656,"length1":24,"length2":23},{"diffs":[[0,"  strip."],[-1,"setPixelColor"],[1,"clear()\n\n        if "],[0,"(this.an"]],"start1":4677,"start2":4677,"length1":29,"length2":36},{"diffs":[[0,"nim_idx "],[-1,"-"],[1,">"],[0," BRAKE_L"]],"start1":4712,"start2":4712,"length1":17,"length2":17},{"diffs":[[0,"END - 10"],[-1,", 0xff0000)"],[1,") {\n"],[0,"\n       "]],"start1":4734,"start2":4734,"length1":27,"length2":20},{"diffs":[[0,"    "],[-1,"strip.setPixelColor(BRAKE_LIGHT_END - 10 - this.anim_idx, 0xff0000)"],[0,"\n   "]],"start1":4772,"start2":4772,"length1":75,"length2":8},{"diffs":[[0,"  }\n"],[-1,"\n\n"],[1,"  "],[0,"        "],[-1,"if (this.left"],[1,"  \n"],[0,"\n   "]],"start1":4783,"start2":4783,"length1":31,"length2":21},{"diffs":[[0,"10))"],[-1," || "],[1,") {\n            this.anim_"],[0,"idx ="],[-1,"="],[0," 0"],[-1,") {"],[0,"\n   "]],"start1":4871,"start2":4871,"length1":23,"length2":41},{"diffs":[[0,"his.left"],[-1,"_to_right"],[0," = !this"]],"start1":4952,"start2":4952,"length1":25,"length2":16},{"diffs":[[0,"left"],[-1,"_to_right"],[0,";\n  "]],"start1":4969,"start2":4969,"length1":17,"length2":8},{"diffs":[[0,"t = new "],[-1,"KnightRider"],[1,"Smile"],[0,"(left_st"]],"start1":19090,"start2":19090,"length1":27,"length2":21}]}]},{"timestamp":1727034246074,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"()\n\n        "],[-1,"if ("],[1,"const strip = (this.anim_"],[0,"idx > BRAKE_"]],"start1":4636,"start2":4636,"length1":28,"length2":49},{"diffs":[[0,"10) "],[-1,"{\n            console.log(`lpixel: ${"],[1,"? this.left_strip : this.right_strip\n\n        if ("],[0,"this"]],"start1":4697,"start2":4697,"length1":45,"length2":58},{"diffs":[[0," (this.anim_idx "],[-1,"-"],[1,">"],[0," BRAKE_LIGHT_END"]],"start1":4749,"start2":4749,"length1":33,"length2":33},{"diffs":[[0,"END - 10"],[-1,"}`)"],[1,") {"],[0,"\n       "]],"start1":4779,"start2":4779,"length1":19,"length2":19},{"diffs":[[0,"            "],[-1,"this.right_"],[0,"strip.setPix"]],"start1":4791,"start2":4791,"length1":35,"length2":24},{"diffs":[[0,"    "],[-1,"console.log(`rpixel: ${BRAKE_LIGHT_END - 10 - this.anim_idx}`)\n            this.left_"],[0,"stri"]],"start1":4896,"start2":4896,"length1":93,"length2":8},{"diffs":[[0,"left"],[-1,"_to_right)\n    "],[1,"\n"],[0,"    "]],"start1":4997,"start2":4997,"length1":23,"length2":9},{"diffs":[[0,"x++;"],[-1,"\n        else    \n            this.anim_idx--;"],[0,"\n\n  "]],"start1":5022,"start2":5022,"length1":54,"length2":8},{"diffs":[[0,"    if ("],[-1,"this.anim_"],[0,"idx =="],[1," "],[0," (2 * (B"]],"start1":5032,"start2":5032,"length1":32,"length2":23},{"diffs":[[0,"10)) || "],[-1,"this.anim_"],[0,"idx == 0"]],"start1":5072,"start2":5072,"length1":26,"length2":16},{"diffs":[[0,"   }"],[-1,"\n\n        // if (this.anim_count > 2)\n        //     this.complete = true"],[0,"\n   "]],"start1":5181,"start2":5181,"length1":81,"length2":8}]}]},{"timestamp":1727034829318,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n}\n\n"],[-1,"const KNIGHT_RIDE_START = (BRAKE_LIGHT_END - 25)\n\n"],[0,"clas"]],"start1":3969,"start2":3969,"length1":58,"length2":8},{"diffs":[[0,"ean\n"],[-1,"    kn_complete: boolean\n"],[0,"    "]],"start1":4074,"start2":4074,"length1":33,"length2":8},{"diffs":[[0,"m_idx = "],[-1,"BRAKE_LIGHT_END "],[1,"0"],[0,"\n       "]],"start1":4278,"start2":4278,"length1":32,"length2":17},{"diffs":[[0,"rue\n"],[-1,"        this.kn_complete = false\n"],[0,"    "]],"start1":4318,"start2":4318,"length1":41,"length2":8},{"diffs":[[0,") {\n"],[-1,"        if (this.kn_complete) {\n            \n        }\n\n"],[0,"    "]],"start1":4535,"start2":4535,"length1":64,"length2":8},{"diffs":[[0,"x > "],[-1,"KNIGHT_RIDE_START) {"],[1,"BRAKE_LIGHT_END - 10) {\n            console.log(`lpixel: ${this.anim_idx - BRAKE_LIGHT_END - 10}`)"],[0,"\n   "]],"start1":4654,"start2":4654,"length1":28,"length2":106},{"diffs":[[0,"m_idx - "],[-1,"KNIGHT_RIDE_START"],[1,"BRAKE_LIGHT_END - 10"],[0,", 0xff00"]],"start1":4808,"start2":4808,"length1":33,"length2":36},{"diffs":[[0,"       } else {\n"],[1,"            console.log(`rpixel: ${BRAKE_LIGHT_END - 10 - this.anim_idx}`)\n"],[0,"            this"]],"start1":4849,"start2":4849,"length1":32,"length2":107},{"diffs":[[0,"elColor("],[-1,"KNIGHT_RIDE_START"],[1,"BRAKE_LIGHT_END - 10"],[0," - this."]],"start1":4974,"start2":4974,"length1":33,"length2":36},{"diffs":[[0,"2 * "],[-1,"KNIGHT_RIDE_START"],[1,"(BRAKE_LIGHT_END - 10)"],[0,") ||"]],"start1":5180,"start2":5180,"length1":25,"length2":30},{"diffs":[[0,"      }\n\n       "],[1," //"],[0," if (this.anim_c"]],"start1":5319,"start2":5319,"length1":32,"length2":35},{"diffs":[[0,"unt > 2)\n       "],[1," //"],[0,"     this.kn_com"]],"start1":5355,"start2":5355,"length1":32,"length2":35},{"diffs":[[0,"his."],[-1,"kn_"],[0,"comp"]],"start1":5380,"start2":5380,"length1":11,"length2":8}]}]},{"timestamp":1727035425871,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"this.anim_idx += this.anim_idx * this.anim_idx;\n            this.left_strip.setBrightness(this.anim_idx)\n            this.right_strip.setBrightness(this.anim_idx)\n\n            if (this.anim_idx > 0xff)\n                this.complete = true\n            \n            return"],[0,"\n   "]],"start1":4702,"start2":4702,"length1":278,"length2":8},{"diffs":[[0,"> 2)"],[-1," {\n            this.anim_idx = 1"],[0,"\n   "]],"start1":5371,"start2":5371,"length1":40,"length2":8},{"diffs":[[0,"rue\n"],[-1,"            setAllRgb(this.left_strip, 0xff0000)\n            setAllRgb(this.right_strip, 0xff0000)\n\n            this.left_strip.setBrightness(0)\n            this.right_strip.setBrightness(0)\n        }\n            \n"],[0,"    "]],"start1":5408,"start2":5408,"length1":222,"length2":8}]}]},{"timestamp":1727035926712,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"_idx"],[1," "],[0,"+="],[-1,"1\n            "],[1," this.anim_idx * this.anim_idx;"],[0,"\n   "]],"start1":4715,"start2":4715,"length1":24,"length2":42},{"diffs":[[0,"xff)"],[-1," {\n                this.left_strip.easeBrightness()\n                this.right_strip.easeBrightness()"],[0,"\n   "]],"start1":4903,"start2":4903,"length1":109,"length2":8},{"diffs":[[0,"rue\n"],[-1,"            }\n                \n"],[0,"    "]],"start1":4941,"start2":4941,"length1":39,"length2":8},{"diffs":[[0,".anim_idx = "],[-1,"0"],[1,"1"],[0,"\n           "]],"start1":5664,"start2":5664,"length1":25,"length2":25}]}]},{"timestamp":1727036512050,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"this.anim_idx = "],[-1,"0"],[1,"BRAKE_LIGHT_END "],[0,"\n        this.le"]],"start1":4345,"start2":4345,"length1":33,"length2":48},{"diffs":[[0,"im_idx+="],[-1,"5"],[1,"1"],[0,"\n       "]],"start1":4713,"start2":4713,"length1":17,"length2":17},{"diffs":[[0,"    "],[-1,"if (this.anim_idx == 1) {\n                this.left_strip.setBrightness(0xff)\n                this.right_strip.setBrightness(0xff)\n    "],[1,"this.left_strip.setBrightness(this.anim_idx)\n"],[0,"    "]],"start1":4744,"start2":4744,"length1":143,"length2":53},{"diffs":[[0,"       this."],[-1,"lef"],[1,"righ"],[0,"t_strip."],[-1,"ea"],[0,"se"],[1,"t"],[0,"Brightness()"]],"start1":4798,"start2":4798,"length1":39,"length2":39},{"diffs":[[0,"ess("],[-1,")\n                this.right_strip.easeBrightness()\n            }\n\n            if (this.anim_idx == 120) {\n                this.left_strip.setBrightness(0)\n                this.right_strip.setBrightness(0)"],[1,"this.anim_idx)\n\n            if (this.anim_idx > 0xff) {"],[0,"\n   "]],"start1":4832,"start2":4832,"length1":213,"length2":63},{"diffs":[[0,"s()\n"],[-1,"            }\n\n            if (this.anim_idx > 240) {\n"],[0,"    "]],"start1":4987,"start2":4987,"length1":62,"length2":8}]}]},{"timestamp":1727037084597,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ht: boolean\n"],[1,"    kn_complete: boolean\n"],[0,"    anim_cou"]],"start1":4116,"start2":4116,"length1":24,"length2":49},{"diffs":[[0,"unt: number\n"],[-1,""],[0,"    inc_dec:"]],"start1":4164,"start2":4164,"length1":24,"length2":24},{"diffs":[[0,"to_right = true\n"],[1,"        this.kn_complete = false\n"],[0,"        this.com"]],"start1":4381,"start2":4381,"length1":32,"length2":65},{"diffs":[[0,"}\n\n    tick() {\n"],[1,"        if (this.kn_complete) {\n            this.anim_idx+=5\n            \n            if (this.anim_idx == 1) {\n                this.left_strip.setBrightness(0xff)\n                this.right_strip.setBrightness(0xff)\n                this.left_strip.easeBrightness()\n                this.right_strip.easeBrightness()\n            }\n\n            if (this.anim_idx == 120) {\n                this.left_strip.setBrightness(0)\n                this.right_strip.setBrightness(0)\n                this.left_strip.easeBrightness()\n                this.right_strip.easeBrightness()\n            }\n\n            if (this.anim_idx > 240) {\n                this.complete = true\n            }\n                \n            \n            return\n        }\n\n"],[0,"        const id"]],"start1":4631,"start2":4631,"length1":32,"length2":766},{"diffs":[[0,"       this."],[-1,"complete = true"],[1,"anim_idx = 0\n            this.kn_complete = true\n            setAllRgb(this.left_strip, 0xff0000)\n            setAllRgb(this.right_strip, 0xff0000)\n\n            this.left_strip.setBrightness(0)\n            this.right_strip.setBrightness(0)"],[0,"\n        }\n "]],"start1":6046,"start2":6046,"length1":39,"length2":263},{"diffs":[[0," [new BikeLights"],[-1,"Faked"],[0,"(left_strip, rig"]],"start1":19689,"start2":19689,"length1":37,"length2":32},{"diffs":[[0," }\n    \n})\n\n"],[1,"basic.showNumber(effects_idx);\n\n"],[0,"const startu"]],"start1":20364,"start2":20364,"length1":24,"length2":56},{"diffs":[[0,"use("],[-1,"5);\n}\n\nconst br = [0, 16, 32,64,128, 0xff]\n\nsetAllRgb(left_strip, 0xffffff)\nsetAllRgb(right_strip, 0xffffff)\n\nfor (let brightness of br) {\n    left_strip.setBrightness(brightness)\n    left_strip.show()\n    right_strip.show()\n    pause(25)\n}\n\nbasic.showNumber(effects_idx);"],[1,"10);\n}"],[0,"\n\nle"]],"start1":20580,"start2":20580,"length1":280,"length2":14}]}]},{"timestamp":1727037519090,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," }\n\n"],[-1,"    toggle_state(state: LightState) {\n        this.get_flag(state) ? this.unset_flag(state) : this.set_flag(state)\n    }\n\n"],[0,"    "]],"start1":2373,"start2":2373,"length1":130,"length2":8},{"diffs":[[0,"E_LIGHT_END)"],[1,"\n\n        this.averager = new AccelerometerAverage()"],[0,"\n    }\n\n    "]],"start1":14199,"start2":14199,"length1":24,"length2":76}]}]},{"timestamp":1727038108878,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"number;\n"],[1,"    _preserve: number;\n"],[0,"    cons"]],"start1":2052,"start2":2052,"length1":16,"length2":39},{"diffs":[[0,"ate "],[-1,"|"],[0,"="],[1," this._light_state |"],[0," fla"]],"start1":2634,"start2":2634,"length1":10,"length2":29},{"diffs":[[0,"ate "],[-1,"&"],[0,"="],[1," this._light_state &"],[0," ~fl"]],"start1":2725,"start2":2725,"length1":10,"length2":29},{"diffs":[[0,"his."],[-1,"toggle_state(LightState.LeftIndicate)\n    }\n\n    toggle_right_indicator() {\n        this.toggle_state"],[1,"get_flag(LightState.LeftIndicate) ? this.unset_flag(LightState.LeftIndicate) : this.set_flag(LightState.LeftIndicate)\n    }\n\n    toggle_right_indicator() {\n        this.get_flag(LightState.RightIndicate) ? this.unset_flag(LightState.RightIndicate) : this.set_flag"],[0,"(Lig"]],"start1":2803,"start2":2803,"length1":109,"length2":271},{"diffs":[[0,"tick() {\n       "],[-1," //"],[0," this.light_stat"]],"start1":14533,"start2":14533,"length1":35,"length2":32},{"diffs":[[0,"        "],[-1,"\n        // "],[0,"if (this"]],"start1":14599,"start2":14599,"length1":28,"length2":16},{"diffs":[[0,"ghts)) {\n       "],[-1," //"],[0,"     setAllRgb(t"]],"start1":14654,"start2":14654,"length1":35,"length2":32},{"diffs":[[0,"ff0000)\n        "],[-1,"//"],[0,"    "],[-1," "],[0,"setAllRgb(this.r"]],"start1":14710,"start2":14710,"length1":39,"length2":36},{"diffs":[[0,"xff0000)\n       "],[-1," //"],[0,"     this.left_b"]],"start1":14765,"start2":14765,"length1":35,"length2":32},{"diffs":[[0,"TNESS);\n        "],[-1,"//"],[0,"    "],[-1," "],[0,"this.right_brake"]],"start1":14839,"start2":14839,"length1":39,"length2":36},{"diffs":[[0,"TNESS);\n\n       "],[-1," //"],[0,"     setAllRgb(t"]],"start1":14913,"start2":14913,"length1":35,"length2":32},{"diffs":[[0,"fff)\n       "],[-1," //"],[0,"     setAllR"]],"start1":14975,"start2":14975,"length1":27,"length2":24},{"diffs":[[0,"xffffff)\n       "],[-1," //"],[0,"     this.left_i"]],"start1":15030,"start2":15030,"length1":35,"length2":32},{"diffs":[[0,"\n       "],[-1," //"],[0,"     thi"]],"start1":15116,"start2":15116,"length1":19,"length2":16},{"diffs":[[0,"GHTNESS)\n       "],[-1," //"],[0," }\n\n        // t"]],"start1":15187,"start2":15187,"length1":35,"length2":32},{"diffs":[[0,"    "],[-1," // this.light_state.set_flag(LightState.Brake);\n        //"],[0," if "]],"start1":15210,"start2":15210,"length1":67,"length2":8},{"diffs":[[0,"\n       "],[-1," //"],[0," }\n\n    "]],"start1":15523,"start2":15523,"length1":19,"length2":16},{"diffs":[[0,"    "],[-1,"light_state.toggle_state"],[1,"console.log(light_state.get_flag(LightState.Brake))\n            light_state.get_flag(LightState.Brake) ? light_state.unset_flag(LightState.Brake) : light_state.set_flag"],[0,"(Lig"]],"start1":18173,"start2":18173,"length1":32,"length2":176}]}]},{"timestamp":1727038618367,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," = 255\n\n"],[1,"enum LightState {\n    Brake = 0x1,\n    LeftIndicate = 0x2,\n    RightIndicate = 0x4\n}\n\nenum LightMode {\n    Braking = 0x10,\n    IndicateLeft = 0x20,\n    IndicateRight = 0x40,\n    NightLights = 0x80\n}"],[0,"\n\nenum B"]],"start1":503,"start2":503,"length1":16,"length2":214},{"diffs":[[0,"\n}\n\n"],[-1,"enum LightState {\n    Brake = 0x01,\n    LeftIndicate = 0x02,\n    RightIndicate = 0x04\n}\n\nenum LightMode {\n    Braking = 0x10,\n    IndicateLeft = 0x20,\n    IndicateRight = 0x40,\n    NightLights = 0x80\n}\n\n"],[0,"clas"]],"start1":2008,"start2":2008,"length1":211,"length2":8},{"diffs":[[0,"&= ~"],[-1,"("],[0,"flag"],[-1,")"],[0,"\n   "]],"start1":2687,"start2":2687,"length1":14,"length2":12},{"diffs":[[0,".Brake);\n       "],[1," //"],[0," if (this.light_"]],"start1":15073,"start2":15073,"length1":32,"length2":35},{"diffs":[[0,"HTNESS);\n       "],[1," //"],[0," }\n\n        // i"]],"start1":15393,"start2":15393,"length1":32,"length2":35},{"diffs":[[0,"/ }\n\n       "],[-1," //"],[0," if (!this.l"]],"start1":15411,"start2":15411,"length1":27,"length2":24},{"diffs":[[0,"ake)) {\n        "],[-1,"//"],[0,"    "],[-1," "],[0,"setAllRgb(this.l"]],"start1":15521,"start2":15521,"length1":39,"length2":36},{"diffs":[[0,"ange, 0)\n       "],[-1," //"],[0,"     setAllRgb(t"]],"start1":15568,"start2":15568,"length1":35,"length2":32},{"diffs":[[0,"ange, 0)\n       "],[-1," //"],[0," }\n\n        this"]],"start1":15617,"start2":15617,"length1":35,"length2":32},{"diffs":[[0,"() {\n   "],[-1," //"],[0," if (eff"]],"start1":18984,"start2":18984,"length1":19,"length2":16},{"diffs":[[0,"= 4)\n   "],[-1," //"],[0," {\n     "]],"start1":19010,"start2":19010,"length1":19,"length2":16},{"diffs":[[0,"hts)\n   "],[-1," //"],[0," } else "]],"start1":19079,"start2":19079,"length1":19,"length2":16},{"diffs":[[0,"se {\n   "],[-1," //"],[0,"     pro"]],"start1":19092,"start2":19092,"length1":19,"length2":16},{"diffs":[[0,"ght)\n   "],[-1," //"],[0," }\n    \n"]],"start1":19152,"start2":19152,"length1":19,"length2":16},{"diffs":[[0,"e()\n"],[-1,"        console.log(\"init\")\n"],[0,"    "]],"start1":19843,"start2":19843,"length1":36,"length2":8}]}]},{"timestamp":1727039215409,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,") {\n"],[-1,"        console.log(`get flag: ${this.get_flag(state)}`)\n"],[0,"    "]],"start1":2393,"start2":2393,"length1":65,"length2":8},{"diffs":[[0,"xtends Effect {\n"],[1,"    light_state: BikeLightState\n"],[0,"    left_brake_r"]],"start1":8508,"start2":8508,"length1":32,"length2":64},{"diffs":[[0,": neopixel.Strip"],[1,", light_state: BikeLightState"],[0,") {\n        supe"]],"start1":8915,"start2":8915,"length1":32,"length2":61},{"diffs":[[0,"p, right_strip)\n"],[1,"        this.light_state = light_state;\n"],[0,"        this.tic"]],"start1":8987,"start2":8987,"length1":32,"length2":72},{"diffs":[[0,"tings()\n        "],[1,"this."],[0,"light_state.rese"]],"start1":9901,"start2":9901,"length1":32,"length2":37},{"diffs":[[0,"ng)\n            "],[1,"this."],[0,"light_state.set_"]],"start1":10125,"start2":10125,"length1":32,"length2":37},{"diffs":[[0,"lse\n            "],[1,"this."],[0,"light_state.unse"]],"start1":10194,"start2":10194,"length1":32,"length2":37},{"diffs":[[0,"e)\n\n        if ("],[1,"this."],[0,"light_state.get_"]],"start1":10253,"start2":10253,"length1":32,"length2":37},{"diffs":[[0," }\n\n        if ("],[1,"this."],[0,"light_state.get_"]],"start1":10861,"start2":10861,"length1":32,"length2":37},{"diffs":[[0,"}\n\n        if (!"],[1,"this."],[0,"light_state.get_"]],"start1":11190,"start2":11190,"length1":32,"length2":37},{"diffs":[[0,"ightLights) && !"],[1,"this."],[0,"light_state.get_"]],"start1":11243,"start2":11243,"length1":32,"length2":37},{"diffs":[[0,"            if ("],[1,"this."],[0,"light_state.get_"]],"start1":11542,"start2":11542,"length1":32,"length2":37},{"diffs":[[0,"                "],[1,"this."],[0,"light_state.togg"]],"start1":11611,"start2":11611,"length1":32,"length2":37},{"diffs":[[0,"            if ("],[1,"this."],[0,"light_state.get_"]],"start1":11673,"start2":11673,"length1":32,"length2":37},{"diffs":[[0,"            if ("],[1,"this."],[0,"light_state.get_"]],"start1":12171,"start2":12171,"length1":32,"length2":37},{"diffs":[[0,"                "],[1,"this."],[0,"light_state.togg"]],"start1":12241,"start2":12241,"length1":32,"length2":37},{"diffs":[[0,"            if ("],[1,"this."],[0,"light_state.get_"]],"start1":12304,"start2":12304,"length1":32,"length2":37},{"diffs":[[0,": neopixel.Strip"],[1,", light_state: BikeLightState"],[0,") {\n        supe"]],"start1":13244,"start2":13244,"length1":32,"length2":61},{"diffs":[[0,"p, right_strip)\n"],[1,"        this.light_state = light_state;\n"],[0,"        this.tic"]],"start1":13316,"start2":13316,"length1":32,"length2":72},{"diffs":[[0,"tings()\n        "],[1,"this."],[0,"light_state.rese"]],"start1":14174,"start2":14174,"length1":32,"length2":37},{"diffs":[[0,"ick() {\n        "],[1,"// this."],[0,"light_state.set_"]],"start1":14318,"start2":14318,"length1":32,"length2":40},{"diffs":[[0,"        \n       "],[1," //"],[0," if ("],[1,"this."],[0,"light_state.get_"]],"start1":14386,"start2":14386,"length1":37,"length2":45},{"diffs":[[0,"hts)) {\n        "],[1,"//"],[0,"    "],[1," "],[0,"setAllRgb(this.l"]],"start1":14454,"start2":14454,"length1":36,"length2":39},{"diffs":[[0,"xff0000)\n       "],[1," //"],[0,"     setAllRgb(t"]],"start1":14511,"start2":14511,"length1":32,"length2":35},{"diffs":[[0,"xff0000)\n       "],[1," //"],[0,"     this.left_b"]],"start1":14570,"start2":14570,"length1":32,"length2":35},{"diffs":[[0,"TNESS);\n        "],[1,"//"],[0,"    "],[1," "],[0,"this.right_brake"]],"start1":14647,"start2":14647,"length1":36,"length2":39},{"diffs":[[0,"TNESS);\n\n       "],[1," //"],[0,"     setAllRgb(t"]],"start1":14724,"start2":14724,"length1":32,"length2":35},{"diffs":[[0,"xffffff)\n       "],[1," //"],[0,"     setAllRgb(t"]],"start1":14785,"start2":14785,"length1":32,"length2":35},{"diffs":[[0,"xffffff)\n       "],[1," //"],[0,"     this.left_i"]],"start1":14847,"start2":14847,"length1":32,"length2":35},{"diffs":[[0,"GHTNESS)\n       "],[1," //"],[0,"     this.right_"]],"start1":14928,"start2":14928,"length1":32,"length2":35},{"diffs":[[0,"GHTNESS)\n       "],[1," //"],[0," }\n\n        // l"]],"start1":15010,"start2":15010,"length1":32,"length2":35},{"diffs":[[0,"     // "],[1,"this."],[0,"light_st"]],"start1":15036,"start2":15036,"length1":16,"length2":21},{"diffs":[[0,"    "],[-1,"console.log(`tick ${light_state.state}`)\n        if ("],[1,"if (this."],[0,"ligh"]],"start1":15093,"start2":15093,"length1":61,"length2":17},{"diffs":[[0,"\n       "],[1," //"],[0," if (!"],[1,"this."],[0,"light_st"]],"start1":15416,"start2":15416,"length1":22,"length2":30},{"diffs":[[0,"ts) && !"],[1,"this."],[0,"light_st"]],"start1":15478,"start2":15478,"length1":16,"length2":21},{"diffs":[[0,"rake)) {\n       "],[1," //"],[0,"     setAllRgb(t"]],"start1":15524,"start2":15524,"length1":32,"length2":35},{"diffs":[[0,"ange, 0)\n       "],[1," //"],[0,"     setAllRgb(t"]],"start1":15575,"start2":15575,"length1":32,"length2":35},{"diffs":[[0,"ange, 0)\n       "],[1," //"],[0," }\n\n        this"]],"start1":15627,"start2":15627,"length1":32,"length2":35},{"diffs":[[0,"            if ("],[1,"this."],[0,"light_state.get_"]],"start1":15770,"start2":15770,"length1":32,"length2":37},{"diffs":[[0,"                "],[1,"this."],[0,"light_state.togg"]],"start1":15839,"start2":15839,"length1":32,"length2":37},{"diffs":[[0,"            if ("],[1,"this."],[0,"light_state.get_"]],"start1":15901,"start2":15901,"length1":32,"length2":37},{"diffs":[[0,"            if ("],[1,"this."],[0,"light_state.get_"]],"start1":16379,"start2":16379,"length1":32,"length2":37},{"diffs":[[0,"                "],[1,"this."],[0,"light_state.togg"]],"start1":16449,"start2":16449,"length1":32,"length2":37},{"diffs":[[0,"    if ("],[1,"this."],[0,"light_st"]],"start1":16520,"start2":16520,"length1":16,"length2":21},{"diffs":[[0," right_strip"],[1,", light_state"],[0,"), new Hazar"]],"start1":18526,"start2":18526,"length1":24,"length2":37},{"diffs":[[0,"ht_strip"],[1,", light_state"],[0,")]\nlet e"]],"start1":18704,"start2":18704,"length1":16,"length2":29}]}]},{"timestamp":1727039640921,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"NightLights)) {\n"],[1,"            setAllRgb(this.left_brake_range, 0xff0000)\n            setAllRgb(this.right_brake_range, 0xff0000)\n            this.left_brake_range.setBrightness(NIGHT_LIGHT_BRIGHTNESS);\n            this.right_brake_range.setBrightness(NIGHT_LIGHT_BRIGHTNESS);\n\n"],[0,"            setA"]],"start1":14247,"start2":14247,"length1":32,"length2":291},{"diffs":[[0,"Brake);\n"],[1,"        console.log(`tick ${light_state.state}`)\n        if (light_state.get_flag(LightState.Brake)) {\n    "],[0,"        "]],"start1":14850,"start2":14850,"length1":16,"length2":123},{"diffs":[[0,"ange, 0xff0000)\n"],[1,"    "],[0,"        setAllRg"]],"start1":15000,"start2":15000,"length1":32,"length2":36},{"diffs":[[0,"00)\n"],[-1,"        if (light_state.get_flag(LightState.Brake)) {\n"],[0,"    "]],"start1":15068,"start2":15068,"length1":62,"length2":8},{"diffs":[[0,"NESS);\n        }"],[-1," else"],[1,"\n\n        if (!light_state.get_flag(LightMode.NightLights) && !light_state.get_flag(LightState.Brake))"],[0," {\n            t"]],"start1":15212,"start2":15212,"length1":37,"length2":134},{"diffs":[[0,") {\n            "],[1,"setAllRgb("],[0,"this.left_brake_"]],"start1":15329,"start2":15329,"length1":32,"length2":42},{"diffs":[[0,"ange"],[-1,".setBrightness(NIGHT_LIGHT_BRIGHTNESS);"],[1,", 0)"],[0,"\n   "]],"start1":15372,"start2":15372,"length1":47,"length2":12},{"diffs":[[0," 0)\n            "],[1,"setAllRgb("],[0,"this.right_brake"]],"start1":15377,"start2":15377,"length1":32,"length2":42},{"diffs":[[0,"ange"],[-1,".setBrightness(NIGHT_LIGHT_BRIGHTNESS);"],[1,", 0)"],[0,"\n   "]],"start1":15421,"start2":15421,"length1":47,"length2":12}]}]},{"timestamp":1727040127058,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ar:\n"],[-1,"            control.reset()\n"],[0,"    "]],"start1":16549,"start2":16549,"length1":36,"length2":8}]}]},{"timestamp":1727040612111,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"UP)\n"],[-1,"radio.set\n"],[0,"\n\nco"]],"start1":16436,"start2":16436,"length1":18,"length2":8}]}]},{"timestamp":1727337649365,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,".set"],[-1,"TransmitPower()"],[0,"\n\n\nc"]],"start1":16445,"start2":16445,"length1":23,"length2":8}]}]},{"timestamp":1727337652384,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"radio_on_number_drag\" x=\"355\" y=\"-603\"><value name=\"HANDLER_DRAG_PARAM_receivedNumber\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedNumber</field></block></value></block><block type=\"device_forever\" x=\"543\" y=\"-384\"><statement name=\"HANDLER\"><block type=\"neopixel_rotate\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><value name=\"offset\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"neopixel_show\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">200</field></shadow></value></block></next></block></next></block></statement></block><block type=\"pxt-on-start\" x=\"48\" y=\"8\"><statement name=\"HANDLER\"><block type=\"device_print_message\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\">O</field></shadow></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"neopixel_create\"><field name=\"pin\">DigitalPin.P0</field><field name=\"mode\">NeoPixelMode.RGB</field><value name=\"numleds\"><shadow type=\"math_number\"><field name=\"NUM\">96</field></shadow></value></block></value><next><block type=\"neopixel_set_strip_rainbow\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><value name=\"startHue\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><value name=\"endHue\"><shadow type=\"math_number\"><field name=\"NUM\">360</field></shadow></value></block></next></block></next></block></statement></block><"],[0,"/xml>"]],"start1":123,"start2":123,"length1":13,"length2":1909}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"itPower("],[-1,"7"],[0,")\n\n\ncons"]],"start1":16455,"start2":16455,"length1":17,"length2":16}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":290,"start2":290,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1726220160824,"editorVersion":"7.0.40","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","pxt.json":"{\n    \"name\": \"bike-lights\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n"}},{"timestamp":1726236068533,"editorVersion":"7.0.40","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"e%?B/KcK7G1GMa}|XACI\">strip</variable></variables><block type=\"radio_on_number_drag\" x=\"355\" y=\"-603\"><value name=\"HANDLER_DRAG_PARAM_receivedNumber\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedNumber</field></block></value></block><block type=\"device_forever\" x=\"543\" y=\"-384\"><statement name=\"HANDLER\"><block type=\"neopixel_rotate\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><value name=\"offset\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"neopixel_show\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">200</field></shadow></value></block></next></block></next></block></statement></block><block type=\"pxt-on-start\" x=\"48\" y=\"8\"><statement name=\"HANDLER\"><block type=\"device_print_message\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\">O</field></shadow></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"neopixel_create\"><field name=\"pin\">DigitalPin.P0</field><field name=\"mode\">NeoPixelMode.RGB</field><value name=\"numleds\"><shadow type=\"math_number\"><field name=\"NUM\">96</field></shadow></value></block></value><next><block type=\"neopixel_set_strip_rainbow\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><value name=\"startHue\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><value name=\"endHue\"><shadow type=\"math_number\"><field name=\"NUM\">360</field></shadow></value></block></next></block></next></block></statement></block></xml>","main.ts":"enum LightState {\n    Brake = 0x01,\n    LeftIndicate = 0x02,\n    RightIndicate = 0x04,\n    Rainbow = 0x08,\n    BumbleBee = 0x10,\n    Hazard = LeftIndicate | RightIndicate | Brake,\n}\n\nenum RadioLightState {\n    \n    Left = 0,\n    Right = 1,\n    Standard = 2,\n    Hazard = 3,\n    BumbleBee = 4,\n    Rainbow = 5\n}\n\nconst INDICATOR_QUANTUM = 4\nconst STRIP_LENGTH = 96\n\nlet light_state = LightState.Brake;\nlet prev_state = light_state;\n\nradio.onReceivedNumber(function (receivedNumber) {\n\tswitch (receivedNumber) {\n        case RadioLightState.Left:\n            break\n        case RadioLightState.Right:\n            break\n        case RadioLightState.Standard:\n            break\n        case RadioLightState.Hazard:\n            break\n        case RadioLightState.BumbleBee:\n            break\n        case RadioLightState.Rainbow:\n            break\n\n    }\n})\n\n\nlet leftStrip = neopixel.create(DigitalPin.P0, STRIP_LENGTH, NeoPixelMode.RGB)\nlet leftIndicatorRange = leftStrip.range(0,30)\nlet leftBrakeRange = leftStrip.range(30, STRIP_LENGTH)\nlet left_on_off = false\nlet left_counter = 0;\n\nlet rightStrip = neopixel.create(DigitalPin.P1, STRIP_LENGTH, NeoPixelMode.RGB)\nlet rightIndicatorRange = rightStrip.range(0, 30)\nlet rightBrakeRange = rightStrip.range(30, STRIP_LENGTH)\nlet right_counter = 0;\nlet right_on_off = false;\n\nlet idx = 0;\nlet mode = [LightState.Brake, LightState.Hazard, LightState.Rainbow, LightState.BumbleBee]\ninput.onButtonPressed(Button.AB, function() {\n    idx = (idx + 1) % mode.length;\n    light_state = mode[idx]\n    basic.showNumber(idx);\n})\n\ninput.onButtonPressed(Button.A, function () {\n    if (light_state & LightState.LeftIndicate)\n        light_state &= ~LightState.LeftIndicate;\n    else \n        light_state |= LightState.LeftIndicate;\n})\n\ninput.onButtonPressed(Button.B, function () {\n    if (light_state & LightState.RightIndicate)\n        light_state &= ~LightState.RightIndicate;\n    else\n        light_state |= LightState.RightIndicate;\n})\n\nbasic.showNumber(idx);\n                                      \nbasic.forever(function () {\n\n    if (light_state & LightState.BumbleBee) {\n        if ((prev_state & LightState.BumbleBee) == 0) {\n            for (let i = 0; i < STRIP_LENGTH; i++) {\n                let col = 0\n                if (i%2 == 0) {\n                    col = 0xffff00;\n                }\n                leftStrip.setPixelColor(i, col);\n                rightStrip.setPixelColor(i, col);\n            }\n        }\n\n        if (left_counter == 0) {\n            leftStrip.rotate()\n            rightStrip.rotate()\n        }\n\n        left_counter = (left_counter + 1) % INDICATOR_QUANTUM\n        \n    } else if (light_state & LightState.Rainbow) {\n        if ((prev_state & LightState.Rainbow) == 0) {\n            leftStrip.showRainbow(1,360)\n            rightStrip.showRainbow(1, 360);\n        }\n\n        leftStrip.rotate()\n        rightStrip.rotate()\n    } else {\n        // standard operating mode\n        if (light_state & LightState.Brake) {\n            leftBrakeRange.showColor(0xff0000)\n            rightBrakeRange.showColor(0xff0000)\n        }\n\n        if (light_state & LightState.LeftIndicate) {\n            if (left_on_off)\n                leftIndicatorRange.showColor(0xffa500)\n            else\n                leftIndicatorRange.showColor(0);\n\n            if (left_counter == 0)\n                left_on_off = !left_on_off\n\n            left_counter = (left_counter + 1) % INDICATOR_QUANTUM\n        } else {\n            leftIndicatorRange.showColor(0);\n        }\n\n        if (light_state & LightState.RightIndicate) {\n            if (right_on_off)\n                rightIndicatorRange.showColor(0xffa500)\n            else\n                rightIndicatorRange.showColor(0);\n\n            if (right_counter == 0)\n                right_on_off = !right_on_off\n\n            right_counter = (right_counter + 1) % INDICATOR_QUANTUM\n        } else {\n            rightIndicatorRange.showColor(0);\n        }\n    }\n    prev_state = light_state;\n\n    leftStrip.show()\n    rightStrip.show()\n    basic.pause(50)\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"bike-lights\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"neopixel\": \"github:microsoft/pxt-neopixel#v0.7.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1726483274995,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"e%?B/KcK7G1GMa}|XACI\">strip</variable></variables><block type=\"radio_on_number_drag\" x=\"355\" y=\"-603\"><value name=\"HANDLER_DRAG_PARAM_receivedNumber\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedNumber</field></block></value></block><block type=\"device_forever\" x=\"543\" y=\"-384\"><statement name=\"HANDLER\"><block type=\"neopixel_rotate\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><value name=\"offset\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"neopixel_show\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">200</field></shadow></value></block></next></block></next></block></statement></block><block type=\"pxt-on-start\" x=\"48\" y=\"8\"><statement name=\"HANDLER\"><block type=\"device_print_message\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\">O</field></shadow></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"neopixel_create\"><field name=\"pin\">DigitalPin.P0</field><field name=\"mode\">NeoPixelMode.RGB</field><value name=\"numleds\"><shadow type=\"math_number\"><field name=\"NUM\">96</field></shadow></value></block></value><next><block type=\"neopixel_set_strip_rainbow\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><value name=\"startHue\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><value name=\"endHue\"><shadow type=\"math_number\"><field name=\"NUM\">360</field></shadow></value></block></next></block></next></block></statement></block></xml>","main.ts":"const INDICATOR_QUANTUM = 4\nconst STRIP_LENGTH = 96\nconst RADIO_GROUP = 99\n\nenum LightState {\n    Brake = 0x1,\n    LeftIndicate = 0x2,\n    RightIndicate = 0x4,\n    Night = 0x8\n}\n\nenum LightMode {\n    Standard = 0x0,\n    Rainbow = 0x1,\n    BumbleBee = 0x4,\n    Hazard = 0x8,\n}\n\nenum RadioLightState {\n    Clear = 0,\n    LeftOn = 1,\n    LeftOff = 2,\n    RightOn = 3,\n    RightOff = 4,\n    Standard = 5,\n    Hazard = 6,\n    BumbleBee = 7,\n    Rainbow = 8,\n    Night = 9,\n    Day = 10\n}\n\nclass LightState {\n    constructor(initial_state: number) {\n        \n    }\n}\n\nradio.setGroup(RADIO_GROUP)\n\nlet light_state = LightState.Brake;\nlet prev_state = light_state;\n\n\nconst setMode = (mode: LightMode) => {\n    light_state = (light_state & 0x0f) | (mode << 4)\n}\n\n\nradio.onReceivedNumber(function (receivedNumber) {\n\tswitch (receivedNumber) {\n        case RadioLightState.Clear:\n            light_state = LightState.Brake\n            break\n        case RadioLightState.LeftOn:\n            light_state = LightState.LeftIndicate | (light_state & LightState.Brake)\n            break\n        case RadioLightState.LeftOff:\n            light_state = light_state & (LightState.RightIndicate | LightState.Brake)\n            break\n        case RadioLightState.RightOn:\n            light_state = LightState.RightIndicate | (light_state & LightState.Brake)\n            break\n        case RadioLightState.RightOff:\n            light_state = light_state & (LightState.LeftIndicate | LightState.Brake)\n            break\n        case RadioLightState.Standard:\n            setMode(LightMode.Standard)\n            break\n        case RadioLightState.Hazard:\n            setMode(LightMode.Hazard)\n            break\n        case RadioLightState.BumbleBee:\n            setMode(LightMode.BumbleBee)\n            break\n        case RadioLightState.Rainbow:\n            setMode(LightMode.Rainbow)\n            break\n        case RadioLightState.Night:\n\n    }\n})\n\n\nlet leftStrip = neopixel.create(DigitalPin.P0, STRIP_LENGTH, NeoPixelMode.RGB)\nlet leftIndicatorRange = leftStrip.range(0,30)\nlet leftBrakeRange = leftStrip.range(30, STRIP_LENGTH)\nlet left_on_off = false\nlet left_counter = 0;\n\nlet rightStrip = neopixel.create(DigitalPin.P1, STRIP_LENGTH, NeoPixelMode.RGB)\nlet rightIndicatorRange = rightStrip.range(0, 30)\nlet rightBrakeRange = rightStrip.range(30, STRIP_LENGTH)\nlet right_counter = 0;\nlet right_on_off = false;\n\nlet idx = 0;\nlet mode = [LightMode.Standard, LightMode.Hazard, LightMode.Rainbow, LightMode.BumbleBee]\n\ninput.onButtonPressed(Button.AB, function() {\n    idx = (idx + 1) % mode.length;\n    setMode(mode[idx])\n    basic.showNumber(idx);\n})\n\ninput.onButtonPressed(Button.A, function () {\n    if (light_state & LightState.LeftIndicate)\n        light_state &= ~LightState.LeftIndicate;\n    else \n        light_state |= LightState.LeftIndicate;\n})\n\ninput.onButtonPressed(Button.B, function () {\n    if (light_state & LightState.RightIndicate)\n        light_state &= ~LightState.RightIndicate;\n    else\n        light_state |= LightState.RightIndicate;\n})\n\nbasic.showNumber(idx);\n                                      \nbasic.forever(function () {\n    let light_mode = (light_state & 0xf0) >> 4\n    let prev_light_mode = (prev_state & 0xf0) >> 4\n\n    if (light_mode == LightMode.BumbleBee) {\n        // set the initial light state on the change from previous state\n        if (prev_light_mode != LightMode.BumbleBee) {\n            for (let i = 0; i < STRIP_LENGTH; i++) {\n                let col = 0\n                if (i%2 == 0) {\n                    col = 0xffff00;\n                }\n                leftStrip.setPixelColor(i, col);\n                rightStrip.setPixelColor(i, col);\n            }\n            left_counter = 0\n        }\n\n        if (left_counter == 0) {\n            leftStrip.rotate()\n            rightStrip.rotate()\n        }\n\n        left_counter = (left_counter + 1) % INDICATOR_QUANTUM\n        \n    }\n    \n    if (light_mode == LightMode.Rainbow) {\n        if (prev_light_mode != LightMode.Rainbow) {\n            leftStrip.showRainbow(1,360)\n            rightStrip.showRainbow(1, 360);\n        }\n\n        leftStrip.rotate()\n        rightStrip.rotate()\n    \n    } \n    \n    if (light_mode == LightMode.Hazard) {\n        if (prev_light_mode != LightMode.Hazard) {\n            leftStrip.clear()\n            rightStrip.clear();\n            left_counter = 0\n        }\n\n        if (left_on_off)\n            leftIndicatorRange.showColor(0xffa500)\n        else\n            leftIndicatorRange.showColor(0);\n\n        if (left_counter == 0)\n            left_on_off = !left_on_off\n\n        left_counter = (left_counter + 1) % INDICATOR_QUANTUM\n    }\n\n\n    // standard operating mode\n    if (light_mode == LightMode.Standard) {\n        \n        if (light_state & LightState.Brake) {\n            leftBrakeRange.showColor(0xff0000)\n            rightBrakeRange.showColor(0xff0000)\n            leftBrakeRange.setBrightness(255);\n        } else {\n            leftBrakeRange.setBrightness(128);\n            rightBrakeRange.setBrightness(128);\n        }\n\n        if (light_state & LightState.LeftIndicate) {\n            if (left_on_off)\n                leftIndicatorRange.showColor(0xffa500)\n            else\n                leftIndicatorRange.showColor(0);\n\n            if (left_counter == 0)\n                left_on_off = !left_on_off\n\n            left_counter = (left_counter + 1) % INDICATOR_QUANTUM\n        } else {\n            leftIndicatorRange.showColor(0);\n        }\n\n        if (light_state & LightState.RightIndicate) {\n            if (right_on_off)\n                rightIndicatorRange.showColor(0xffa500)\n            else\n                rightIndicatorRange.showColor(0);\n\n            if (right_counter == 0)\n                right_on_off = !right_on_off\n\n            right_counter = (right_counter + 1) % INDICATOR_QUANTUM\n        } else {\n            rightIndicatorRange.showColor(0);\n        }\n    }\n    \n    prev_state = light_state;\n\n    leftStrip.show()\n    rightStrip.show()\n    basic.pause(50)\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"bike-lights\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"neopixel\": \"github:microsoft/pxt-neopixel#v0.7.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1726576948769,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"e%?B/KcK7G1GMa}|XACI\">strip</variable></variables><block type=\"radio_on_number_drag\" x=\"355\" y=\"-603\"><value name=\"HANDLER_DRAG_PARAM_receivedNumber\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedNumber</field></block></value></block><block type=\"device_forever\" x=\"543\" y=\"-384\"><statement name=\"HANDLER\"><block type=\"neopixel_rotate\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><value name=\"offset\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"neopixel_show\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">200</field></shadow></value></block></next></block></next></block></statement></block><block type=\"pxt-on-start\" x=\"48\" y=\"8\"><statement name=\"HANDLER\"><block type=\"device_print_message\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\">O</field></shadow></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"neopixel_create\"><field name=\"pin\">DigitalPin.P0</field><field name=\"mode\">NeoPixelMode.RGB</field><value name=\"numleds\"><shadow type=\"math_number\"><field name=\"NUM\">96</field></shadow></value></block></value><next><block type=\"neopixel_set_strip_rainbow\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><value name=\"startHue\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><value name=\"endHue\"><shadow type=\"math_number\"><field name=\"NUM\">360</field></shadow></value></block></next></block></next></block></statement></block></xml>","main.ts":"const INDICATOR_QUANTUM = 4\nconst STRIP_LENGTH = 96\nconst RADIO_GROUP = 99\n\nenum LightState {\n    Brake = 0x1,\n    LeftIndicate = 0x2,\n    RightIndicate = 0x4,\n    Night = 0x8\n}\n\nenum LightMode {\n    Standard = 0x0,\n    Rainbow = 0x1,\n    BumbleBee = 0x4,\n    Hazard = 0x8,\n}\n\nenum RadioLightState {\n    Clear = 0,\n    LeftOn = 1,\n    LeftOff = 2,\n    RightOn = 3,\n    RightOff = 4,\n    Standard = 5,\n    Hazard = 6,\n    BumbleBee = 7,\n    Rainbow = 8,\n    Night = 9,\n    Day = 10\n}\n\nclass BikeLightState {\n    _light_state:number;\n    _preserve: number;\n    constructor() {\n        this._light_state = 0;\n        this.mode = LightMode.Standard;\n        this._preserve = 0xf0 | LightState.Night | LightState.Brake;\n    }\n\n    get mode() : LightMode {\n        return (this._light_state >> 4);\n    }\n\n    set mode(mode: LightMode) {\n        this._light_state = (this._light_state & 0xf) | (mode << 4)\n    }\n\n    reset() {\n        this._light_state = 0;\n    }\n\n    get state(): number {\n        return this._light_state & 0xf;\n    }\n\n    set state(mode: number) {\n        this._light_state = (this._light_state & this._preserve) | mode\n    }\n\n    set_flag(flag: number){\n        this._light_state = (this._light_state & this._preserve) | flag\n    }\n\n    unset_flag(flag: number) {\n        this._light_state = this._light_state & ~flag\n    }\n\n    indicatorLeft(on: boolean) {\n        on ? this.set_flag(LightState.LeftIndicate) : this.unset_flag(LightState.LeftIndicate)\n    }\n\n    indicatorRight(on: boolean) {\n        on ? this.set_flag(LightState.RightIndicate) : this.unset_flag(LightState.RightIndicate)\n    }\n}\n\nradio.setGroup(RADIO_GROUP)\n\nlet light_state: BikeLightState = new BikeLightState();\nlet prev_state: number = light_state.state;\n\n\nradio.onReceivedNumber(function (receivedNumber) {\n\tswitch (receivedNumber) {\n        case RadioLightState.Clear:\n            light_state.reset()\n            break\n        case RadioLightState.LeftOn:\n        case RadioLightState.LeftOff:\n            light_state.indicatorLeft(receivedNumber == RadioLightState.LeftOn)\n            break\n        case RadioLightState.RightOn:\n        case RadioLightState.RightOff:\n            light_state.indicatorRight(receivedNumber == RadioLightState.RightOn)\n            break\n        case RadioLightState.Standard:\n            light_state.mode = LightMode.Standard\n            break\n        case RadioLightState.Hazard:\n            light_state.mode = LightMode.Hazard\n            break\n        case RadioLightState.BumbleBee:\n            light_state.mode = LightMode.BumbleBee\n            break\n        case RadioLightState.Rainbow:\n            light_state.mode = LightMode.Rainbow\n            break\n        case RadioLightState.Night:\n            light_state.set_flag(LightState.Night)\n            break\n        case RadioLightState.Day:\n            light_state.unset_flag(LightState.Night)\n            break\n    }\n})\n\n\nlet leftStrip = neopixel.create(DigitalPin.P0, STRIP_LENGTH, NeoPixelMode.RGB)\nlet leftIndicatorRange = leftStrip.range(0,30)\nlet leftBrakeRange = leftStrip.range(30, STRIP_LENGTH)\nlet left_on_off = false\nlet left_counter = 0;\n\nlet rightStrip = neopixel.create(DigitalPin.P1, STRIP_LENGTH, NeoPixelMode.RGB)\nlet rightIndicatorRange = rightStrip.range(0, 30)\nlet rightBrakeRange = rightStrip.range(30, STRIP_LENGTH)\nlet right_counter = 0;\nlet right_on_off = false;\n\nlet idx = 0;\nlet mode = [LightMode.Standard, LightMode.Hazard, LightMode.Rainbow, LightMode.BumbleBee]\n\ninput.onButtonPressed(Button.AB, function() {\n    idx = (idx + 1) % mode.length;\n    light_state.mode = mode[idx]\n    basic.showNumber(idx);\n})\n\ninput.onButtonPressed(Button.A, function () {\n    light_state.indicatorLeft((light_state.state & LightState.LeftIndicate) > 0)\n})\n \ninput.onButtonPressed(Button.B, function () {\n    light_state.indicatorLeft((light_state.state & LightState.RightIndicate) > 0)\n})\n\nbasic.showNumber(idx);\n                                      \nbasic.forever(function () {\n    let light_mode = light_state.mode;\n    let prev_light_mode = (prev_state & 0xf0) >> 4\n\n    if (light_mode == LightMode.BumbleBee) {\n        // set the initial light state on the change from previous state\n        if (prev_light_mode != LightMode.BumbleBee) {\n            for (let i = 0; i < STRIP_LENGTH; i++) {\n                let col = 0\n                if (i%2 == 0) {\n                    col = 0xffff00;\n                }\n                leftStrip.setPixelColor(i, col);\n                rightStrip.setPixelColor(i, col);\n            }\n            left_counter = 0\n        }\n\n        if (left_counter == 0) {\n            leftStrip.rotate()\n            rightStrip.rotate()\n        }\n\n        left_counter = (left_counter + 1) % INDICATOR_QUANTUM\n        \n    }\n    \n    if (light_mode == LightMode.Rainbow) {\n        if (prev_light_mode != LightMode.Rainbow) {\n            leftStrip.showRainbow(1,360)\n            rightStrip.showRainbow(1, 360);\n        }\n\n        leftStrip.rotate()\n        rightStrip.rotate()\n    \n    } \n    \n    if (light_mode == LightMode.Hazard) {\n        if (prev_light_mode != LightMode.Hazard) {\n            leftStrip.clear()\n            rightStrip.clear();\n            left_counter = 0\n        }\n\n        if (left_on_off) {\n            leftIndicatorRange.showColor(0xffa500)\n            rightIndicatorRange.showColor(0xffa500)\n        }\n        else \n        {\n            leftIndicatorRange.showColor(0);\n            rightIndicatorRange.showColor(0)\n        }\n            \n        if (left_counter == 0)\n            left_on_off = !left_on_off\n\n        left_counter = (left_counter + 1) % INDICATOR_QUANTUM\n    }\n\n\n    // standard operating mode\n    if (light_mode == LightMode.Standard) {\n\n        if (prev_light_mode != LightMode.Standard) {\n            leftStrip.clear()\n            rightStrip.clear()\n        }\n        \n        if (light_state.state & LightState.Brake) {\n            leftBrakeRange.showColor(0xff0000)\n            rightBrakeRange.showColor(0xff0000)\n            leftBrakeRange.setBrightness(255);\n        } else if (light_state.state & LightState.Night) {\n            leftBrakeRange.showColor(0xff0000)\n            rightBrakeRange.showColor(0xff0000)\n            leftBrakeRange.setBrightness(64);\n            rightBrakeRange.setBrightness(64);\n        } else {\n            leftBrakeRange.setBrightness(128);\n            rightBrakeRange.setBrightness(128);\n        }\n\n        if (light_state.state & LightState.LeftIndicate) {\n            if (left_on_off)\n                leftIndicatorRange.showColor(0xffa500)\n            else\n                leftIndicatorRange.showColor(0);\n\n            if (left_counter == 0)\n                left_on_off = !left_on_off\n\n            left_counter = (left_counter + 1) % INDICATOR_QUANTUM\n        } else {\n            leftIndicatorRange.showColor(0);\n        }\n\n        if (light_state.state & LightState.RightIndicate) {\n            if (right_on_off)\n                rightIndicatorRange.showColor(0xffa500)\n            else\n                rightIndicatorRange.showColor(0);\n\n            if (right_counter == 0)\n                right_on_off = !right_on_off\n\n            right_counter = (right_counter + 1) % INDICATOR_QUANTUM\n        } else {\n            rightIndicatorRange.showColor(0);\n        }\n    }\n    \n    prev_state = light_state.state;\n\n    leftStrip.show()\n    rightStrip.show()\n    basic.pause(50)\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"bike-lights\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"neopixel\": \"github:microsoft/pxt-neopixel#v0.7.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1726759080092,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"e%?B/KcK7G1GMa}|XACI\">strip</variable></variables><block type=\"radio_on_number_drag\" x=\"355\" y=\"-603\"><value name=\"HANDLER_DRAG_PARAM_receivedNumber\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedNumber</field></block></value></block><block type=\"device_forever\" x=\"543\" y=\"-384\"><statement name=\"HANDLER\"><block type=\"neopixel_rotate\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><value name=\"offset\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"neopixel_show\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">200</field></shadow></value></block></next></block></next></block></statement></block><block type=\"pxt-on-start\" x=\"48\" y=\"8\"><statement name=\"HANDLER\"><block type=\"device_print_message\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\">O</field></shadow></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"neopixel_create\"><field name=\"pin\">DigitalPin.P0</field><field name=\"mode\">NeoPixelMode.RGB</field><value name=\"numleds\"><shadow type=\"math_number\"><field name=\"NUM\">96</field></shadow></value></block></value><next><block type=\"neopixel_set_strip_rainbow\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><value name=\"startHue\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><value name=\"endHue\"><shadow type=\"math_number\"><field name=\"NUM\">360</field></shadow></value></block></next></block></next></block></statement></block></xml>","main.ts":"const PAUSE_QUANTUM = 10\nconst INDICATOR_QUANTUM = 20\nconst STRIP_LENGTH = 96\nconst RADIO_GROUP = 99\nconst SAMPLE_SIZE = 10\nconst BRAKE_THRESHOLD = 1100\nconst ACCEL_THRESHOLD = 1000\n\nenum LightState {\n    Brake = 0x1,\n    LeftIndicate = 0x2,\n    RightIndicate = 0x4\n}\n\nenum LightMode {\n    Braking = 0x10,\n    IndicateLeft = 0x20,\n    IndicateRight = 0x40,\n    NightLights = 0x80\n}\n\nenum BikeState {\n    Accelerating,\n    Braking\n}\n\nclass AccelerometerAverage {\n    _samples: number[]\n    _sample_index = 0;\n    _last_sample = 0\n    _state = BikeState.Braking\n    constructor() {\n        this._last_sample = 0\n        this._samples = [];\n        for (let i = 0; i < SAMPLE_SIZE; i++) {\n            this._samples.push(0)\n        }\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    sample() {\n        const sample = input.acceleration(Dimension.Strength)\n        this._samples[this._sample_index] = sample;\n\n        console.log(`sample: ${sample}`)\n        this._sample_index = (this._sample_index + 1) % SAMPLE_SIZE;\n\n        if (this._sample_index == 0) {\n            this._computeAverageSample()\n        }\n    }\n\n    _computeAverageSample() {\n        let avg = 0;\n        for (let j = 0; j < SAMPLE_SIZE; j++) {\n            avg += this._samples[j];\n        }\n\n        avg = avg / SAMPLE_SIZE;\n\n        console.log(`avg: ${avg}`)\n\n        if (avg > BRAKE_THRESHOLD) {\n            this._state = BikeState.Braking\n        } else if (avg < ACCEL_THRESHOLD) {\n            this._state = BikeState.Accelerating\n        }\n    }\n}\n\nenum ControlCommand {\n    Clear = 0,\n    IndicateLeft,\n    IndicateRight,\n    NightMode,\n    NextMode\n}\n\nenum LightEffectMode {\n    BikeLights,\n    BumbleBee,\n    Rainbow,\n    Hazards,\n}\n\nclass BikeLightState {\n    _light_state:number;\n    _preserve: number;\n    constructor() {\n        this._light_state = 0;\n    }\n\n\n    reset() {\n        this._light_state = 0;\n    }\n\n    get state(): number {\n        return this._light_state;\n    }\n\n    toggle_mode(mode: LightMode) {\n        this.get_flag(mode) ? this.unset_flag(mode) : this.set_flag(mode)\n    }\n\n    get_flag(flag: number) : boolean {\n        return !!(this.state & flag)\n    }\n\n    set_flag(flag: number){\n        this._light_state = this._light_state | flag\n    }\n\n    unset_flag(flag: number) {\n        this._light_state = this._light_state & ~flag\n    }\n\n    toggle_left_indicator() {\n        this.get_flag(LightState.LeftIndicate) ? this.unset_flag(LightState.LeftIndicate) : this.set_flag(LightState.LeftIndicate)\n    }\n\n    toggle_right_indicator() {\n        this.get_flag(LightState.RightIndicate) ? this.unset_flag(LightState.RightIndicate) : this.set_flag(LightState.RightIndicate)\n    }\n}\n\nconst broadcastLightEffect = (state: LightEffectMode) => {\n    radio.sendNumber(state)\n}\n\nconst broadcastEffectCommand = (command: number) => {\n    if (command <= 0xf)\n        return;\n    radio.sendNumber(command)\n}\n\nclass Effect {\n    left_strip: neopixel.Strip\n    right_strip: neopixel.Strip\n    tick_rate: number\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        this.left_strip = left_strip\n        this.right_strip = right_strip\n        this.tick_rate = INDICATOR_QUANTUM;\n    }\n\n    default_strip_settings() {\n        this.left_strip.clear()\n        this.right_strip.clear()\n        this.left_strip.setBrightness(128)\n        this.right_strip.setBrightness(128)\n    }\n\n    initialise() {\n        this.default_strip_settings()\n    }\n\n    tick() {\n\n    }\n}\n\nclass BumbleBee extends Effect {\n    initialise() {\n        this.default_strip_settings()\n\n        for (let i = 0; i < STRIP_LENGTH; i++) {\n            let col = 0\n            if (i % 2 == 0) {\n                col = 0xffff00;\n            }\n            this.left_strip.setPixelColor(i, col);\n            this.right_strip.setPixelColor(i, col);\n        }\n\n        broadcastLightEffect(LightEffectMode.BumbleBee)\n    }\n\n    tick() {\n        this.left_strip.rotate()\n        this.right_strip.rotate()\n    }\n}\n\nclass Rainbow extends Effect {\n    initialise() {\n        this.default_strip_settings()\n        this.left_strip.showRainbow()\n        this.right_strip.showRainbow()\n\n        broadcastLightEffect(LightEffectMode.Rainbow)\n    }\n\n    tick() {\n        this.left_strip.rotate()\n        this.right_strip.rotate()\n    }\n}\n\nenum HazardsEffectState {\n    On = 0x10,\n    Off,\n}\nclass Hazard extends Effect {\n    on_off: boolean\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        super(left_strip, right_strip)\n        this.on_off = false\n    }\n\n    initialise() {\n        this.default_strip_settings();\n\n        broadcastLightEffect(LightEffectMode.Hazards)\n    }\n\n    tick() {\n        this.on_off = !this.on_off;\n\n        if (this.on_off) {\n            broadcastEffectCommand(HazardsEffectState.On)\n            this.left_strip.showColor(0xffa500)\n            this.right_strip.showColor(0xffa500)\n        } else {\n            broadcastEffectCommand(HazardsEffectState.Off)\n            this.left_strip.showColor(0);\n            this.right_strip.showColor(0)\n        }\n    }\n}\n\nenum BikeLightEffectState {\n    LeftOn = 0x10,\n    LeftOff,\n    RightOn,\n    RightOff\n}\nclass BikeLights extends Effect {\n    light_state: BikeLightState\n    left_brake_range: neopixel.Strip\n    left_indicator_range: neopixel.Strip\n    right_brake_range: neopixel.Strip\n    right_indicator_range: neopixel.Strip\n    averager: AccelerometerAverage;\n    inner_tick_rate: number\n\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip, light_state: BikeLightState) {\n        super(left_strip, right_strip)\n        this.light_state = light_state;\n        this.tick_rate = 1; // call each loop\n        this.inner_tick_rate = 0;\n        this.left_indicator_range = this.left_strip.range(0, 30);\n        this.left_brake_range = this.left_strip.range(30, STRIP_LENGTH - 30);\n        this.right_indicator_range = this.right_strip.range(0, 30);\n        this.right_brake_range = this.right_strip.range(30, STRIP_LENGTH - 30);\n\n        this.averager = new AccelerometerAverage()\n    }\n    \n    initialise() {\n        this.default_strip_settings()\n        this.light_state.reset()\n        this.inner_tick_rate = 0\n\n        broadcastLightEffect(LightEffectMode.BikeLights)\n    }\n\n    tick() {\n        averager.sample()\n\n        if (averager.state == BikeState.Braking)\n            this.light_state.set_flag(LightState.Brake)\n        else\n            this.light_state.unset_flag(LightState.Brake)\n\n        if (this.light_state.get_flag(LightState.Brake)) {\n            this.left_brake_range.showColor(0xff0000)\n            this.right_brake_range.showColor(0xff0000)\n            this.left_brake_range.setBrightness(255);\n            this.right_brake_range.setBrightness(255);\n        } else if (this.light_state.get_flag(LightMode.NightLights)) {\n            this.left_brake_range.showColor(0xff0000)\n            this.right_brake_range.showColor(0xff0000)\n            this.left_brake_range.setBrightness(64);\n            this.right_brake_range.setBrightness(64);\n        }\n\n        this.inner_tick_rate = (this.inner_tick_rate + 1) % INDICATOR_QUANTUM;\n\n        if (this.inner_tick_rate == 0) {\n            if (this.light_state.get_flag(LightMode.IndicateLeft)) {\n                this.light_state.toggle_left_indicator()\n\n                if (this.light_state.get_flag(LightState.LeftIndicate)) {\n                    broadcastEffectCommand(BikeLightEffectState.LeftOn)\n                    this.left_indicator_range.showColor(0xffa500)\n                } else {\n                    this.left_indicator_range.showColor(0)\n                    broadcastEffectCommand(BikeLightEffectState.LeftOff)\n                }\n                    \n            } else {\n                this.left_indicator_range.showColor(0);\n            }\n\n            if (this.light_state.get_flag(LightMode.IndicateRight)) {\n                this.light_state.toggle_right_indicator()\n\n                if (this.light_state.get_flag(LightState.RightIndicate)) {\n                    broadcastEffectCommand(BikeLightEffectState.RightOn)\n                    this.right_indicator_range.showColor(0xffa500)\n                } else {\n                    this.right_indicator_range.showColor(0)\n                    broadcastEffectCommand(BikeLightEffectState.RightOff)\n                }\n            } else {\n                this.right_indicator_range.showColor(0);\n            }\n        }\n        \n    }\n}\n\nradio.setGroup(RADIO_GROUP)\n\n\nconst processControlCommand = (command: number) => {\n    switch (command) {\n        case ControlCommand.Clear:\n            light_state.reset()\n            effects_idx = 0;\n            basic.showNumber(0);\n            break\n        case ControlCommand.IndicateLeft:\n            light_state.unset_flag(LightMode.IndicateRight)\n            light_state.toggle_mode(LightMode.IndicateLeft)\n            break\n        case ControlCommand.IndicateRight:\n            light_state.unset_flag(LightMode.IndicateLeft)\n            light_state.toggle_mode(LightMode.IndicateRight)\n            break\n        case ControlCommand.NightMode:\n            light_state.toggle_mode(LightMode.NightLights)\n            break\n        case ControlCommand.NextMode:\n            effects_idx = (effects_idx + 1) % effects.length\n            basic.showNumber(effects_idx)\n            break\n    }\n}\n\nradio.onReceivedNumber((receivedNumber) => {\n    processControlCommand(receivedNumber)\n})\n\nconst averager = new AccelerometerAverage()\nconst light_state = new BikeLightState()\n\nlet left_strip = neopixel.create(DigitalPin.P0, STRIP_LENGTH, NeoPixelMode.RGB)\nlet right_strip = neopixel.create(DigitalPin.P1, STRIP_LENGTH, NeoPixelMode.RGB)\n\nlet effects = [new BikeLights(left_strip, right_strip, light_state), new Hazard(left_strip, right_strip), new Rainbow(left_strip, right_strip), new BumbleBee(left_strip, right_strip)]\nlet effects_idx = 0\n\ninput.onButtonPressed(Button.AB, function() {\n    processControlCommand(ControlCommand.NextMode)\n})\n\ninput.onButtonPressed(Button.A, function () {\n    processControlCommand(ControlCommand.IndicateLeft)\n})\n \ninput.onButtonPressed(Button.B, function () {\n    processControlCommand(ControlCommand.IndicateRight)\n})\n\nbasic.showNumber(effects_idx);\n\nlet prev_effect_idx = -1;\nlet effect_counter = 0;\nbasic.forever(function () {\n    const effect: Effect = effects[effects_idx]\n\n    if (prev_effect_idx != effects_idx) {\n        effect_counter = 0;\n        effect.initialise()\n        prev_effect_idx = effects_idx;\n    }\n\n    effect_counter = (effect_counter + 1) % effect.tick_rate;\n\n    if (effect_counter == 0) {\n        effect.tick()\n    }\n\n    left_strip.show()\n    right_strip.show()\n    basic.pause(PAUSE_QUANTUM)\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"bike-lights\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"neopixel\": \"github:microsoft/pxt-neopixel#v0.7.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1726868785023,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"e%?B/KcK7G1GMa}|XACI\">strip</variable></variables><block type=\"radio_on_number_drag\" x=\"355\" y=\"-603\"><value name=\"HANDLER_DRAG_PARAM_receivedNumber\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedNumber</field></block></value></block><block type=\"device_forever\" x=\"543\" y=\"-384\"><statement name=\"HANDLER\"><block type=\"neopixel_rotate\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><value name=\"offset\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"neopixel_show\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">200</field></shadow></value></block></next></block></next></block></statement></block><block type=\"pxt-on-start\" x=\"48\" y=\"8\"><statement name=\"HANDLER\"><block type=\"device_print_message\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\">O</field></shadow></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"neopixel_create\"><field name=\"pin\">DigitalPin.P0</field><field name=\"mode\">NeoPixelMode.RGB</field><value name=\"numleds\"><shadow type=\"math_number\"><field name=\"NUM\">96</field></shadow></value></block></value><next><block type=\"neopixel_set_strip_rainbow\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><value name=\"startHue\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><value name=\"endHue\"><shadow type=\"math_number\"><field name=\"NUM\">360</field></shadow></value></block></next></block></next></block></statement></block></xml>","main.ts":"const PAUSE_QUANTUM = 10\nconst STANDARD_QUANTUM = 10\n\nconst RADIO_GROUP = 99\nconst SAMPLE_SIZE = 10\nconst BRAKE_THRESHOLD = 1100\nconst ACCEL_THRESHOLD = 1000\n\nconst STRIP_LENGTH = 96\nconst INDICATOR_LIGHT_START = 0\nconst INDICATOR_LIGHT_END = 30\nconst BRAKE_LIGHT_START = INDICATOR_LIGHT_END\nconst BRAKE_LIGHT_END = 75\nconst INTERIOR_LIGHT_START = BRAKE_LIGHT_END\nconst INTERIOR_LIGHT_END = STRIP_LENGTH\n\nconst NIGHT_LIGHT_BRIGHTNESS = 8\nconst INTERIOR_LIGHT_BRIGHTNESS = 64;\nconst BRAKE_LIGHT_BRIGHTNESS = 255\n\nenum LightState {\n    Brake = 0x1,\n    LeftIndicate = 0x2,\n    RightIndicate = 0x4\n}\n\nenum LightMode {\n    Braking = 0x10,\n    IndicateLeft = 0x20,\n    IndicateRight = 0x40,\n    NightLights = 0x80\n}\n\nenum BikeState {\n    Accelerating,\n    Braking\n}\n\nclass AccelerometerAverage {\n    _samples: number[]\n    _sample_index = 0;\n    _last_sample = 0\n    _state = BikeState.Braking\n    constructor() {\n        this._last_sample = 0\n        this._samples = [];\n        for (let i = 0; i < SAMPLE_SIZE; i++) {\n            this._samples.push(0)\n        }\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    sample() {\n        const sample = input.acceleration(Dimension.Strength)\n        this._samples[this._sample_index] = sample;\n\n        this._sample_index = (this._sample_index + 1) % SAMPLE_SIZE;\n\n        if (this._sample_index == 0) {\n            this._computeAverageSample()\n        }\n    }\n\n    _computeAverageSample() {\n        let avg = 0;\n        for (let j = 0; j < SAMPLE_SIZE; j++) {\n            avg += this._samples[j];\n        }\n\n        avg = avg / SAMPLE_SIZE;\n\n        if (avg > BRAKE_THRESHOLD) {\n            this._state = BikeState.Braking\n        } else if (avg < ACCEL_THRESHOLD) {\n            this._state = BikeState.Accelerating\n        }\n    }\n}\n\nenum ControlCommand {\n    Clear = 0,\n    IndicateLeft,\n    IndicateRight,\n    NightMode,\n    DayMode,\n    NextMode,\n    ForceBrakeLights\n}\n\nenum LightEffectMode {\n    BikeLights,\n    BumbleBee,\n    Rainbow,\n    Hazards,\n}\n\nclass BikeLightState {\n    _light_state:number;\n    _preserve: number;\n    constructor() {\n        this._light_state = 0;\n    }\n\n\n    reset() {\n        this._light_state = 0;\n    }\n\n    get state(): number {\n        return this._light_state;\n    }\n\n    toggle_mode(mode: LightMode) {\n        this.get_flag(mode) ? this.unset_flag(mode) : this.set_flag(mode)\n    }\n\n    get_flag(flag: number) : boolean {\n        return (this.state & flag) > 0\n    }\n\n    set_flag(flag: number){\n        this._light_state = this._light_state | flag\n    }\n\n    unset_flag(flag: number) {\n        this._light_state = this._light_state & ~flag\n    }\n\n    toggle_left_indicator() {\n        this.get_flag(LightState.LeftIndicate) ? this.unset_flag(LightState.LeftIndicate) : this.set_flag(LightState.LeftIndicate)\n    }\n\n    toggle_right_indicator() {\n        this.get_flag(LightState.RightIndicate) ? this.unset_flag(LightState.RightIndicate) : this.set_flag(LightState.RightIndicate)\n    }\n}\n\nconst broadcastLightEffect = (state: LightEffectMode) => {\n    radio.sendNumber(state)\n}\n\nconst broadcastEffectCommand = (command: number) => {\n    if (command <= 0xf)\n        return;\n    radio.sendNumber(command)\n}\n\nconst setAllRgb = (strip: neopixel.Strip, rgb: number)=>{\n    for (let i = 0; i < strip.length(); i++) \n        strip.setPixelColor(i, rgb)\n}\n\nclass Effect {\n    left_strip: neopixel.Strip\n    right_strip: neopixel.Strip\n    tick_rate: number\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        this.left_strip = left_strip\n        this.right_strip = right_strip\n        this.tick_rate = STANDARD_QUANTUM;\n    }\n\n    default_strip_settings() {\n        this.left_strip.clear()\n        this.right_strip.clear()\n        this.left_strip.setBrightness(128)\n        this.right_strip.setBrightness(128)\n    }\n\n    initialise() {\n        this.default_strip_settings()\n    }\n\n    tick() {\n\n    }\n}\n\nclass BumbleBee extends Effect {\n    initialise() {\n        this.default_strip_settings()\n\n        for (let i = 0; i < STRIP_LENGTH; i++) {\n            let col = 0\n            if (i % 2 == 0) {\n                col = 0xffff00;\n            }\n            this.left_strip.setPixelColor(i, col);\n            this.right_strip.setPixelColor(i, col);\n        }\n\n        broadcastLightEffect(LightEffectMode.BumbleBee)\n    }\n\n    tick() {\n        this.left_strip.rotate()\n        this.right_strip.rotate()\n    }\n}\n\nclass Rainbow extends Effect {\n    initialise() {\n        this.default_strip_settings()\n        this.left_strip.showRainbow()\n        this.right_strip.showRainbow()\n\n        broadcastLightEffect(LightEffectMode.Rainbow)\n    }\n\n    tick() {\n        this.left_strip.rotate()\n        this.right_strip.rotate()\n    }\n}\n\nenum HazardsEffectState {\n    On = 0x10,\n    Off,\n}\nclass Hazard extends Effect {\n    on_off: boolean\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        super(left_strip, right_strip)\n        this.on_off = false\n    }\n\n    initialise() {\n        this.default_strip_settings();\n\n        broadcastLightEffect(LightEffectMode.Hazards)\n    }\n\n    tick() {\n        this.on_off = !this.on_off;\n\n        if (this.on_off) {\n            broadcastEffectCommand(HazardsEffectState.On)\n            setAllRgb(this.left_strip, 0xffa500)\n            setAllRgb(this.right_strip, 0xffa500)\n        } else {\n            broadcastEffectCommand(HazardsEffectState.Off)\n            setAllRgb(this.left_strip, 0)\n            setAllRgb(this.right_strip, 0)\n        }\n    }\n}\n\nenum BikeLightEffectState {\n    LeftOn = 0x10,\n    LeftOff,\n    RightOn,\n    RightOff\n}\nclass BikeLights extends Effect {\n    light_state: BikeLightState\n    left_brake_range: neopixel.Strip\n    left_indicator_range: neopixel.Strip\n    left_interior_range: neopixel.Strip\n    right_brake_range: neopixel.Strip\n    right_indicator_range: neopixel.Strip\n    right_interior_range: neopixel.Strip\n    averager: AccelerometerAverage;\n    inner_tick_rate: number\n\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip, light_state: BikeLightState) {\n        super(left_strip, right_strip)\n        this.light_state = light_state;\n        this.tick_rate = 1; // call each loop\n        this.inner_tick_rate = 0;\n        this.left_indicator_range = this.left_strip.range(INDICATOR_LIGHT_START, INDICATOR_LIGHT_END);\n        this.left_brake_range = this.left_strip.range(INDICATOR_LIGHT_END, BRAKE_LIGHT_END - INDICATOR_LIGHT_END);\n        this.left_interior_range = this.left_strip.range(BRAKE_LIGHT_END, INTERIOR_LIGHT_END - BRAKE_LIGHT_END)\n        this.right_indicator_range = this.right_strip.range(INDICATOR_LIGHT_START, INDICATOR_LIGHT_END);\n        this.right_brake_range = this.right_strip.range(INDICATOR_LIGHT_END, BRAKE_LIGHT_END - INDICATOR_LIGHT_END);\n        this.right_interior_range = this.right_strip.range(BRAKE_LIGHT_END, INTERIOR_LIGHT_END - BRAKE_LIGHT_END)\n\n        this.averager = new AccelerometerAverage()\n    }\n    \n    initialise() {\n        this.default_strip_settings()\n        this.light_state.reset()\n        this.inner_tick_rate = 0\n\n        broadcastLightEffect(LightEffectMode.BikeLights)\n    }\n\n    tick() {\n        averager.sample()\n\n        if (averager.state == BikeState.Braking)\n            this.light_state.set_flag(LightState.Brake)\n        else\n            this.light_state.unset_flag(LightState.Brake)\n\n        if (this.light_state.get_flag(LightMode.NightLights)) {\n            setAllRgb(this.left_brake_range, 0xff0000)\n            setAllRgb(this.right_brake_range, 0xff0000)\n            this.left_brake_range.setBrightness(NIGHT_LIGHT_BRIGHTNESS);\n            this.right_brake_range.setBrightness(NIGHT_LIGHT_BRIGHTNESS);\n\n            setAllRgb(this.left_interior_range, 0xffffff)\n            setAllRgb(this.right_interior_range, 0xffffff)\n            this.left_interior_range.setBrightness(INTERIOR_LIGHT_BRIGHTNESS)\n            this.right_interior_range.setBrightness(INTERIOR_LIGHT_BRIGHTNESS)\n        }\n\n        if (this.light_state.get_flag(LightState.Brake)) {\n            setAllRgb(this.left_brake_range, 0xff0000)\n            setAllRgb(this.right_brake_range, 0xff0000)\n            this.left_brake_range.setBrightness(BRAKE_LIGHT_BRIGHTNESS);\n            this.right_brake_range.setBrightness(BRAKE_LIGHT_BRIGHTNESS);\n        }\n\n        if (!this.light_state.get_flag(LightMode.NightLights) && !this.light_state.get_flag(LightState.Brake)) {\n            setAllRgb(this.left_brake_range, 0)\n            setAllRgb(this.right_brake_range, 0)\n        }\n        \n        this.inner_tick_rate = (this.inner_tick_rate + 1) % STANDARD_QUANTUM;\n\n        if (this.inner_tick_rate == 0) {\n            if (this.light_state.get_flag(LightMode.IndicateLeft)) {\n                this.light_state.toggle_left_indicator()\n\n                if (this.light_state.get_flag(LightState.LeftIndicate)) {\n                    broadcastEffectCommand(BikeLightEffectState.LeftOn)\n                    setAllRgb(this.left_indicator_range, 0xffa500)\n                } else {\n                    setAllRgb(this.left_indicator_range, 0)\n                    broadcastEffectCommand(BikeLightEffectState.LeftOff)\n                }\n                    \n            } else {\n                setAllRgb(this.left_indicator_range, 0)\n            }\n\n            if (this.light_state.get_flag(LightMode.IndicateRight)) {\n                this.light_state.toggle_right_indicator()\n\n                if (this.light_state.get_flag(LightState.RightIndicate)) {\n                    broadcastEffectCommand(BikeLightEffectState.RightOn)\n                    setAllRgb(this.right_indicator_range, 0xffa500)\n                } else {\n                    setAllRgb(this.right_indicator_range, 0)\n                    broadcastEffectCommand(BikeLightEffectState.RightOff)\n                }\n            } else {\n                setAllRgb(this.right_indicator_range, 0)\n            }\n        }\n        \n    }\n}\n\nclass BikeLightsFaked extends Effect {\n    light_state: BikeLightState\n    left_brake_range: neopixel.Strip\n    left_indicator_range: neopixel.Strip\n    left_interior_range: neopixel.Strip\n    right_brake_range: neopixel.Strip\n    right_indicator_range: neopixel.Strip\n    right_interior_range: neopixel.Strip\n    averager: AccelerometerAverage;\n    inner_tick_rate: number\n\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip, light_state: BikeLightState) {\n        super(left_strip, right_strip)\n        this.light_state = light_state;\n        this.tick_rate = 1; // call each loop\n        this.inner_tick_rate = 0;\n        this.left_indicator_range = this.left_strip.range(INDICATOR_LIGHT_START, INDICATOR_LIGHT_END);\n        this.left_brake_range = this.left_strip.range(INDICATOR_LIGHT_END, BRAKE_LIGHT_END - INDICATOR_LIGHT_END);\n        this.left_interior_range = this.left_strip.range(BRAKE_LIGHT_END, INTERIOR_LIGHT_END - BRAKE_LIGHT_END)\n        this.right_indicator_range = this.right_strip.range(INDICATOR_LIGHT_START, INDICATOR_LIGHT_END);\n        this.right_brake_range = this.right_strip.range(INDICATOR_LIGHT_END, BRAKE_LIGHT_END - INDICATOR_LIGHT_END);\n        this.right_interior_range = this.right_strip.range(BRAKE_LIGHT_END, INTERIOR_LIGHT_END - BRAKE_LIGHT_END)\n\n        this.averager = new AccelerometerAverage()\n    }\n\n    initialise() {\n        this.default_strip_settings()\n        this.light_state.reset()\n        this.inner_tick_rate = 0\n\n        broadcastLightEffect(LightEffectMode.BikeLights)\n    }\n\n    tick() {\n        this.light_state.set_flag(LightMode.NightLights)\n        if (this.light_state.get_flag(LightMode.NightLights)) {\n            setAllRgb(this.left_brake_range, 0xff0000)\n            setAllRgb(this.right_brake_range, 0xff0000)\n            this.left_brake_range.setBrightness(NIGHT_LIGHT_BRIGHTNESS);\n            this.right_brake_range.setBrightness(NIGHT_LIGHT_BRIGHTNESS);\n\n            setAllRgb(this.left_interior_range, 0xffffff)\n            setAllRgb(this.right_interior_range, 0xffffff)\n            this.left_interior_range.setBrightness(INTERIOR_LIGHT_BRIGHTNESS)\n            this.right_interior_range.setBrightness(INTERIOR_LIGHT_BRIGHTNESS)\n        }\n\n        if (this.light_state.get_flag(LightState.Brake)) {\n            setAllRgb(this.left_brake_range, 0xff0000)\n            setAllRgb(this.right_brake_range, 0xff0000)\n            this.left_brake_range.setBrightness(BRAKE_LIGHT_BRIGHTNESS);\n            this.right_brake_range.setBrightness(BRAKE_LIGHT_BRIGHTNESS);\n        }\n\n        if (!this.light_state.get_flag(LightMode.NightLights) && !this.light_state.get_flag(LightState.Brake)) {\n            setAllRgb(this.left_brake_range, 0)\n            setAllRgb(this.right_brake_range, 0)\n        }\n\n        this.inner_tick_rate = (this.inner_tick_rate + 1) % STANDARD_QUANTUM;\n\n        if (this.inner_tick_rate == 0) {\n            if (this.light_state.get_flag(LightMode.IndicateLeft)) {\n                this.light_state.toggle_left_indicator()\n\n                if (this.light_state.get_flag(LightState.LeftIndicate)) {\n                    broadcastEffectCommand(BikeLightEffectState.LeftOn)\n                    setAllRgb(this.left_indicator_range, 0xffa500)\n                } else {\n                    setAllRgb(this.left_indicator_range, 0)\n                    broadcastEffectCommand(BikeLightEffectState.LeftOff)\n                }\n\n            } else {\n                setAllRgb(this.left_indicator_range, 0)\n            }\n\n            if (this.light_state.get_flag(LightMode.IndicateRight)) {\n                this.light_state.toggle_right_indicator()\n\n                if (this.light_state.get_flag(LightState.RightIndicate)) {\n                    broadcastEffectCommand(BikeLightEffectState.RightOn)\n                    setAllRgb(this.right_indicator_range, 0xffa500)\n                } else {\n                    setAllRgb(this.right_indicator_range, 0)\n                    broadcastEffectCommand(BikeLightEffectState.RightOff)\n                }\n            } else {\n                setAllRgb(this.right_indicator_range, 0)\n            }\n        }\n\n    }\n}\n\nradio.setGroup(RADIO_GROUP)\n\n\nconst processControlCommand = (command: number) => {\n    switch (command) {\n        case ControlCommand.Clear:\n            light_state.reset()\n            effects_idx = 0;\n            basic.showNumber(0);\n            break\n        case ControlCommand.IndicateLeft:\n            light_state.unset_flag(LightMode.IndicateRight)\n            light_state.toggle_mode(LightMode.IndicateLeft)\n            break\n        case ControlCommand.IndicateRight:\n            light_state.unset_flag(LightMode.IndicateLeft)\n            light_state.toggle_mode(LightMode.IndicateRight)\n            break\n        case ControlCommand.NightMode:\n            light_state.set_flag(LightMode.NightLights)\n            break\n        case ControlCommand.DayMode:\n            light_state.unset_flag(LightMode.NightLights)\n            break\n        case ControlCommand.NextMode:\n            effects_idx = (effects_idx + 1) % effects.length\n            basic.showNumber(effects_idx)\n            break\n        case ControlCommand.ForceBrakeLights:\n            console.log(light_state.get_flag(LightState.Brake))\n            light_state.get_flag(LightState.Brake) ? light_state.unset_flag(LightState.Brake) : light_state.set_flag(LightState.Brake)\n            break\n    }\n}\n\nradio.onReceivedNumber((receivedNumber) => {\n    processControlCommand(receivedNumber)\n})\n\nconst averager = new AccelerometerAverage()\nconst light_state = new BikeLightState()\n\nlet left_strip = neopixel.create(DigitalPin.P0, STRIP_LENGTH, NeoPixelMode.RGB)\nlet right_strip = neopixel.create(DigitalPin.P1, STRIP_LENGTH, NeoPixelMode.RGB)\n\nlet effects = [new BikeLights(left_strip, right_strip, light_state), new Hazard(left_strip, right_strip), new Rainbow(left_strip, right_strip), new BumbleBee(left_strip, right_strip), new BikeLightsFaked(left_strip, right_strip, light_state)]\nlet effects_idx = 0\n\ninput.onButtonPressed(Button.AB, function() {\n    processControlCommand(ControlCommand.NextMode)\n})\n\ninput.onButtonPressed(Button.A, function () {\n    processControlCommand(ControlCommand.IndicateLeft)\n})\n \ninput.onButtonPressed(Button.B, function () {\n    if (effects_idx == 4)\n    {\n        processControlCommand(ControlCommand.ForceBrakeLights)\n    } else {\n        processControlCommand(ControlCommand.IndicateRight)\n    }\n    \n})\n\nbasic.showNumber(effects_idx);\n\nlet prev_effect_idx = -1;\nlet effect_counter = 0;\nbasic.forever(function () {\n    const effect: Effect = effects[effects_idx]\n\n    if (prev_effect_idx != effects_idx) {\n        effect_counter = 0;\n        effect.initialise()\n        prev_effect_idx = effects_idx;\n    }\n\n    effect_counter = (effect_counter + 1) % effect.tick_rate;\n\n    if (effect_counter == 0) {\n        effect.tick()\n    }\n\n    left_strip.show()\n    right_strip.show()\n    basic.pause(PAUSE_QUANTUM)\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"bike-lights\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"neopixel\": \"github:microsoft/pxt-neopixel#v0.7.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1727039820883,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"e%?B/KcK7G1GMa}|XACI\">strip</variable></variables><block type=\"radio_on_number_drag\" x=\"355\" y=\"-603\"><value name=\"HANDLER_DRAG_PARAM_receivedNumber\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedNumber</field></block></value></block><block type=\"device_forever\" x=\"543\" y=\"-384\"><statement name=\"HANDLER\"><block type=\"neopixel_rotate\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><value name=\"offset\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"neopixel_show\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">200</field></shadow></value></block></next></block></next></block></statement></block><block type=\"pxt-on-start\" x=\"48\" y=\"8\"><statement name=\"HANDLER\"><block type=\"device_print_message\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\">O</field></shadow></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"neopixel_create\"><field name=\"pin\">DigitalPin.P0</field><field name=\"mode\">NeoPixelMode.RGB</field><value name=\"numleds\"><shadow type=\"math_number\"><field name=\"NUM\">96</field></shadow></value></block></value><next><block type=\"neopixel_set_strip_rainbow\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><value name=\"startHue\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><value name=\"endHue\"><shadow type=\"math_number\"><field name=\"NUM\">360</field></shadow></value></block></next></block></next></block></statement></block></xml>","main.ts":"const PAUSE_QUANTUM = 50\nconst STANDARD_QUANTUM = 4\n\nconst RADIO_GROUP = 99\nconst SAMPLE_SIZE = 10\nconst BRAKE_THRESHOLD = 1100\nconst ACCEL_THRESHOLD = 1000\n\nconst STRIP_LENGTH = 96\nconst INDICATOR_LIGHT_START = 0\nconst INDICATOR_LIGHT_END = 30\nconst BRAKE_LIGHT_START = INDICATOR_LIGHT_END\nconst BRAKE_LIGHT_END = 75\nconst INTERIOR_LIGHT_START = BRAKE_LIGHT_END\nconst INTERIOR_LIGHT_END = STRIP_LENGTH\n\nconst NIGHT_LIGHT_BRIGHTNESS = 8\nconst INTERIOR_LIGHT_BRIGHTNESS = 64;\nconst BRAKE_LIGHT_BRIGHTNESS = 255\n\n\n\nenum BikeState {\n    Accelerating,\n    Braking\n}\n\nclass AccelerometerAverage {\n    _samples: number[]\n    _sample_index = 0;\n    _last_sample = 0\n    _state = BikeState.Braking\n    constructor() {\n        this._last_sample = 0\n        this._samples = [];\n        for (let i = 0; i < SAMPLE_SIZE; i++) {\n            this._samples.push(0)\n        }\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    sample() {\n        const sample = input.acceleration(Dimension.Strength)\n        this._samples[this._sample_index] = sample;\n\n        this._sample_index = (this._sample_index + 1) % SAMPLE_SIZE;\n\n        if (this._sample_index == 0) {\n            this._computeAverageSample()\n        }\n    }\n\n    _computeAverageSample() {\n        let avg = 0;\n        for (let j = 0; j < SAMPLE_SIZE; j++) {\n            avg += this._samples[j];\n        }\n\n        avg = avg / SAMPLE_SIZE;\n\n        if (avg > BRAKE_THRESHOLD) {\n            this._state = BikeState.Braking\n        } else if (avg < ACCEL_THRESHOLD) {\n            this._state = BikeState.Accelerating\n        }\n    }\n}\n\nenum ControlCommand {\n    Clear = 0,\n    IndicateLeft,\n    IndicateRight,\n    NightMode,\n    DayMode,\n    NextMode,\n    ForceBrakeLights\n}\n\nenum LightEffectMode {\n    BikeLights,\n    BumbleBee,\n    Rainbow,\n    Hazards,\n}\n\nenum LightState {\n    Brake = 0x01,\n    LeftIndicate = 0x02,\n    RightIndicate = 0x04\n}\n\nenum LightMode {\n    Braking = 0x10,\n    IndicateLeft = 0x20,\n    IndicateRight = 0x40,\n    NightLights = 0x80\n}\n\nclass BikeLightState {\n    _light_state:number;\n    constructor() {\n        this._light_state = 0;\n    }\n\n\n    reset() {\n        this._light_state = 0;\n    }\n\n    get state(): number {\n        return this._light_state;\n    }\n\n    toggle_mode(mode: LightMode) {\n        this.get_flag(mode) ? this.unset_flag(mode) : this.set_flag(mode)\n    }\n\n    toggle_state(state: LightState) {\n        console.log(`get flag: ${this.get_flag(state)}`)\n        this.get_flag(state) ? this.unset_flag(state) : this.set_flag(state)\n    }\n\n    get_flag(flag: number) : boolean {\n        return (this.state & flag) > 0\n    }\n\n    set_flag(flag: number){\n        this._light_state |= flag\n    }\n\n    unset_flag(flag: number) {\n        this._light_state &= ~(flag)\n    }\n\n    toggle_left_indicator() {\n        this.toggle_state(LightState.LeftIndicate)\n    }\n\n    toggle_right_indicator() {\n        this.toggle_state(LightState.RightIndicate)\n    }\n}\n\nconst broadcastLightEffect = (state: LightEffectMode) => {\n    radio.sendNumber(state)\n}\n\nconst broadcastEffectCommand = (command: number) => {\n    if (command <= 0xf)\n        return;\n    radio.sendNumber(command)\n}\n\nconst setAllRgb = (strip: neopixel.Strip, rgb: number)=>{\n    for (let i = 0; i < strip.length(); i++) \n        strip.setPixelColor(i, rgb)\n}\n\nclass Effect {\n    left_strip: neopixel.Strip\n    right_strip: neopixel.Strip\n    tick_rate: number\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        this.left_strip = left_strip\n        this.right_strip = right_strip\n        this.tick_rate = STANDARD_QUANTUM;\n    }\n\n    default_strip_settings() {\n        this.left_strip.clear()\n        this.right_strip.clear()\n        this.left_strip.setBrightness(128)\n        this.right_strip.setBrightness(128)\n    }\n\n    initialise() {\n        this.default_strip_settings()\n    }\n\n    tick() {\n\n    }\n\n    done() : boolean {\n        return false\n    }\n}\n\nconst KNIGHT_RIDE_START = (BRAKE_LIGHT_END - 25)\n\nclass KnightRider extends Effect {\n    anim_idx: number\n    complete: boolean\n    left_to_right: boolean\n    anim_count: number\n    inc_dec:number\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        super(left_strip, right_strip)\n        this.tick_rate = 1;\n        this.anim_idx = 0\n        this.left_to_right = true\n        this.complete = false\n        this.anim_count = 0\n    }\n\n    done() {\n        return this.complete\n    }\n\n    initialise() {\n        this.default_strip_settings()\n        this.anim_idx = 0\n    }\n\n    tick() {\n        const idx = this.anim_idx\n\n        this.left_strip.clear()\n        this.right_strip.clear()\n\n        if (idx > KNIGHT_RIDE_START) {\n            this.right_strip.setPixelColor(this.anim_idx - KNIGHT_RIDE_START, 0xff0000)\n        } else {\n            this.left_strip.setPixelColor(KNIGHT_RIDE_START - this.anim_idx, 0xff0000)\n        }\n\n\n        if (this.left_to_right)\n            this.anim_idx++;\n        else    \n            this.anim_idx--;\n\n        if (this.anim_idx == (2 * KNIGHT_RIDE_START) || this.anim_idx == 0) {\n            this.anim_count++\n            this.left_to_right = !this.left_to_right;\n        }\n\n        if (this.anim_count > 2) {\n            this.complete = true\n        }\n            \n    }\n}\n\nclass Smile extends Effect {\n    smile_idx: number\n    smile_complete: boolean\n    wink_complete: boolean\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        super(left_strip, right_strip)\n        this.tick_rate = 1;\n        this.smile_idx = 0\n        this.smile_complete = false\n        this.wink_complete = false\n    }\n\n    done() {\n        return this.smile_complete && this.wink_complete\n    }\n\n    initialise() {\n        this.default_strip_settings()\n        this.smile_idx = 0\n    }\n\n    tick () {\n        const idx = this.smile_idx\n        if (idx < 40) {\n            this.left_strip.setPixelColor(idx, 0xffffff);\n            this.right_strip.setPixelColor(idx, 0xffffff);\n            \n        } else {\n            let col = 0xffffff;\n            if (idx > 140) {\n                this.smile_complete = true;\n                col = 0\n            }\n                \n            if (idx > 240)\n                col = 0xffffff\n\n            if (idx > 340)\n                this.wink_complete = true;\n\n            if (!this.smile_complete) {\n                for (let i = INTERIOR_LIGHT_START; i > INTERIOR_LIGHT_START - 15; i--) {\n                    this.left_strip.setPixelColor(i, col);\n                    this.right_strip.setPixelColor(i, col);\n                }\n            } else {\n                // wink right\n                for (let i = INTERIOR_LIGHT_START; i > INTERIOR_LIGHT_START - 15; i--) {\n                    this.right_strip.setPixelColor(i, col);\n                }\n            }\n        }\n\n        this.smile_idx++;\n    }\n}\n\nclass BumbleBee extends Effect {\n    initialise() {\n        this.default_strip_settings()\n\n        for (let i = 0; i < STRIP_LENGTH; i++) {\n            let col = 0\n            if (i % 2 == 0) {\n                col = 0xffff00;\n            }\n            this.left_strip.setPixelColor(i, col);\n            this.right_strip.setPixelColor(i, col);\n        }\n\n        broadcastLightEffect(LightEffectMode.BumbleBee)\n    }\n\n    tick() {\n        this.left_strip.rotate()\n        this.right_strip.rotate()\n    }\n}\n\nclass Rainbow extends Effect {\n    initialise() {\n        this.default_strip_settings()\n        this.left_strip.showRainbow()\n        this.right_strip.showRainbow()\n\n        broadcastLightEffect(LightEffectMode.Rainbow)\n    }\n\n    tick() {\n        this.left_strip.rotate()\n        this.right_strip.rotate()\n    }\n}\n\nenum HazardsEffectState {\n    On = 0x10,\n    Off,\n}\nclass Hazard extends Effect {\n    on_off: boolean\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        super(left_strip, right_strip)\n        this.on_off = false\n    }\n\n    initialise() {\n        this.default_strip_settings();\n\n        broadcastLightEffect(LightEffectMode.Hazards)\n    }\n\n    tick() {\n        this.on_off = !this.on_off;\n\n        if (this.on_off) {\n            broadcastEffectCommand(HazardsEffectState.On)\n            setAllRgb(this.left_strip, 0xffa500)\n            setAllRgb(this.right_strip, 0xffa500)\n        } else {\n            broadcastEffectCommand(HazardsEffectState.Off)\n            setAllRgb(this.left_strip, 0)\n            setAllRgb(this.right_strip, 0)\n        }\n    }\n}\n\nenum BikeLightEffectState {\n    LeftOn = 0x10,\n    LeftOff,\n    RightOn,\n    RightOff\n}\nclass BikeLights extends Effect {\n    left_brake_range: neopixel.Strip\n    left_indicator_range: neopixel.Strip\n    left_interior_range: neopixel.Strip\n    right_brake_range: neopixel.Strip\n    right_indicator_range: neopixel.Strip\n    right_interior_range: neopixel.Strip\n    averager: AccelerometerAverage;\n    inner_tick_rate: number\n\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        super(left_strip, right_strip)\n        this.tick_rate = 1; // call each loop\n        this.inner_tick_rate = 0;\n        this.left_indicator_range = this.left_strip.range(INDICATOR_LIGHT_START, INDICATOR_LIGHT_END);\n        this.left_brake_range = this.left_strip.range(INDICATOR_LIGHT_END, BRAKE_LIGHT_END - INDICATOR_LIGHT_END);\n        this.left_interior_range = this.left_strip.range(BRAKE_LIGHT_END, INTERIOR_LIGHT_END - BRAKE_LIGHT_END)\n        this.right_indicator_range = this.right_strip.range(INDICATOR_LIGHT_START, INDICATOR_LIGHT_END);\n        this.right_brake_range = this.right_strip.range(INDICATOR_LIGHT_END, BRAKE_LIGHT_END - INDICATOR_LIGHT_END);\n        this.right_interior_range = this.right_strip.range(BRAKE_LIGHT_END, INTERIOR_LIGHT_END - BRAKE_LIGHT_END)\n\n        this.averager = new AccelerometerAverage()\n    }\n    \n    initialise() {\n        this.default_strip_settings()\n        light_state.reset()\n        this.inner_tick_rate = 0\n\n        broadcastLightEffect(LightEffectMode.BikeLights)\n    }\n\n    tick() {\n        averager.sample()\n\n        if (averager.state == BikeState.Braking)\n            light_state.set_flag(LightState.Brake)\n        else\n            light_state.unset_flag(LightState.Brake)\n\n        if (light_state.get_flag(LightMode.NightLights)) {\n            setAllRgb(this.left_brake_range, 0xff0000)\n            setAllRgb(this.right_brake_range, 0xff0000)\n            this.left_brake_range.setBrightness(NIGHT_LIGHT_BRIGHTNESS);\n            this.right_brake_range.setBrightness(NIGHT_LIGHT_BRIGHTNESS);\n\n            setAllRgb(this.left_interior_range, 0xffffff)\n            setAllRgb(this.right_interior_range, 0xffffff)\n            this.left_interior_range.setBrightness(INTERIOR_LIGHT_BRIGHTNESS)\n            this.right_interior_range.setBrightness(INTERIOR_LIGHT_BRIGHTNESS)\n        }\n\n        if (light_state.get_flag(LightState.Brake)) {\n            setAllRgb(this.left_brake_range, 0xff0000)\n            setAllRgb(this.right_brake_range, 0xff0000)\n            this.left_brake_range.setBrightness(BRAKE_LIGHT_BRIGHTNESS);\n            this.right_brake_range.setBrightness(BRAKE_LIGHT_BRIGHTNESS);\n        }\n\n        if (!light_state.get_flag(LightMode.NightLights) && !light_state.get_flag(LightState.Brake)) {\n            setAllRgb(this.left_brake_range, 0)\n            setAllRgb(this.right_brake_range, 0)\n        }\n        \n        this.inner_tick_rate = (this.inner_tick_rate + 1) % STANDARD_QUANTUM;\n\n        if (this.inner_tick_rate == 0) {\n            if (light_state.get_flag(LightMode.IndicateLeft)) {\n                light_state.toggle_left_indicator()\n\n                if (light_state.get_flag(LightState.LeftIndicate)) {\n                    broadcastEffectCommand(BikeLightEffectState.LeftOn)\n                    setAllRgb(this.left_indicator_range, 0xffa500)\n                } else {\n                    setAllRgb(this.left_indicator_range, 0)\n                    broadcastEffectCommand(BikeLightEffectState.LeftOff)\n                }\n                    \n            } else {\n                setAllRgb(this.left_indicator_range, 0)\n            }\n\n            if (light_state.get_flag(LightMode.IndicateRight)) {\n                light_state.toggle_right_indicator()\n\n                if (light_state.get_flag(LightState.RightIndicate)) {\n                    broadcastEffectCommand(BikeLightEffectState.RightOn)\n                    setAllRgb(this.right_indicator_range, 0xffa500)\n                } else {\n                    setAllRgb(this.right_indicator_range, 0)\n                    broadcastEffectCommand(BikeLightEffectState.RightOff)\n                }\n            } else {\n                setAllRgb(this.right_indicator_range, 0)\n            }\n        }\n        \n    }\n}\n\nclass BikeLightsFaked extends Effect {\n    light_state: BikeLightState\n    left_brake_range: neopixel.Strip\n    left_indicator_range: neopixel.Strip\n    left_interior_range: neopixel.Strip\n    right_brake_range: neopixel.Strip\n    right_indicator_range: neopixel.Strip\n    right_interior_range: neopixel.Strip\n    averager: AccelerometerAverage;\n    inner_tick_rate: number\n\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        super(left_strip, right_strip)\n        this.tick_rate = 1; // call each loop\n        this.inner_tick_rate = 0;\n        this.left_indicator_range = this.left_strip.range(INDICATOR_LIGHT_START, INDICATOR_LIGHT_END);\n        this.left_brake_range = this.left_strip.range(INDICATOR_LIGHT_END, BRAKE_LIGHT_END - INDICATOR_LIGHT_END);\n        this.left_interior_range = this.left_strip.range(BRAKE_LIGHT_END, INTERIOR_LIGHT_END - BRAKE_LIGHT_END)\n        this.right_indicator_range = this.right_strip.range(INDICATOR_LIGHT_START, INDICATOR_LIGHT_END);\n        this.right_brake_range = this.right_strip.range(INDICATOR_LIGHT_END, BRAKE_LIGHT_END - INDICATOR_LIGHT_END);\n        this.right_interior_range = this.right_strip.range(BRAKE_LIGHT_END, INTERIOR_LIGHT_END - BRAKE_LIGHT_END)\n    }\n\n    initialise() {\n        this.default_strip_settings()\n        light_state.reset()\n        this.inner_tick_rate = 0\n\n        broadcastLightEffect(LightEffectMode.BikeLights)\n    }\n\n    tick() {\n        light_state.set_flag(LightMode.NightLights)\n        \n        if (light_state.get_flag(LightMode.NightLights)) {\n            setAllRgb(this.left_brake_range, 0xff0000)\n            setAllRgb(this.right_brake_range, 0xff0000)\n            this.left_brake_range.setBrightness(NIGHT_LIGHT_BRIGHTNESS);\n            this.right_brake_range.setBrightness(NIGHT_LIGHT_BRIGHTNESS);\n\n            setAllRgb(this.left_interior_range, 0xffffff)\n            setAllRgb(this.right_interior_range, 0xffffff)\n            this.left_interior_range.setBrightness(INTERIOR_LIGHT_BRIGHTNESS)\n            this.right_interior_range.setBrightness(INTERIOR_LIGHT_BRIGHTNESS)\n        }\n\n        // light_state.set_flag(LightState.Brake);\n        console.log(`tick ${light_state.state}`)\n        if (light_state.get_flag(LightState.Brake)) {\n            setAllRgb(this.left_brake_range, 0xff0000)\n            setAllRgb(this.right_brake_range, 0xff0000)\n            this.left_brake_range.setBrightness(BRAKE_LIGHT_BRIGHTNESS);\n            this.right_brake_range.setBrightness(BRAKE_LIGHT_BRIGHTNESS);\n        }\n\n        if (!light_state.get_flag(LightMode.NightLights) && !light_state.get_flag(LightState.Brake)) {\n            setAllRgb(this.left_brake_range, 0)\n            setAllRgb(this.right_brake_range, 0)\n        }\n\n        this.inner_tick_rate = (this.inner_tick_rate + 1) % STANDARD_QUANTUM;\n\n        if (this.inner_tick_rate == 0) {\n            if (light_state.get_flag(LightMode.IndicateLeft)) {\n                light_state.toggle_left_indicator()\n\n                if (light_state.get_flag(LightState.LeftIndicate)) {\n                    broadcastEffectCommand(BikeLightEffectState.LeftOn)\n                    setAllRgb(this.left_indicator_range, 0xffa500)\n                } else {\n                    setAllRgb(this.left_indicator_range, 0)\n                    broadcastEffectCommand(BikeLightEffectState.LeftOff)\n                }\n\n            } else {\n                setAllRgb(this.left_indicator_range, 0)\n            }\n\n            if (light_state.get_flag(LightMode.IndicateRight)) {\n                light_state.toggle_right_indicator()\n\n                if (light_state.get_flag(LightState.RightIndicate)) {\n                    broadcastEffectCommand(BikeLightEffectState.RightOn)\n                    setAllRgb(this.right_indicator_range, 0xffa500)\n                } else {\n                    setAllRgb(this.right_indicator_range, 0)\n                    broadcastEffectCommand(BikeLightEffectState.RightOff)\n                }\n            } else {\n                setAllRgb(this.right_indicator_range, 0)\n            }\n        }\n\n    }\n}\n\nradio.setGroup(RADIO_GROUP)\n\n\nconst processControlCommand = (command: number) => {\n    switch (command) {\n        case ControlCommand.Clear:\n            light_state.reset()\n            effects_idx = 0;\n            basic.showNumber(0);\n            break\n        case ControlCommand.IndicateLeft:\n            light_state.unset_flag(LightMode.IndicateRight)\n            light_state.toggle_mode(LightMode.IndicateLeft)\n            break\n        case ControlCommand.IndicateRight:\n            light_state.unset_flag(LightMode.IndicateLeft)\n            light_state.toggle_mode(LightMode.IndicateRight)\n            break\n        case ControlCommand.NightMode:\n            light_state.set_flag(LightMode.NightLights)\n            break\n        case ControlCommand.DayMode:\n            light_state.unset_flag(LightMode.NightLights)\n            break\n        case ControlCommand.NextMode:\n            effects_idx = (effects_idx + 1) % effects.length\n            basic.showNumber(effects_idx)\n            break\n        case ControlCommand.ForceBrakeLights:\n            light_state.toggle_state(LightState.Brake)\n            break\n    }\n}\n\nradio.onReceivedNumber((receivedNumber) => {\n    processControlCommand(receivedNumber)\n})\n\nconst averager = new AccelerometerAverage()\nconst light_state = new BikeLightState()\n\nlet left_strip = neopixel.create(DigitalPin.P0, STRIP_LENGTH, NeoPixelMode.RGB)\nlet right_strip = neopixel.create(DigitalPin.P1, STRIP_LENGTH, NeoPixelMode.RGB)\n\nlet effects = [new BikeLightsFaked(left_strip, right_strip), new Hazard(left_strip, right_strip), new Rainbow(left_strip, right_strip), new BumbleBee(left_strip, right_strip), new BikeLightsFaked(left_strip, right_strip)]\nlet effects_idx = 0\n\ninput.onButtonPressed(Button.AB, function() {\n    processControlCommand(ControlCommand.NextMode)\n})\n\ninput.onButtonPressed(Button.A, function () {\n    processControlCommand(ControlCommand.IndicateLeft)\n})\n \ninput.onButtonPressed(Button.B, function () {\n    // if (effects_idx == 4)\n    // {\n        processControlCommand(ControlCommand.ForceBrakeLights)\n    // } else {\n    //     processControlCommand(ControlCommand.IndicateRight)\n    // }\n    \n})\n\nconst startupEffect = new KnightRider(left_strip, right_strip)\n\nwhile (!startupEffect.done()) {\n    startupEffect.tick()\n    left_strip.show()\n    right_strip.show()\n    pause(5);\n}\n\nconst br = [0, 16, 32,64,128, 0xff]\n\nsetAllRgb(left_strip, 0xffffff)\nsetAllRgb(right_strip, 0xffffff)\n\nfor (let brightness of br) {\n    left_strip.setBrightness(brightness)\n    left_strip.show()\n    right_strip.show()\n    pause(25)\n}\n\nbasic.showNumber(effects_idx);\n\nlet prev_effect_idx = -1;\nlet effect_counter = 0;\nbasic.forever(function () {\n    const effect: Effect = effects[effects_idx]\n\n    if (prev_effect_idx != effects_idx) {\n        effect_counter = 0;\n        effect.initialise()\n        console.log(\"init\")\n        prev_effect_idx = effects_idx;\n        left_strip.show()\n        right_strip.show()\n    }\n\n    effect_counter = (effect_counter + 1) % effect.tick_rate;\n\n    if (effect_counter == 0) {\n        effect.tick()\n        left_strip.show()\n        right_strip.show()\n    }\n    basic.pause(PAUSE_QUANTUM)\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"bike-lights\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"neopixel\": \"github:microsoft/pxt-neopixel#v0.7.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1727337649365,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"e%?B/KcK7G1GMa}|XACI\">strip</variable></variables><block type=\"radio_on_number_drag\" x=\"355\" y=\"-603\"><value name=\"HANDLER_DRAG_PARAM_receivedNumber\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">receivedNumber</field></block></value></block><block type=\"device_forever\" x=\"543\" y=\"-384\"><statement name=\"HANDLER\"><block type=\"neopixel_rotate\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><value name=\"offset\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"neopixel_show\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">200</field></shadow></value></block></next></block></next></block></statement></block><block type=\"pxt-on-start\" x=\"48\" y=\"8\"><statement name=\"HANDLER\"><block type=\"device_print_message\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\">O</field></shadow></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"neopixel_create\"><field name=\"pin\">DigitalPin.P0</field><field name=\"mode\">NeoPixelMode.RGB</field><value name=\"numleds\"><shadow type=\"math_number\"><field name=\"NUM\">96</field></shadow></value></block></value><next><block type=\"neopixel_set_strip_rainbow\"><value name=\"strip\"><block type=\"variables_get\"><field name=\"VAR\" id=\"e%?B/KcK7G1GMa}|XACI\">strip</field></block></value><value name=\"startHue\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><value name=\"endHue\"><shadow type=\"math_number\"><field name=\"NUM\">360</field></shadow></value></block></next></block></next></block></statement></block></xml>","main.ts":"const PAUSE_QUANTUM = 50\nconst STANDARD_QUANTUM = 4\n\nconst RADIO_GROUP = 99\nconst SAMPLE_SIZE = 10\nconst BRAKE_THRESHOLD = 1100\nconst ACCEL_THRESHOLD = 1000\n\nconst STRIP_LENGTH = 96\nconst INDICATOR_LIGHT_START = 0\nconst INDICATOR_LIGHT_END = 30\nconst BRAKE_LIGHT_START = INDICATOR_LIGHT_END\nconst BRAKE_LIGHT_END = 75\nconst INTERIOR_LIGHT_START = BRAKE_LIGHT_END\nconst INTERIOR_LIGHT_END = STRIP_LENGTH\n\nconst NIGHT_LIGHT_BRIGHTNESS = 8\nconst INTERIOR_LIGHT_BRIGHTNESS = 64;\nconst BRAKE_LIGHT_BRIGHTNESS = 255\n\n\n\nenum BikeState {\n    Accelerating,\n    Braking\n}\n\nclass AccelerometerAverage {\n    _samples: number[]\n    _sample_index = 0;\n    _last_sample = 0\n    _state = BikeState.Braking\n    constructor() {\n        this._last_sample = 0\n        this._samples = [];\n        for (let i = 0; i < SAMPLE_SIZE; i++) {\n            this._samples.push(0)\n        }\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    sample() {\n        const sample = input.acceleration(Dimension.Strength)\n        this._samples[this._sample_index] = sample;\n\n        this._sample_index = (this._sample_index + 1) % SAMPLE_SIZE;\n\n        if (this._sample_index == 0) {\n            this._computeAverageSample()\n        }\n    }\n\n    _computeAverageSample() {\n        let avg = 0;\n        for (let j = 0; j < SAMPLE_SIZE; j++) {\n            avg += this._samples[j];\n        }\n\n        avg = avg / SAMPLE_SIZE;\n\n        if (avg > BRAKE_THRESHOLD) {\n            this._state = BikeState.Braking\n        } else if (avg < ACCEL_THRESHOLD) {\n            this._state = BikeState.Accelerating\n        }\n    }\n}\n\nenum ControlCommand {\n    Clear = 0,\n    IndicateLeft,\n    IndicateRight,\n    NightMode,\n    DayMode,\n    NextMode,\n    ForceBrakeLights\n}\n\nenum LightEffectMode {\n    BikeLights,\n    BumbleBee,\n    Rainbow,\n    Hazards,\n}\n\nenum LightState {\n    Brake = 0x01,\n    LeftIndicate = 0x02,\n    RightIndicate = 0x04\n}\n\nenum LightMode {\n    Braking = 0x10,\n    IndicateLeft = 0x20,\n    IndicateRight = 0x40,\n    NightLights = 0x80\n}\n\nclass BikeLightState {\n    _light_state:number;\n    constructor() {\n        this._light_state = 0;\n    }\n\n\n    reset() {\n        this._light_state = 0;\n    }\n\n    get state(): number {\n        return this._light_state;\n    }\n\n    toggle_mode(mode: LightMode) {\n        this.get_flag(mode) ? this.unset_flag(mode) : this.set_flag(mode)\n    }\n\n    toggle_state(state: LightState) {\n        console.log(`get flag: ${this.get_flag(state)}`)\n        this.get_flag(state) ? this.unset_flag(state) : this.set_flag(state)\n    }\n\n    get_flag(flag: number) : boolean {\n        return (this.state & flag) > 0\n    }\n\n    set_flag(flag: number){\n        this._light_state |= flag\n    }\n\n    unset_flag(flag: number) {\n        this._light_state &= ~(flag)\n    }\n\n    toggle_left_indicator() {\n        this.toggle_state(LightState.LeftIndicate)\n    }\n\n    toggle_right_indicator() {\n        this.toggle_state(LightState.RightIndicate)\n    }\n}\n\nconst broadcastLightEffect = (state: LightEffectMode) => {\n    radio.sendNumber(state)\n}\n\nconst broadcastEffectCommand = (command: number) => {\n    if (command <= 0xf)\n        return;\n    radio.sendNumber(command)\n}\n\nconst setAllRgb = (strip: neopixel.Strip, rgb: number)=>{\n    for (let i = 0; i < strip.length(); i++) \n        strip.setPixelColor(i, rgb)\n}\n\nclass Effect {\n    left_strip: neopixel.Strip\n    right_strip: neopixel.Strip\n    tick_rate: number\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        this.left_strip = left_strip\n        this.right_strip = right_strip\n        this.tick_rate = STANDARD_QUANTUM;\n    }\n\n    default_strip_settings() {\n        this.left_strip.clear()\n        this.right_strip.clear()\n        this.left_strip.setBrightness(128)\n        this.right_strip.setBrightness(128)\n    }\n\n    initialise() {\n        this.default_strip_settings()\n    }\n\n    tick() {\n\n    }\n\n    done() : boolean {\n        return false\n    }\n}\n\nconst KNIGHT_RIDE_START = (BRAKE_LIGHT_END - 25)\n\nclass KnightRider extends Effect {\n    anim_idx: number\n    complete: boolean\n    left_to_right: boolean\n    anim_count: number\n    inc_dec:number\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        super(left_strip, right_strip)\n        this.tick_rate = 1;\n        this.anim_idx = 0\n        this.left_to_right = true\n        this.complete = false\n        this.anim_count = 0\n    }\n\n    done() {\n        return this.complete\n    }\n\n    initialise() {\n        this.default_strip_settings()\n        this.anim_idx = 0\n    }\n\n    tick() {\n        const idx = this.anim_idx\n\n        this.left_strip.clear()\n        this.right_strip.clear()\n\n        if (idx > KNIGHT_RIDE_START) {\n            this.right_strip.setPixelColor(this.anim_idx - KNIGHT_RIDE_START, 0xff0000)\n        } else {\n            this.left_strip.setPixelColor(KNIGHT_RIDE_START - this.anim_idx, 0xff0000)\n        }\n\n\n        if (this.left_to_right)\n            this.anim_idx++;\n        else    \n            this.anim_idx--;\n\n        if (this.anim_idx == (2 * KNIGHT_RIDE_START) || this.anim_idx == 0) {\n            this.anim_count++\n            this.left_to_right = !this.left_to_right;\n        }\n\n        if (this.anim_count > 2) {\n            this.complete = true\n        }\n            \n    }\n}\n\nclass Smile extends Effect {\n    smile_idx: number\n    smile_complete: boolean\n    wink_complete: boolean\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        super(left_strip, right_strip)\n        this.tick_rate = 1;\n        this.smile_idx = 0\n        this.smile_complete = false\n        this.wink_complete = false\n    }\n\n    done() {\n        return this.smile_complete && this.wink_complete\n    }\n\n    initialise() {\n        this.default_strip_settings()\n        this.smile_idx = 0\n    }\n\n    tick () {\n        const idx = this.smile_idx\n        if (idx < 40) {\n            this.left_strip.setPixelColor(idx, 0xffffff);\n            this.right_strip.setPixelColor(idx, 0xffffff);\n            \n        } else {\n            let col = 0xffffff;\n            if (idx > 140) {\n                this.smile_complete = true;\n                col = 0\n            }\n                \n            if (idx > 240)\n                col = 0xffffff\n\n            if (idx > 340)\n                this.wink_complete = true;\n\n            if (!this.smile_complete) {\n                for (let i = INTERIOR_LIGHT_START; i > INTERIOR_LIGHT_START - 15; i--) {\n                    this.left_strip.setPixelColor(i, col);\n                    this.right_strip.setPixelColor(i, col);\n                }\n            } else {\n                // wink right\n                for (let i = INTERIOR_LIGHT_START; i > INTERIOR_LIGHT_START - 15; i--) {\n                    this.right_strip.setPixelColor(i, col);\n                }\n            }\n        }\n\n        this.smile_idx++;\n    }\n}\n\nclass BumbleBee extends Effect {\n    initialise() {\n        this.default_strip_settings()\n\n        for (let i = 0; i < STRIP_LENGTH; i++) {\n            let col = 0\n            if (i % 2 == 0) {\n                col = 0xffff00;\n            }\n            this.left_strip.setPixelColor(i, col);\n            this.right_strip.setPixelColor(i, col);\n        }\n\n        broadcastLightEffect(LightEffectMode.BumbleBee)\n    }\n\n    tick() {\n        this.left_strip.rotate()\n        this.right_strip.rotate()\n    }\n}\n\nclass Rainbow extends Effect {\n    initialise() {\n        this.default_strip_settings()\n        this.left_strip.showRainbow()\n        this.right_strip.showRainbow()\n\n        broadcastLightEffect(LightEffectMode.Rainbow)\n    }\n\n    tick() {\n        this.left_strip.rotate()\n        this.right_strip.rotate()\n    }\n}\n\nenum HazardsEffectState {\n    On = 0x10,\n    Off,\n}\nclass Hazard extends Effect {\n    on_off: boolean\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        super(left_strip, right_strip)\n        this.on_off = false\n    }\n\n    initialise() {\n        this.default_strip_settings();\n\n        broadcastLightEffect(LightEffectMode.Hazards)\n    }\n\n    tick() {\n        this.on_off = !this.on_off;\n\n        if (this.on_off) {\n            broadcastEffectCommand(HazardsEffectState.On)\n            setAllRgb(this.left_strip, 0xffa500)\n            setAllRgb(this.right_strip, 0xffa500)\n        } else {\n            broadcastEffectCommand(HazardsEffectState.Off)\n            setAllRgb(this.left_strip, 0)\n            setAllRgb(this.right_strip, 0)\n        }\n    }\n}\n\nenum BikeLightEffectState {\n    LeftOn = 0x10,\n    LeftOff,\n    RightOn,\n    RightOff\n}\nclass BikeLights extends Effect {\n    left_brake_range: neopixel.Strip\n    left_indicator_range: neopixel.Strip\n    left_interior_range: neopixel.Strip\n    right_brake_range: neopixel.Strip\n    right_indicator_range: neopixel.Strip\n    right_interior_range: neopixel.Strip\n    averager: AccelerometerAverage;\n    inner_tick_rate: number\n\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        super(left_strip, right_strip)\n        this.tick_rate = 1; // call each loop\n        this.inner_tick_rate = 0;\n        this.left_indicator_range = this.left_strip.range(INDICATOR_LIGHT_START, INDICATOR_LIGHT_END);\n        this.left_brake_range = this.left_strip.range(INDICATOR_LIGHT_END, BRAKE_LIGHT_END - INDICATOR_LIGHT_END);\n        this.left_interior_range = this.left_strip.range(BRAKE_LIGHT_END, INTERIOR_LIGHT_END - BRAKE_LIGHT_END)\n        this.right_indicator_range = this.right_strip.range(INDICATOR_LIGHT_START, INDICATOR_LIGHT_END);\n        this.right_brake_range = this.right_strip.range(INDICATOR_LIGHT_END, BRAKE_LIGHT_END - INDICATOR_LIGHT_END);\n        this.right_interior_range = this.right_strip.range(BRAKE_LIGHT_END, INTERIOR_LIGHT_END - BRAKE_LIGHT_END)\n\n        this.averager = new AccelerometerAverage()\n    }\n    \n    initialise() {\n        this.default_strip_settings()\n        light_state.reset()\n        this.inner_tick_rate = 0\n\n        broadcastLightEffect(LightEffectMode.BikeLights)\n    }\n\n    tick() {\n        averager.sample()\n\n        if (averager.state == BikeState.Braking)\n            light_state.set_flag(LightState.Brake)\n        else\n            light_state.unset_flag(LightState.Brake)\n\n        if (light_state.get_flag(LightMode.NightLights)) {\n            setAllRgb(this.left_brake_range, 0xff0000)\n            setAllRgb(this.right_brake_range, 0xff0000)\n            this.left_brake_range.setBrightness(NIGHT_LIGHT_BRIGHTNESS);\n            this.right_brake_range.setBrightness(NIGHT_LIGHT_BRIGHTNESS);\n\n            setAllRgb(this.left_interior_range, 0xffffff)\n            setAllRgb(this.right_interior_range, 0xffffff)\n            this.left_interior_range.setBrightness(INTERIOR_LIGHT_BRIGHTNESS)\n            this.right_interior_range.setBrightness(INTERIOR_LIGHT_BRIGHTNESS)\n        }\n\n        if (light_state.get_flag(LightState.Brake)) {\n            setAllRgb(this.left_brake_range, 0xff0000)\n            setAllRgb(this.right_brake_range, 0xff0000)\n            this.left_brake_range.setBrightness(BRAKE_LIGHT_BRIGHTNESS);\n            this.right_brake_range.setBrightness(BRAKE_LIGHT_BRIGHTNESS);\n        }\n\n        if (!light_state.get_flag(LightMode.NightLights) && !light_state.get_flag(LightState.Brake)) {\n            setAllRgb(this.left_brake_range, 0)\n            setAllRgb(this.right_brake_range, 0)\n        }\n        \n        this.inner_tick_rate = (this.inner_tick_rate + 1) % STANDARD_QUANTUM;\n\n        if (this.inner_tick_rate == 0) {\n            if (light_state.get_flag(LightMode.IndicateLeft)) {\n                light_state.toggle_left_indicator()\n\n                if (light_state.get_flag(LightState.LeftIndicate)) {\n                    broadcastEffectCommand(BikeLightEffectState.LeftOn)\n                    setAllRgb(this.left_indicator_range, 0xffa500)\n                } else {\n                    setAllRgb(this.left_indicator_range, 0)\n                    broadcastEffectCommand(BikeLightEffectState.LeftOff)\n                }\n                    \n            } else {\n                setAllRgb(this.left_indicator_range, 0)\n            }\n\n            if (light_state.get_flag(LightMode.IndicateRight)) {\n                light_state.toggle_right_indicator()\n\n                if (light_state.get_flag(LightState.RightIndicate)) {\n                    broadcastEffectCommand(BikeLightEffectState.RightOn)\n                    setAllRgb(this.right_indicator_range, 0xffa500)\n                } else {\n                    setAllRgb(this.right_indicator_range, 0)\n                    broadcastEffectCommand(BikeLightEffectState.RightOff)\n                }\n            } else {\n                setAllRgb(this.right_indicator_range, 0)\n            }\n        }\n        \n    }\n}\n\nclass BikeLightsFaked extends Effect {\n    light_state: BikeLightState\n    left_brake_range: neopixel.Strip\n    left_indicator_range: neopixel.Strip\n    left_interior_range: neopixel.Strip\n    right_brake_range: neopixel.Strip\n    right_indicator_range: neopixel.Strip\n    right_interior_range: neopixel.Strip\n    averager: AccelerometerAverage;\n    inner_tick_rate: number\n\n    constructor(left_strip: neopixel.Strip, right_strip: neopixel.Strip) {\n        super(left_strip, right_strip)\n        this.tick_rate = 1; // call each loop\n        this.inner_tick_rate = 0;\n        this.left_indicator_range = this.left_strip.range(INDICATOR_LIGHT_START, INDICATOR_LIGHT_END);\n        this.left_brake_range = this.left_strip.range(INDICATOR_LIGHT_END, BRAKE_LIGHT_END - INDICATOR_LIGHT_END);\n        this.left_interior_range = this.left_strip.range(BRAKE_LIGHT_END, INTERIOR_LIGHT_END - BRAKE_LIGHT_END)\n        this.right_indicator_range = this.right_strip.range(INDICATOR_LIGHT_START, INDICATOR_LIGHT_END);\n        this.right_brake_range = this.right_strip.range(INDICATOR_LIGHT_END, BRAKE_LIGHT_END - INDICATOR_LIGHT_END);\n        this.right_interior_range = this.right_strip.range(BRAKE_LIGHT_END, INTERIOR_LIGHT_END - BRAKE_LIGHT_END)\n    }\n\n    initialise() {\n        this.default_strip_settings()\n        light_state.reset()\n        this.inner_tick_rate = 0\n\n        broadcastLightEffect(LightEffectMode.BikeLights)\n    }\n\n    tick() {\n        light_state.set_flag(LightMode.NightLights)\n        \n        if (light_state.get_flag(LightMode.NightLights)) {\n            setAllRgb(this.left_interior_range, 0xffffff)\n            setAllRgb(this.right_interior_range, 0xffffff)\n            this.left_interior_range.setBrightness(INTERIOR_LIGHT_BRIGHTNESS)\n            this.right_interior_range.setBrightness(INTERIOR_LIGHT_BRIGHTNESS)\n        }\n\n        // light_state.set_flag(LightState.Brake);\n        setAllRgb(this.left_brake_range, 0xff0000)\n        setAllRgb(this.right_brake_range, 0xff0000)\n        if (light_state.get_flag(LightState.Brake)) {\n            this.left_brake_range.setBrightness(BRAKE_LIGHT_BRIGHTNESS);\n            this.right_brake_range.setBrightness(BRAKE_LIGHT_BRIGHTNESS);\n        } else {\n            this.left_brake_range.setBrightness(NIGHT_LIGHT_BRIGHTNESS);\n            this.right_brake_range.setBrightness(NIGHT_LIGHT_BRIGHTNESS);\n        }\n\n        this.inner_tick_rate = (this.inner_tick_rate + 1) % STANDARD_QUANTUM;\n\n        if (this.inner_tick_rate == 0) {\n            if (light_state.get_flag(LightMode.IndicateLeft)) {\n                light_state.toggle_left_indicator()\n\n                if (light_state.get_flag(LightState.LeftIndicate)) {\n                    broadcastEffectCommand(BikeLightEffectState.LeftOn)\n                    setAllRgb(this.left_indicator_range, 0xffa500)\n                } else {\n                    setAllRgb(this.left_indicator_range, 0)\n                    broadcastEffectCommand(BikeLightEffectState.LeftOff)\n                }\n\n            } else {\n                setAllRgb(this.left_indicator_range, 0)\n            }\n\n            if (light_state.get_flag(LightMode.IndicateRight)) {\n                light_state.toggle_right_indicator()\n\n                if (light_state.get_flag(LightState.RightIndicate)) {\n                    broadcastEffectCommand(BikeLightEffectState.RightOn)\n                    setAllRgb(this.right_indicator_range, 0xffa500)\n                } else {\n                    setAllRgb(this.right_indicator_range, 0)\n                    broadcastEffectCommand(BikeLightEffectState.RightOff)\n                }\n            } else {\n                setAllRgb(this.right_indicator_range, 0)\n            }\n        }\n\n    }\n}\n\nradio.setGroup(RADIO_GROUP)\n\n\nconst processControlCommand = (command: number) => {\n    switch (command) {\n        case ControlCommand.Clear:\n            control.reset()\n            light_state.reset()\n            effects_idx = 0;\n            basic.showNumber(0);\n            break\n        case ControlCommand.IndicateLeft:\n            light_state.unset_flag(LightMode.IndicateRight)\n            light_state.toggle_mode(LightMode.IndicateLeft)\n            break\n        case ControlCommand.IndicateRight:\n            light_state.unset_flag(LightMode.IndicateLeft)\n            light_state.toggle_mode(LightMode.IndicateRight)\n            break\n        case ControlCommand.NightMode:\n            light_state.set_flag(LightMode.NightLights)\n            break\n        case ControlCommand.DayMode:\n            light_state.unset_flag(LightMode.NightLights)\n            break\n        case ControlCommand.NextMode:\n            effects_idx = (effects_idx + 1) % effects.length\n            basic.showNumber(effects_idx)\n            break\n        case ControlCommand.ForceBrakeLights:\n            light_state.toggle_state(LightState.Brake)\n            break\n    }\n}\n\nradio.onReceivedNumber((receivedNumber) => {\n    processControlCommand(receivedNumber)\n})\n\nconst averager = new AccelerometerAverage()\nconst light_state = new BikeLightState()\n\nlet left_strip = neopixel.create(DigitalPin.P0, STRIP_LENGTH, NeoPixelMode.RGB)\nlet right_strip = neopixel.create(DigitalPin.P1, STRIP_LENGTH, NeoPixelMode.RGB)\n\nlet effects = [new BikeLightsFaked(left_strip, right_strip), new Hazard(left_strip, right_strip), new Rainbow(left_strip, right_strip), new BumbleBee(left_strip, right_strip), new BikeLightsFaked(left_strip, right_strip)]\nlet effects_idx = 0\n\ninput.onButtonPressed(Button.AB, function() {\n    processControlCommand(ControlCommand.NextMode)\n})\n\ninput.onButtonPressed(Button.A, function () {\n    processControlCommand(ControlCommand.IndicateLeft)\n})\n \ninput.onButtonPressed(Button.B, function () {\n    // if (effects_idx == 4)\n    // {\n        processControlCommand(ControlCommand.ForceBrakeLights)\n    // } else {\n    //     processControlCommand(ControlCommand.IndicateRight)\n    // }\n    \n})\n\nconst startupEffect = new KnightRider(left_strip, right_strip)\n\nwhile (!startupEffect.done()) {\n    startupEffect.tick()\n    left_strip.show()\n    right_strip.show()\n    pause(5);\n}\n\nconst br = [0, 16, 32,64,128, 0xff]\n\nsetAllRgb(left_strip, 0xffffff)\nsetAllRgb(right_strip, 0xffffff)\n\nfor (let brightness of br) {\n    left_strip.setBrightness(brightness)\n    left_strip.show()\n    right_strip.show()\n    pause(25)\n}\n\nbasic.showNumber(effects_idx);\n\nlet prev_effect_idx = -1;\nlet effect_counter = 0;\nbasic.forever(function () {\n    const effect: Effect = effects[effects_idx]\n\n    if (prev_effect_idx != effects_idx) {\n        effect_counter = 0;\n        effect.initialise()\n        console.log(\"init\")\n        prev_effect_idx = effects_idx;\n        left_strip.show()\n        right_strip.show()\n    }\n\n    effect_counter = (effect_counter + 1) % effect.tick_rate;\n\n    if (effect_counter == 0) {\n        effect.tick()\n        left_strip.show()\n        right_strip.show()\n    }\n    basic.pause(PAUSE_QUANTUM)\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"bike-lights\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"neopixel\": \"github:microsoft/pxt-neopixel#v0.7.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1727337817763}